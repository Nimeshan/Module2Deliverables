{
	"id": "6a1781c8ec87ebbe8f73858d36d31aa4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract NFTStaking {\r\n    IERC20 public token;\r\n    IERC721 public nft;\r\n    mapping(uint256 => address) public stakedBy;\r\n    mapping(uint256 => uint256) public lastClaim;\r\n    uint256 public rewardPerDay = 10 * 10 ** 18;\r\n    uint256 public stakingTime = 1 days; // Set lower for testing\r\n\r\n    constructor(IERC20 _token, IERC721 _nft) {\r\n        token = _token;\r\n        nft = _nft;\r\n    }\r\n\r\n    function stakeNFT(uint256 tokenId) public {\r\n        require(nft.ownerOf(tokenId) == msg.sender, \"Not the owner\");\r\n        require(stakedBy[tokenId] == address(0), \"Already staked\");\r\n        nft.transferFrom(msg.sender, address(this), tokenId);\r\n        stakedBy[tokenId] = msg.sender;\r\n        lastClaim[tokenId] = block.timestamp;\r\n    }\r\n\r\n    function claimRewards(uint256 tokenId) public {\r\n        require(stakedBy[tokenId] == msg.sender, \"Not staked by you\");\r\n        require(block.timestamp >= lastClaim[tokenId] + stakingTime, \"Too soon to claim\");\r\n        token.transfer(msg.sender, rewardPerDay);\r\n        lastClaim[tokenId] = block.timestamp;\r\n    }\r\n\r\n    function unstakeNFT(uint256 tokenId) public {\r\n        require(stakedBy[tokenId] == msg.sender, \"Not staked by you\");\r\n        nft.transferFrom(address(this), msg.sender, tokenId);\r\n        delete stakedBy[tokenId];\r\n        delete lastClaim[tokenId];\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFTStaking.sol": {
				"NFTStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "contract IERC721",
									"name": "_nft",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lastClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakedBy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unstakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTStaking.sol\":235:1570  contract NFTStaking {... */\n  mstore(0x40, 0x80)\n    /* \"NFTStaking.sol\":444:457  10 * 10 ** 18 */\n  0x8ac7230489e80000\n    /* \"NFTStaking.sol\":414:457  uint256 public rewardPerDay = 10 * 10 ** 18 */\n  0x04\n  sstore\n    /* \"NFTStaking.sol\":493:499  1 days */\n  0x015180\n    /* \"NFTStaking.sol\":464:499  uint256 public stakingTime = 1 days */\n  0x05\n  sstore\n    /* \"NFTStaking.sol\":533:628  constructor(IERC20 _token, IERC721 _nft) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NFTStaking.sol\":593:599  _token */\n  dup2\n    /* \"NFTStaking.sol\":585:590  token */\n  0x00\n  dup1\n    /* \"NFTStaking.sol\":585:599  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTStaking.sol\":616:620  _nft */\n  dup1\n    /* \"NFTStaking.sol\":610:613  nft */\n  0x01\n  0x00\n    /* \"NFTStaking.sol\":610:620  nft = _nft */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTStaking.sol\":533:628  constructor(IERC20 _token, IERC721 _nft) {... */\n  pop\n  pop\n    /* \"NFTStaking.sol\":235:1570  contract NFTStaking {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_24\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_12:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_26\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_13:\n    /* \"#utility.yul\":771:809   */\n  tag_28\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_29:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_14:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_31\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1128   */\ntag_15:\n    /* \"#utility.yul\":1069:1076   */\n  0x00\n    /* \"#utility.yul\":1098:1122   */\n  tag_33\n    /* \"#utility.yul\":1116:1121   */\n  dup3\n    /* \"#utility.yul\":1098:1122   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1087:1122   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1128   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1134:1286   */\ntag_16:\n    /* \"#utility.yul\":1222:1261   */\n  tag_35\n    /* \"#utility.yul\":1255:1260   */\n  dup2\n    /* \"#utility.yul\":1222:1261   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1215:1220   */\n  dup2\n    /* \"#utility.yul\":1212:1262   */\n  eq\n    /* \"#utility.yul\":1202:1280   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1273:1274   */\n  dup1\n    /* \"#utility.yul\":1266:1278   */\n  revert\n    /* \"#utility.yul\":1202:1280   */\ntag_36:\n    /* \"#utility.yul\":1134:1286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1292:1465   */\ntag_17:\n    /* \"#utility.yul\":1364:1369   */\n  0x00\n    /* \"#utility.yul\":1395:1401   */\n  dup2\n    /* \"#utility.yul\":1389:1402   */\n  mload\n    /* \"#utility.yul\":1380:1402   */\n  swap1\n  pop\n    /* \"#utility.yul\":1411:1459   */\n  tag_38\n    /* \"#utility.yul\":1453:1458   */\n  dup2\n    /* \"#utility.yul\":1411:1459   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1292:1465   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:2036   */\ntag_3:\n    /* \"#utility.yul\":1579:1585   */\n  0x00\n    /* \"#utility.yul\":1587:1593   */\n  dup1\n    /* \"#utility.yul\":1636:1638   */\n  0x40\n    /* \"#utility.yul\":1624:1633   */\n  dup4\n    /* \"#utility.yul\":1615:1622   */\n  dup6\n    /* \"#utility.yul\":1611:1634   */\n  sub\n    /* \"#utility.yul\":1607:1639   */\n  slt\n    /* \"#utility.yul\":1604:1723   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1642:1721   */\n  tag_41\n  tag_8\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1604:1723   */\ntag_40:\n    /* \"#utility.yul\":1762:1763   */\n  0x00\n    /* \"#utility.yul\":1787:1865   */\n  tag_42\n    /* \"#utility.yul\":1857:1864   */\n  dup6\n    /* \"#utility.yul\":1848:1854   */\n  dup3\n    /* \"#utility.yul\":1837:1846   */\n  dup7\n    /* \"#utility.yul\":1833:1855   */\n  add\n    /* \"#utility.yul\":1787:1865   */\n  tag_14\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1777:1865   */\n  swap3\n  pop\n    /* \"#utility.yul\":1733:1875   */\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1940:2019   */\n  tag_43\n    /* \"#utility.yul\":2011:2018   */\n  dup6\n    /* \"#utility.yul\":2002:2008   */\n  dup3\n    /* \"#utility.yul\":1991:2000   */\n  dup7\n    /* \"#utility.yul\":1987:2009   */\n  add\n    /* \"#utility.yul\":1940:2019   */\n  tag_17\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1930:2019   */\n  swap2\n  pop\n    /* \"#utility.yul\":1885:2029   */\n  pop\n    /* \"#utility.yul\":1471:2036   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"NFTStaking.sol\":235:1570  contract NFTStaking {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTStaking.sol\":235:1570  contract NFTStaking {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6eb604e0\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x6eb604e0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9ee4af10\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xaf8f42b8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc1dfa0bb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0962ef79\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x146d4574\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3d3728b5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NFTStaking.sol\":985:1301  function claimRewards(uint256 tokenId) public {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"NFTStaking.sol\":464:499  uint256 public stakingTime = 1 days */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStaking.sol\":363:407  mapping(uint256 => uint256) public lastClaim */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStaking.sol\":288:306  IERC721 public nft */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStaking.sol\":636:977  function stakeNFT(uint256 tokenId) public {... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"NFTStaking.sol\":313:356  mapping(uint256 => address) public stakedBy */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStaking.sol\":414:457  uint256 public rewardPerDay = 10 * 10 ** 18 */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStaking.sol\":1309:1567  function unstakeNFT(uint256 tokenId) public {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"NFTStaking.sol\":262:281  IERC20 public token */\n    tag_11:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTStaking.sol\":985:1301  function claimRewards(uint256 tokenId) public {... */\n    tag_16:\n        /* \"NFTStaking.sol\":1071:1081  msg.sender */\n      caller\n        /* \"NFTStaking.sol\":1050:1081  stakedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":1050:1058  stakedBy */\n      0x02\n        /* \"NFTStaking.sol\":1050:1067  stakedBy[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":1059:1066  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":1050:1067  stakedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":1050:1081  stakedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTStaking.sol\":1042:1103  require(stakedBy[tokenId] == msg.sender, \"Not staked by you\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"NFTStaking.sol\":1162:1173  stakingTime */\n      sload(0x05)\n        /* \"NFTStaking.sol\":1141:1150  lastClaim */\n      0x03\n        /* \"NFTStaking.sol\":1141:1159  lastClaim[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":1151:1158  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":1141:1159  lastClaim[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFTStaking.sol\":1141:1173  lastClaim[tokenId] + stakingTime */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"NFTStaking.sol\":1122:1137  block.timestamp */\n      timestamp\n        /* \"NFTStaking.sol\":1122:1173  block.timestamp >= lastClaim[tokenId] + stakingTime */\n      lt\n      iszero\n        /* \"NFTStaking.sol\":1114:1195  require(block.timestamp >= lastClaim[tokenId] + stakingTime, \"Too soon to claim\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"NFTStaking.sol\":1206:1211  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":1206:1220  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"NFTStaking.sol\":1221:1231  msg.sender */\n      caller\n        /* \"NFTStaking.sol\":1233:1245  rewardPerDay */\n      sload(0x04)\n        /* \"NFTStaking.sol\":1206:1246  token.transfer(msg.sender, rewardPerDay) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      pop\n        /* \"NFTStaking.sol\":1278:1293  block.timestamp */\n      timestamp\n        /* \"NFTStaking.sol\":1257:1266  lastClaim */\n      0x03\n        /* \"NFTStaking.sol\":1257:1275  lastClaim[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":1267:1274  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":1257:1275  lastClaim[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTStaking.sol\":1257:1293  lastClaim[tokenId] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStaking.sol\":985:1301  function claimRewards(uint256 tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"NFTStaking.sol\":464:499  uint256 public stakingTime = 1 days */\n    tag_18:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"NFTStaking.sol\":363:407  mapping(uint256 => uint256) public lastClaim */\n    tag_23:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"NFTStaking.sol\":288:306  IERC721 public nft */\n    tag_26:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTStaking.sol\":636:977  function stakeNFT(uint256 tokenId) public {... */\n    tag_31:\n        /* \"NFTStaking.sol\":721:731  msg.sender */\n      caller\n        /* \"NFTStaking.sol\":697:731  nft.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":697:700  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":697:708  nft.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"NFTStaking.sol\":709:716  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":697:717  nft.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"NFTStaking.sol\":697:731  nft.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTStaking.sol\":689:749  require(nft.ownerOf(tokenId) == msg.sender, \"Not the owner\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"NFTStaking.sol\":797:798  0 */\n      0x00\n        /* \"NFTStaking.sol\":768:799  stakedBy[tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":768:776  stakedBy */\n      0x02\n        /* \"NFTStaking.sol\":768:785  stakedBy[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":777:784  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":768:785  stakedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":768:799  stakedBy[tokenId] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTStaking.sol\":760:818  require(stakedBy[tokenId] == address(0), \"Already staked\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"NFTStaking.sol\":829:832  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":829:845  nft.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"NFTStaking.sol\":846:856  msg.sender */\n      caller\n        /* \"NFTStaking.sol\":866:870  this */\n      address\n        /* \"NFTStaking.sol\":873:880  tokenId */\n      dup5\n        /* \"NFTStaking.sol\":829:881  nft.transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTStaking.sol\":912:922  msg.sender */\n      caller\n        /* \"NFTStaking.sol\":892:900  stakedBy */\n      0x02\n        /* \"NFTStaking.sol\":892:909  stakedBy[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":901:908  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":892:909  stakedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTStaking.sol\":892:922  stakedBy[tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTStaking.sol\":954:969  block.timestamp */\n      timestamp\n        /* \"NFTStaking.sol\":933:942  lastClaim */\n      0x03\n        /* \"NFTStaking.sol\":933:951  lastClaim[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":943:950  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":933:951  lastClaim[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTStaking.sol\":933:969  lastClaim[tokenId] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTStaking.sol\":636:977  function stakeNFT(uint256 tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"NFTStaking.sol\":313:356  mapping(uint256 => address) public stakedBy */\n    tag_34:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTStaking.sol\":414:457  uint256 public rewardPerDay = 10 * 10 ** 18 */\n    tag_38:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"NFTStaking.sol\":1309:1567  function unstakeNFT(uint256 tokenId) public {... */\n    tag_42:\n        /* \"NFTStaking.sol\":1393:1403  msg.sender */\n      caller\n        /* \"NFTStaking.sol\":1372:1403  stakedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":1372:1380  stakedBy */\n      0x02\n        /* \"NFTStaking.sol\":1372:1389  stakedBy[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":1381:1388  tokenId */\n      dup4\n        /* \"NFTStaking.sol\":1372:1389  stakedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":1372:1403  stakedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTStaking.sol\":1364:1425  require(stakedBy[tokenId] == msg.sender, \"Not staked by you\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_50\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"NFTStaking.sol\":1436:1439  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTStaking.sol\":1436:1452  nft.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"NFTStaking.sol\":1461:1465  this */\n      address\n        /* \"NFTStaking.sol\":1468:1478  msg.sender */\n      caller\n        /* \"NFTStaking.sol\":1480:1487  tokenId */\n      dup5\n        /* \"NFTStaking.sol\":1436:1488  nft.transferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_82:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTStaking.sol\":1506:1514  stakedBy */\n      0x02\n        /* \"NFTStaking.sol\":1506:1523  stakedBy[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":1515:1522  tokenId */\n      dup3\n        /* \"NFTStaking.sol\":1506:1523  stakedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTStaking.sol\":1499:1523  delete stakedBy[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"NFTStaking.sol\":1541:1550  lastClaim */\n      0x03\n        /* \"NFTStaking.sol\":1541:1559  lastClaim[tokenId] */\n      0x00\n        /* \"NFTStaking.sol\":1551:1558  tokenId */\n      dup3\n        /* \"NFTStaking.sol\":1541:1559  lastClaim[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTStaking.sol\":1534:1559  delete lastClaim[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"NFTStaking.sol\":1309:1567  function unstakeNFT(uint256 tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"NFTStaking.sol\":262:281  IERC20 public token */\n    tag_44:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_87:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_89:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_90:\n        /* \"#utility.yul\":490:514   */\n      tag_124\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_89\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_125:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_91:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_127\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_90\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_15:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_130\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":766:885   */\n    tag_129:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_131\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_91\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_92:\n        /* \"#utility.yul\":1112:1136   */\n      tag_133\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_89\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_20:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_135\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_92\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_93:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_94:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_95:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_139\n        /* \"#utility.yul\":1676:1710   */\n      tag_140\n        /* \"#utility.yul\":1685:1709   */\n      tag_141\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_93\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1676:1710   */\n      tag_94\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1658:1711   */\n      tag_93\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_96:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_143\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_95\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1996   */\n    tag_97:\n        /* \"#utility.yul\":1920:1929   */\n      0x00\n        /* \"#utility.yul\":1953:1990   */\n      tag_145\n        /* \"#utility.yul\":1984:1989   */\n      dup3\n        /* \"#utility.yul\":1953:1990   */\n      tag_96\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1940:1990   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2002:2163   */\n    tag_98:\n        /* \"#utility.yul\":2104:2156   */\n      tag_147\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2104:2156   */\n      tag_97\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2099:2102   */\n      dup3\n        /* \"#utility.yul\":2092:2157   */\n      mstore\n        /* \"#utility.yul\":2002:2163   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2169:2421   */\n    tag_28:\n        /* \"#utility.yul\":2277:2281   */\n      0x00\n        /* \"#utility.yul\":2315:2317   */\n      0x20\n        /* \"#utility.yul\":2304:2313   */\n      dup3\n        /* \"#utility.yul\":2300:2318   */\n      add\n        /* \"#utility.yul\":2292:2318   */\n      swap1\n      pop\n        /* \"#utility.yul\":2328:2414   */\n      tag_149\n        /* \"#utility.yul\":2411:2412   */\n      0x00\n        /* \"#utility.yul\":2400:2409   */\n      dup4\n        /* \"#utility.yul\":2396:2413   */\n      add\n        /* \"#utility.yul\":2387:2393   */\n      dup5\n        /* \"#utility.yul\":2328:2414   */\n      tag_98\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2169:2421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2427:2523   */\n    tag_99:\n        /* \"#utility.yul\":2464:2471   */\n      0x00\n        /* \"#utility.yul\":2493:2517   */\n      tag_151\n        /* \"#utility.yul\":2511:2516   */\n      dup3\n        /* \"#utility.yul\":2493:2517   */\n      tag_93\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2482:2517   */\n      swap1\n      pop\n        /* \"#utility.yul\":2427:2523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2529:2647   */\n    tag_100:\n        /* \"#utility.yul\":2616:2640   */\n      tag_153\n        /* \"#utility.yul\":2634:2639   */\n      dup2\n        /* \"#utility.yul\":2616:2640   */\n      tag_99\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2611:2614   */\n      dup3\n        /* \"#utility.yul\":2604:2641   */\n      mstore\n        /* \"#utility.yul\":2529:2647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2653:2875   */\n    tag_36:\n        /* \"#utility.yul\":2746:2750   */\n      0x00\n        /* \"#utility.yul\":2784:2786   */\n      0x20\n        /* \"#utility.yul\":2773:2782   */\n      dup3\n        /* \"#utility.yul\":2769:2787   */\n      add\n        /* \"#utility.yul\":2761:2787   */\n      swap1\n      pop\n        /* \"#utility.yul\":2797:2868   */\n      tag_155\n        /* \"#utility.yul\":2865:2866   */\n      0x00\n        /* \"#utility.yul\":2854:2863   */\n      dup4\n        /* \"#utility.yul\":2850:2867   */\n      add\n        /* \"#utility.yul\":2841:2847   */\n      dup5\n        /* \"#utility.yul\":2797:2868   */\n      tag_100\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2653:2875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3021   */\n    tag_101:\n        /* \"#utility.yul\":2945:2954   */\n      0x00\n        /* \"#utility.yul\":2978:3015   */\n      tag_157\n        /* \"#utility.yul\":3009:3014   */\n      dup3\n        /* \"#utility.yul\":2978:3015   */\n      tag_96\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2965:3015   */\n      swap1\n      pop\n        /* \"#utility.yul\":2881:3021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3027:3186   */\n    tag_102:\n        /* \"#utility.yul\":3128:3179   */\n      tag_159\n        /* \"#utility.yul\":3173:3178   */\n      dup2\n        /* \"#utility.yul\":3128:3179   */\n      tag_101\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3123:3126   */\n      dup3\n        /* \"#utility.yul\":3116:3180   */\n      mstore\n        /* \"#utility.yul\":3027:3186   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3192:3442   */\n    tag_46:\n        /* \"#utility.yul\":3299:3303   */\n      0x00\n        /* \"#utility.yul\":3337:3339   */\n      0x20\n        /* \"#utility.yul\":3326:3335   */\n      dup3\n        /* \"#utility.yul\":3322:3340   */\n      add\n        /* \"#utility.yul\":3314:3340   */\n      swap1\n      pop\n        /* \"#utility.yul\":3350:3435   */\n      tag_161\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3350:3435   */\n      tag_102\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3192:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3617   */\n    tag_103:\n        /* \"#utility.yul\":3532:3543   */\n      0x00\n        /* \"#utility.yul\":3566:3572   */\n      dup3\n        /* \"#utility.yul\":3561:3564   */\n      dup3\n        /* \"#utility.yul\":3554:3573   */\n      mstore\n        /* \"#utility.yul\":3606:3610   */\n      0x20\n        /* \"#utility.yul\":3601:3604   */\n      dup3\n        /* \"#utility.yul\":3597:3611   */\n      add\n        /* \"#utility.yul\":3582:3611   */\n      swap1\n      pop\n        /* \"#utility.yul\":3448:3617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3790   */\n    tag_104:\n        /* \"#utility.yul\":3763:3782   */\n      0x4e6f74207374616b656420627920796f75000000000000000000000000000000\n        /* \"#utility.yul\":3759:3760   */\n      0x00\n        /* \"#utility.yul\":3751:3757   */\n      dup3\n        /* \"#utility.yul\":3747:3761   */\n      add\n        /* \"#utility.yul\":3740:3783   */\n      mstore\n        /* \"#utility.yul\":3623:3790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3796:4162   */\n    tag_105:\n        /* \"#utility.yul\":3938:3941   */\n      0x00\n        /* \"#utility.yul\":3959:4026   */\n      tag_165\n        /* \"#utility.yul\":4023:4025   */\n      0x11\n        /* \"#utility.yul\":4018:4021   */\n      dup4\n        /* \"#utility.yul\":3959:4026   */\n      tag_103\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3952:4026   */\n      swap2\n      pop\n        /* \"#utility.yul\":4035:4128   */\n      tag_166\n        /* \"#utility.yul\":4124:4127   */\n      dup3\n        /* \"#utility.yul\":4035:4128   */\n      tag_104\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"#utility.yul\":4148:4151   */\n      dup3\n        /* \"#utility.yul\":4144:4156   */\n      add\n        /* \"#utility.yul\":4137:4156   */\n      swap1\n      pop\n        /* \"#utility.yul\":3796:4162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4168:4587   */\n    tag_50:\n        /* \"#utility.yul\":4334:4338   */\n      0x00\n        /* \"#utility.yul\":4372:4374   */\n      0x20\n        /* \"#utility.yul\":4361:4370   */\n      dup3\n        /* \"#utility.yul\":4357:4375   */\n      add\n        /* \"#utility.yul\":4349:4375   */\n      swap1\n      pop\n        /* \"#utility.yul\":4421:4430   */\n      dup2\n        /* \"#utility.yul\":4415:4419   */\n      dup2\n        /* \"#utility.yul\":4411:4431   */\n      sub\n        /* \"#utility.yul\":4407:4408   */\n      0x00\n        /* \"#utility.yul\":4396:4405   */\n      dup4\n        /* \"#utility.yul\":4392:4409   */\n      add\n        /* \"#utility.yul\":4385:4432   */\n      mstore\n        /* \"#utility.yul\":4449:4580   */\n      tag_168\n        /* \"#utility.yul\":4575:4579   */\n      dup2\n        /* \"#utility.yul\":4449:4580   */\n      tag_105\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4441:4580   */\n      swap1\n      pop\n        /* \"#utility.yul\":4168:4587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4593:4773   */\n    tag_106:\n        /* \"#utility.yul\":4641:4718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4638:4639   */\n      0x00\n        /* \"#utility.yul\":4631:4719   */\n      mstore\n        /* \"#utility.yul\":4738:4742   */\n      0x11\n        /* \"#utility.yul\":4735:4736   */\n      0x04\n        /* \"#utility.yul\":4728:4743   */\n      mstore\n        /* \"#utility.yul\":4762:4766   */\n      0x24\n        /* \"#utility.yul\":4759:4760   */\n      0x00\n        /* \"#utility.yul\":4752:4767   */\n      revert\n        /* \"#utility.yul\":4779:4970   */\n    tag_52:\n        /* \"#utility.yul\":4819:4822   */\n      0x00\n        /* \"#utility.yul\":4838:4858   */\n      tag_171\n        /* \"#utility.yul\":4856:4857   */\n      dup3\n        /* \"#utility.yul\":4838:4858   */\n      tag_89\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4833:4858   */\n      swap2\n      pop\n        /* \"#utility.yul\":4872:4892   */\n      tag_172\n        /* \"#utility.yul\":4890:4891   */\n      dup4\n        /* \"#utility.yul\":4872:4892   */\n      tag_89\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4867:4892   */\n      swap3\n      pop\n        /* \"#utility.yul\":4915:4916   */\n      dup3\n        /* \"#utility.yul\":4912:4913   */\n      dup3\n        /* \"#utility.yul\":4908:4917   */\n      add\n        /* \"#utility.yul\":4901:4917   */\n      swap1\n      pop\n        /* \"#utility.yul\":4936:4939   */\n      dup1\n        /* \"#utility.yul\":4933:4934   */\n      dup3\n        /* \"#utility.yul\":4930:4940   */\n      gt\n        /* \"#utility.yul\":4927:4963   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":4943:4961   */\n      tag_174\n      tag_106\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4927:4963   */\n    tag_173:\n        /* \"#utility.yul\":4779:4970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4976:5143   */\n    tag_107:\n        /* \"#utility.yul\":5116:5135   */\n      0x546f6f20736f6f6e20746f20636c61696d000000000000000000000000000000\n        /* \"#utility.yul\":5112:5113   */\n      0x00\n        /* \"#utility.yul\":5104:5110   */\n      dup3\n        /* \"#utility.yul\":5100:5114   */\n      add\n        /* \"#utility.yul\":5093:5136   */\n      mstore\n        /* \"#utility.yul\":4976:5143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5149:5515   */\n    tag_108:\n        /* \"#utility.yul\":5291:5294   */\n      0x00\n        /* \"#utility.yul\":5312:5379   */\n      tag_177\n        /* \"#utility.yul\":5376:5378   */\n      0x11\n        /* \"#utility.yul\":5371:5374   */\n      dup4\n        /* \"#utility.yul\":5312:5379   */\n      tag_103\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5305:5379   */\n      swap2\n      pop\n        /* \"#utility.yul\":5388:5481   */\n      tag_178\n        /* \"#utility.yul\":5477:5480   */\n      dup3\n        /* \"#utility.yul\":5388:5481   */\n      tag_107\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5506:5508   */\n      0x20\n        /* \"#utility.yul\":5501:5504   */\n      dup3\n        /* \"#utility.yul\":5497:5509   */\n      add\n        /* \"#utility.yul\":5490:5509   */\n      swap1\n      pop\n        /* \"#utility.yul\":5149:5515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5521:5940   */\n    tag_55:\n        /* \"#utility.yul\":5687:5691   */\n      0x00\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"#utility.yul\":5714:5723   */\n      dup3\n        /* \"#utility.yul\":5710:5728   */\n      add\n        /* \"#utility.yul\":5702:5728   */\n      swap1\n      pop\n        /* \"#utility.yul\":5774:5783   */\n      dup2\n        /* \"#utility.yul\":5768:5772   */\n      dup2\n        /* \"#utility.yul\":5764:5784   */\n      sub\n        /* \"#utility.yul\":5760:5761   */\n      0x00\n        /* \"#utility.yul\":5749:5758   */\n      dup4\n        /* \"#utility.yul\":5745:5762   */\n      add\n        /* \"#utility.yul\":5738:5785   */\n      mstore\n        /* \"#utility.yul\":5802:5933   */\n      tag_180\n        /* \"#utility.yul\":5928:5932   */\n      dup2\n        /* \"#utility.yul\":5802:5933   */\n      tag_108\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5794:5933   */\n      swap1\n      pop\n        /* \"#utility.yul\":5521:5940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5946:6278   */\n    tag_57:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x40\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_182\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup6\n        /* \"#utility.yul\":6118:6189   */\n      tag_100\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6199:6271   */\n      tag_183\n        /* \"#utility.yul\":6267:6269   */\n      0x20\n        /* \"#utility.yul\":6256:6265   */\n      dup4\n        /* \"#utility.yul\":6252:6270   */\n      add\n        /* \"#utility.yul\":6243:6249   */\n      dup5\n        /* \"#utility.yul\":6199:6271   */\n      tag_92\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5946:6278   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6284:6374   */\n    tag_109:\n        /* \"#utility.yul\":6318:6325   */\n      0x00\n        /* \"#utility.yul\":6361:6366   */\n      dup2\n        /* \"#utility.yul\":6354:6367   */\n      iszero\n        /* \"#utility.yul\":6347:6368   */\n      iszero\n        /* \"#utility.yul\":6336:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6284:6374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6380:6496   */\n    tag_110:\n        /* \"#utility.yul\":6450:6471   */\n      tag_186\n        /* \"#utility.yul\":6465:6470   */\n      dup2\n        /* \"#utility.yul\":6450:6471   */\n      tag_109\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6443:6448   */\n      dup2\n        /* \"#utility.yul\":6440:6472   */\n      eq\n        /* \"#utility.yul\":6430:6490   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":6486:6487   */\n      0x00\n        /* \"#utility.yul\":6483:6484   */\n      dup1\n        /* \"#utility.yul\":6476:6488   */\n      revert\n        /* \"#utility.yul\":6430:6490   */\n    tag_187:\n        /* \"#utility.yul\":6380:6496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6502:6639   */\n    tag_111:\n        /* \"#utility.yul\":6556:6561   */\n      0x00\n        /* \"#utility.yul\":6587:6593   */\n      dup2\n        /* \"#utility.yul\":6581:6594   */\n      mload\n        /* \"#utility.yul\":6572:6594   */\n      swap1\n      pop\n        /* \"#utility.yul\":6603:6633   */\n      tag_189\n        /* \"#utility.yul\":6627:6632   */\n      dup2\n        /* \"#utility.yul\":6603:6633   */\n      tag_110\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6502:6639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:6990   */\n    tag_61:\n        /* \"#utility.yul\":6712:6718   */\n      0x00\n        /* \"#utility.yul\":6761:6763   */\n      0x20\n        /* \"#utility.yul\":6749:6758   */\n      dup3\n        /* \"#utility.yul\":6740:6747   */\n      dup5\n        /* \"#utility.yul\":6736:6759   */\n      sub\n        /* \"#utility.yul\":6732:6764   */\n      slt\n        /* \"#utility.yul\":6729:6848   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":6767:6846   */\n      tag_192\n      tag_87\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6729:6848   */\n    tag_191:\n        /* \"#utility.yul\":6887:6888   */\n      0x00\n        /* \"#utility.yul\":6912:6973   */\n      tag_193\n        /* \"#utility.yul\":6965:6972   */\n      dup5\n        /* \"#utility.yul\":6956:6962   */\n      dup3\n        /* \"#utility.yul\":6945:6954   */\n      dup6\n        /* \"#utility.yul\":6941:6963   */\n      add\n        /* \"#utility.yul\":6912:6973   */\n      tag_111\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6902:6973   */\n      swap2\n      pop\n        /* \"#utility.yul\":6858:6983   */\n      pop\n        /* \"#utility.yul\":6645:6990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6996:7118   */\n    tag_112:\n        /* \"#utility.yul\":7069:7093   */\n      tag_195\n        /* \"#utility.yul\":7087:7092   */\n      dup2\n        /* \"#utility.yul\":7069:7093   */\n      tag_99\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7062:7067   */\n      dup2\n        /* \"#utility.yul\":7059:7094   */\n      eq\n        /* \"#utility.yul\":7049:7112   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":7108:7109   */\n      0x00\n        /* \"#utility.yul\":7105:7106   */\n      dup1\n        /* \"#utility.yul\":7098:7110   */\n      revert\n        /* \"#utility.yul\":7049:7112   */\n    tag_196:\n        /* \"#utility.yul\":6996:7118   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7124:7267   */\n    tag_113:\n        /* \"#utility.yul\":7181:7186   */\n      0x00\n        /* \"#utility.yul\":7212:7218   */\n      dup2\n        /* \"#utility.yul\":7206:7219   */\n      mload\n        /* \"#utility.yul\":7197:7219   */\n      swap1\n      pop\n        /* \"#utility.yul\":7228:7261   */\n      tag_198\n        /* \"#utility.yul\":7255:7260   */\n      dup2\n        /* \"#utility.yul\":7228:7261   */\n      tag_112\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7124:7267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7273:7624   */\n    tag_67:\n        /* \"#utility.yul\":7343:7349   */\n      0x00\n        /* \"#utility.yul\":7392:7394   */\n      0x20\n        /* \"#utility.yul\":7380:7389   */\n      dup3\n        /* \"#utility.yul\":7371:7378   */\n      dup5\n        /* \"#utility.yul\":7367:7390   */\n      sub\n        /* \"#utility.yul\":7363:7395   */\n      slt\n        /* \"#utility.yul\":7360:7479   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":7398:7477   */\n      tag_201\n      tag_87\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7360:7479   */\n    tag_200:\n        /* \"#utility.yul\":7518:7519   */\n      0x00\n        /* \"#utility.yul\":7543:7607   */\n      tag_202\n        /* \"#utility.yul\":7599:7606   */\n      dup5\n        /* \"#utility.yul\":7590:7596   */\n      dup3\n        /* \"#utility.yul\":7579:7588   */\n      dup6\n        /* \"#utility.yul\":7575:7597   */\n      add\n        /* \"#utility.yul\":7543:7607   */\n      tag_113\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7533:7607   */\n      swap2\n      pop\n        /* \"#utility.yul\":7489:7617   */\n      pop\n        /* \"#utility.yul\":7273:7624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7630:7793   */\n    tag_114:\n        /* \"#utility.yul\":7770:7785   */\n      0x4e6f7420746865206f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":7766:7767   */\n      0x00\n        /* \"#utility.yul\":7758:7764   */\n      dup3\n        /* \"#utility.yul\":7754:7768   */\n      add\n        /* \"#utility.yul\":7747:7786   */\n      mstore\n        /* \"#utility.yul\":7630:7793   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7799:8165   */\n    tag_115:\n        /* \"#utility.yul\":7941:7944   */\n      0x00\n        /* \"#utility.yul\":7962:8029   */\n      tag_205\n        /* \"#utility.yul\":8026:8028   */\n      0x0d\n        /* \"#utility.yul\":8021:8024   */\n      dup4\n        /* \"#utility.yul\":7962:8029   */\n      tag_103\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7955:8029   */\n      swap2\n      pop\n        /* \"#utility.yul\":8038:8131   */\n      tag_206\n        /* \"#utility.yul\":8127:8130   */\n      dup3\n        /* \"#utility.yul\":8038:8131   */\n      tag_114\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8156:8158   */\n      0x20\n        /* \"#utility.yul\":8151:8154   */\n      dup3\n        /* \"#utility.yul\":8147:8159   */\n      add\n        /* \"#utility.yul\":8140:8159   */\n      swap1\n      pop\n        /* \"#utility.yul\":7799:8165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8171:8590   */\n    tag_70:\n        /* \"#utility.yul\":8337:8341   */\n      0x00\n        /* \"#utility.yul\":8375:8377   */\n      0x20\n        /* \"#utility.yul\":8364:8373   */\n      dup3\n        /* \"#utility.yul\":8360:8378   */\n      add\n        /* \"#utility.yul\":8352:8378   */\n      swap1\n      pop\n        /* \"#utility.yul\":8424:8433   */\n      dup2\n        /* \"#utility.yul\":8418:8422   */\n      dup2\n        /* \"#utility.yul\":8414:8434   */\n      sub\n        /* \"#utility.yul\":8410:8411   */\n      0x00\n        /* \"#utility.yul\":8399:8408   */\n      dup4\n        /* \"#utility.yul\":8395:8412   */\n      add\n        /* \"#utility.yul\":8388:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8583   */\n      tag_208\n        /* \"#utility.yul\":8578:8582   */\n      dup2\n        /* \"#utility.yul\":8452:8583   */\n      tag_115\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8444:8583   */\n      swap1\n      pop\n        /* \"#utility.yul\":8171:8590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8596:8760   */\n    tag_116:\n        /* \"#utility.yul\":8736:8752   */\n      0x416c7265616479207374616b6564000000000000000000000000000000000000\n        /* \"#utility.yul\":8732:8733   */\n      0x00\n        /* \"#utility.yul\":8724:8730   */\n      dup3\n        /* \"#utility.yul\":8720:8734   */\n      add\n        /* \"#utility.yul\":8713:8753   */\n      mstore\n        /* \"#utility.yul\":8596:8760   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8766:9132   */\n    tag_117:\n        /* \"#utility.yul\":8908:8911   */\n      0x00\n        /* \"#utility.yul\":8929:8996   */\n      tag_211\n        /* \"#utility.yul\":8993:8995   */\n      0x0e\n        /* \"#utility.yul\":8988:8991   */\n      dup4\n        /* \"#utility.yul\":8929:8996   */\n      tag_103\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8922:8996   */\n      swap2\n      pop\n        /* \"#utility.yul\":9005:9098   */\n      tag_212\n        /* \"#utility.yul\":9094:9097   */\n      dup3\n        /* \"#utility.yul\":9005:9098   */\n      tag_116\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":9123:9125   */\n      0x20\n        /* \"#utility.yul\":9118:9121   */\n      dup3\n        /* \"#utility.yul\":9114:9126   */\n      add\n        /* \"#utility.yul\":9107:9126   */\n      swap1\n      pop\n        /* \"#utility.yul\":8766:9132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9138:9557   */\n    tag_73:\n        /* \"#utility.yul\":9304:9308   */\n      0x00\n        /* \"#utility.yul\":9342:9344   */\n      0x20\n        /* \"#utility.yul\":9331:9340   */\n      dup3\n        /* \"#utility.yul\":9327:9345   */\n      add\n        /* \"#utility.yul\":9319:9345   */\n      swap1\n      pop\n        /* \"#utility.yul\":9391:9400   */\n      dup2\n        /* \"#utility.yul\":9385:9389   */\n      dup2\n        /* \"#utility.yul\":9381:9401   */\n      sub\n        /* \"#utility.yul\":9377:9378   */\n      0x00\n        /* \"#utility.yul\":9366:9375   */\n      dup4\n        /* \"#utility.yul\":9362:9379   */\n      add\n        /* \"#utility.yul\":9355:9402   */\n      mstore\n        /* \"#utility.yul\":9419:9550   */\n      tag_214\n        /* \"#utility.yul\":9545:9549   */\n      dup2\n        /* \"#utility.yul\":9419:9550   */\n      tag_117\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":9411:9550   */\n      swap1\n      pop\n        /* \"#utility.yul\":9138:9557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9563:10005   */\n    tag_75:\n        /* \"#utility.yul\":9712:9716   */\n      0x00\n        /* \"#utility.yul\":9750:9752   */\n      0x60\n        /* \"#utility.yul\":9739:9748   */\n      dup3\n        /* \"#utility.yul\":9735:9753   */\n      add\n        /* \"#utility.yul\":9727:9753   */\n      swap1\n      pop\n        /* \"#utility.yul\":9763:9834   */\n      tag_216\n        /* \"#utility.yul\":9831:9832   */\n      0x00\n        /* \"#utility.yul\":9820:9829   */\n      dup4\n        /* \"#utility.yul\":9816:9833   */\n      add\n        /* \"#utility.yul\":9807:9813   */\n      dup7\n        /* \"#utility.yul\":9763:9834   */\n      tag_100\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":9844:9916   */\n      tag_217\n        /* \"#utility.yul\":9912:9914   */\n      0x20\n        /* \"#utility.yul\":9901:9910   */\n      dup4\n        /* \"#utility.yul\":9897:9915   */\n      add\n        /* \"#utility.yul\":9888:9894   */\n      dup6\n        /* \"#utility.yul\":9844:9916   */\n      tag_100\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":9926:9998   */\n      tag_218\n        /* \"#utility.yul\":9994:9996   */\n      0x40\n        /* \"#utility.yul\":9983:9992   */\n      dup4\n        /* \"#utility.yul\":9979:9997   */\n      add\n        /* \"#utility.yul\":9970:9976   */\n      dup5\n        /* \"#utility.yul\":9926:9998   */\n      tag_92\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9563:10005   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220610fad379d7fcf8c5bb8e0d3418be11a44448bdb8d060419c2c102f0408fa44964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$225_fromMemory": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$342_fromMemory": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC721_$342_fromMemory": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$225": {
									"entryPoint": 254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$342": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$225": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$342": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2039:6",
										"nodeType": "YulBlock",
										"src": "0:2039:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$225",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$225",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$225",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$225",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1077:51:6",
													"nodeType": "YulBlock",
													"src": "1077:51:6",
													"statements": [
														{
															"nativeSrc": "1087:35:6",
															"nodeType": "YulAssignment",
															"src": "1087:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1116:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1116:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1098:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1098:17:6"
																},
																"nativeSrc": "1098:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1098:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1087:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$342",
												"nativeSrc": "1017:111:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1059:5:6",
														"nodeType": "YulTypedName",
														"src": "1059:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1069:7:6",
														"nodeType": "YulTypedName",
														"src": "1069:7:6",
														"type": ""
													}
												],
												"src": "1017:111:6"
											},
											{
												"body": {
													"nativeSrc": "1192:94:6",
													"nodeType": "YulBlock",
													"src": "1192:94:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1264:16:6",
																"nodeType": "YulBlock",
																"src": "1264:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1273:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1276:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1276:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:6"
																			},
																			"nativeSrc": "1266:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1266:12:6"
																		},
																		"nativeSrc": "1266:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1215:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1215:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1255:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1255:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$342",
																					"nativeSrc": "1222:32:6",
																					"nodeType": "YulIdentifier",
																					"src": "1222:32:6"
																				},
																				"nativeSrc": "1222:39:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1222:39:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1212:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1212:2:6"
																		},
																		"nativeSrc": "1212:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1212:50:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1205:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:6"
																},
																"nativeSrc": "1205:58:6",
																"nodeType": "YulFunctionCall",
																"src": "1205:58:6"
															},
															"nativeSrc": "1202:78:6",
															"nodeType": "YulIf",
															"src": "1202:78:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$342",
												"nativeSrc": "1134:152:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1185:5:6",
														"nodeType": "YulTypedName",
														"src": "1185:5:6",
														"type": ""
													}
												],
												"src": "1134:152:6"
											},
											{
												"body": {
													"nativeSrc": "1370:95:6",
													"nodeType": "YulBlock",
													"src": "1370:95:6",
													"statements": [
														{
															"nativeSrc": "1380:22:6",
															"nodeType": "YulAssignment",
															"src": "1380:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1395:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1395:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1389:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1389:5:6"
																},
																"nativeSrc": "1389:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1389:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1380:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1380:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1453:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1453:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$342",
																	"nativeSrc": "1411:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "1411:41:6"
																},
																"nativeSrc": "1411:48:6",
																"nodeType": "YulFunctionCall",
																"src": "1411:48:6"
															},
															"nativeSrc": "1411:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "1411:48:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$342_fromMemory",
												"nativeSrc": "1292:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1348:6:6",
														"nodeType": "YulTypedName",
														"src": "1348:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1356:3:6",
														"nodeType": "YulTypedName",
														"src": "1356:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1364:5:6",
														"nodeType": "YulTypedName",
														"src": "1364:5:6",
														"type": ""
													}
												],
												"src": "1292:173:6"
											},
											{
												"body": {
													"nativeSrc": "1594:442:6",
													"nodeType": "YulBlock",
													"src": "1594:442:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1640:83:6",
																"nodeType": "YulBlock",
																"src": "1640:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1642:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1642:77:6"
																			},
																			"nativeSrc": "1642:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1642:79:6"
																		},
																		"nativeSrc": "1642:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1615:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1615:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1624:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1624:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:6"
																		},
																		"nativeSrc": "1611:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1611:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1636:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1636:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:6"
																},
																"nativeSrc": "1607:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1607:32:6"
															},
															"nativeSrc": "1604:119:6",
															"nodeType": "YulIf",
															"src": "1604:119:6"
														},
														{
															"nativeSrc": "1733:142:6",
															"nodeType": "YulBlock",
															"src": "1733:142:6",
															"statements": [
																{
																	"nativeSrc": "1748:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1748:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1762:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1762:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1752:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1752:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1777:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1837:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1837:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1848:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1848:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1833:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1833:3:6"
																				},
																				"nativeSrc": "1833:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1833:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1857:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1857:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
																			"nativeSrc": "1787:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1787:45:6"
																		},
																		"nativeSrc": "1787:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1777:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1885:144:6",
															"nodeType": "YulBlock",
															"src": "1885:144:6",
															"statements": [
																{
																	"nativeSrc": "1900:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1900:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1914:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1904:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1904:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1930:89:6",
																	"nodeType": "YulAssignment",
																	"src": "1930:89:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1991:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1991:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2002:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2002:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1987:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1987:3:6"
																				},
																				"nativeSrc": "1987:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1987:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2011:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2011:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$342_fromMemory",
																			"nativeSrc": "1940:46:6",
																			"nodeType": "YulIdentifier",
																			"src": "1940:46:6"
																		},
																		"nativeSrc": "1940:79:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1940:79:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1930:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1930:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC721_$342_fromMemory",
												"nativeSrc": "1471:565:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:6",
														"nodeType": "YulTypedName",
														"src": "1556:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:6",
														"nodeType": "YulTypedName",
														"src": "1567:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:6",
														"nodeType": "YulTypedName",
														"src": "1579:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:6",
														"nodeType": "YulTypedName",
														"src": "1587:6:6",
														"type": ""
													}
												],
												"src": "1471:565:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$342(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$342(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$342(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$342_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$342(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC721_$342_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC721_$342_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052678ac7230489e8000060045562015180600555348015610022575f80fd5b50604051610ebe380380610ebe83398181016040528101906100449190610174565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101b2565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100f7826100ce565b9050919050565b5f610108826100ed565b9050919050565b610118816100fe565b8114610122575f80fd5b50565b5f815190506101338161010f565b92915050565b5f610143826100ed565b9050919050565b61015381610139565b811461015d575f80fd5b50565b5f8151905061016e8161014a565b92915050565b5f806040838503121561018a576101896100ca565b5b5f61019785828601610125565b92505060206101a885828601610160565b9150509250929050565b610cff806101bf5f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c80636eb604e0116100645780636eb604e01461011d5780639ee4af1014610139578063af8f42b814610169578063c1dfa0bb14610187578063fc0c546a146101a357610091565b80630962ef7914610095578063146d4574146100b15780633d3728b5146100cf57806347ccca02146100ff575b5f80fd5b6100af60048036038101906100aa9190610850565b6101c1565b005b6100b9610376565b6040516100c6919061088a565b60405180910390f35b6100e960048036038101906100e49190610850565b61037c565b6040516100f6919061088a565b60405180910390f35b610107610391565b604051610114919061091d565b60405180910390f35b61013760048036038101906101329190610850565b6103b6565b005b610153600480360381019061014e9190610850565b61064d565b6040516101609190610956565b60405180910390f35b61017161067d565b60405161017e919061088a565b60405180910390f35b6101a1600480360381019061019c9190610850565b610683565b005b6101ab6107f6565b6040516101b8919061098f565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a02565b60405180910390fd5b60055460035f8381526020019081526020015f205461027e9190610a4d565b4210156102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b790610aca565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b815260040161031c929190610ae8565b6020604051808303815f875af1158015610338573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035c9190610b44565b504260035f8381526020019081526020015f208190555050565b60055481565b6003602052805f5260405f205f915090505481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610427919061088a565b602060405180830381865afa158015610442573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104669190610b99565b73ffffffffffffffffffffffffffffffffffffffff16146104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b390610c0e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190610c76565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105b893929190610c94565b5f604051808303815f87803b1580156105cf575f80fd5b505af11580156105e1573d5f803e3d5ffd5b505050503360025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260035f8381526020019081526020015f208190555050565b6002602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b3373ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890610a02565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161077f93929190610c94565b5f604051808303815f87803b158015610796575f80fd5b505af11580156107a8573d5f803e3d5ffd5b5050505060025f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560035f8281526020019081526020015f205f905550565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f819050919050565b61082f8161081d565b8114610839575f80fd5b50565b5f8135905061084a81610826565b92915050565b5f6020828403121561086557610864610819565b5b5f6108728482850161083c565b91505092915050565b6108848161081d565b82525050565b5f60208201905061089d5f83018461087b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6108e56108e06108db846108a3565b6108c2565b6108a3565b9050919050565b5f6108f6826108cb565b9050919050565b5f610907826108ec565b9050919050565b610917816108fd565b82525050565b5f6020820190506109305f83018461090e565b92915050565b5f610940826108a3565b9050919050565b61095081610936565b82525050565b5f6020820190506109695f830184610947565b92915050565b5f610979826108ec565b9050919050565b6109898161096f565b82525050565b5f6020820190506109a25f830184610980565b92915050565b5f82825260208201905092915050565b7f4e6f74207374616b656420627920796f750000000000000000000000000000005f82015250565b5f6109ec6011836109a8565b91506109f7826109b8565b602082019050919050565b5f6020820190508181035f830152610a19816109e0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a578261081d565b9150610a628361081d565b9250828201905080821115610a7a57610a79610a20565b5b92915050565b7f546f6f20736f6f6e20746f20636c61696d0000000000000000000000000000005f82015250565b5f610ab46011836109a8565b9150610abf82610a80565b602082019050919050565b5f6020820190508181035f830152610ae181610aa8565b9050919050565b5f604082019050610afb5f830185610947565b610b08602083018461087b565b9392505050565b5f8115159050919050565b610b2381610b0f565b8114610b2d575f80fd5b50565b5f81519050610b3e81610b1a565b92915050565b5f60208284031215610b5957610b58610819565b5b5f610b6684828501610b30565b91505092915050565b610b7881610936565b8114610b82575f80fd5b50565b5f81519050610b9381610b6f565b92915050565b5f60208284031215610bae57610bad610819565b5b5f610bbb84828501610b85565b91505092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f610bf8600d836109a8565b9150610c0382610bc4565b602082019050919050565b5f6020820190508181035f830152610c2581610bec565b9050919050565b7f416c7265616479207374616b65640000000000000000000000000000000000005f82015250565b5f610c60600e836109a8565b9150610c6b82610c2c565b602082019050919050565b5f6020820190508181035f830152610c8d81610c54565b9050919050565b5f606082019050610ca75f830186610947565b610cb46020830185610947565b610cc1604083018461087b565b94935050505056fea2646970667358221220610fad379d7fcf8c5bb8e0d3418be11a44448bdb8d060419c2c102f0408fa44964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x4 SSTORE PUSH3 0x15180 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x22 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEBE CODESIZE SUB DUP1 PUSH2 0xEBE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x44 SWAP2 SWAP1 PUSH2 0x174 JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1B2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF7 DUP3 PUSH2 0xCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x108 DUP3 PUSH2 0xED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x118 DUP2 PUSH2 0xFE JUMP JUMPDEST DUP2 EQ PUSH2 0x122 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x133 DUP2 PUSH2 0x10F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x143 DUP3 PUSH2 0xED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153 DUP2 PUSH2 0x139 JUMP JUMPDEST DUP2 EQ PUSH2 0x15D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x16E DUP2 PUSH2 0x14A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A JUMPI PUSH2 0x189 PUSH2 0xCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197 DUP6 DUP3 DUP7 ADD PUSH2 0x125 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A8 DUP6 DUP3 DUP7 ADD PUSH2 0x160 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFF DUP1 PUSH2 0x1BF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EB604E0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6EB604E0 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x9EE4AF10 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xAF8F42B8 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xC1DFA0BB EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1A3 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x962EF79 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x146D4574 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x3D3728B5 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP3 SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x338 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x551 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82F DUP2 PUSH2 0x81D JUMP JUMPDEST DUP2 EQ PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH2 0x864 PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x872 DUP5 DUP3 DUP6 ADD PUSH2 0x83C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x81D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89D PUSH0 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8E5 PUSH2 0x8E0 PUSH2 0x8DB DUP5 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8F6 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x907 DUP3 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x917 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH0 DUP4 ADD DUP5 PUSH2 0x90E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x940 DUP3 PUSH2 0x8A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x950 DUP2 PUSH2 0x936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x969 PUSH0 DUP4 ADD DUP5 PUSH2 0x947 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x979 DUP3 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x989 DUP2 PUSH2 0x96F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74207374616B656420627920796F75000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9EC PUSH1 0x11 DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F7 DUP3 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA19 DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA57 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP2 POP PUSH2 0xA62 DUP4 PUSH2 0x81D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA79 PUSH2 0xA20 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6F20736F6F6E20746F20636C61696D000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB4 PUSH1 0x11 DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0xABF DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE1 DUP2 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAFB PUSH0 DUP4 ADD DUP6 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xB08 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB23 DUP2 PUSH2 0xB0F JUMP JUMPDEST DUP2 EQ PUSH2 0xB2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB3E DUP2 PUSH2 0xB1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB59 JUMPI PUSH2 0xB58 PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB66 DUP5 DUP3 DUP6 ADD PUSH2 0xB30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB78 DUP2 PUSH2 0x936 JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB93 DUP2 PUSH2 0xB6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBAE JUMPI PUSH2 0xBAD PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBBB DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBF8 PUSH1 0xD DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP3 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC25 DUP2 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC60 PUSH1 0xE DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6B DUP3 PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC8D DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCA7 PUSH0 DUP4 ADD DUP7 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xCB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xCC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFAD CALLDATACOPY SWAP14 PUSH32 0xCF8C5BB8E0D3418BE11A44448BDB8D060419C2C102F0408FA44964736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "235:1335:5:-:0;;;444:13;414:43;;493:6;464:35;;533:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;593:6;585:5;;:14;;;;;;;;;;;;;;;;;;616:4;610:3;;:10;;;;;;;;;;;;;;;;;;533:95;;235:1335;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:111::-;1069:7;1098:24;1116:5;1098:24;:::i;:::-;1087:35;;1017:111;;;:::o;1134:152::-;1222:39;1255:5;1222:39;:::i;:::-;1215:5;1212:50;1202:78;;1276:1;1273;1266:12;1202:78;1134:152;:::o;1292:173::-;1364:5;1395:6;1389:13;1380:22;;1411:48;1453:5;1411:48;:::i;:::-;1292:173;;;;:::o;1471:565::-;1579:6;1587;1636:2;1624:9;1615:7;1611:23;1607:32;1604:119;;;1642:79;;:::i;:::-;1604:119;1762:1;1787:78;1857:7;1848:6;1837:9;1833:22;1787:78;:::i;:::-;1777:88;;1733:142;1914:2;1940:79;2011:7;2002:6;1991:9;1987:22;1940:79;:::i;:::-;1930:89;;1885:144;1471:565;;;;;:::o;235:1335:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@claimRewards_529": {
									"entryPoint": 449,
									"id": 529,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lastClaim_403": {
									"entryPoint": 892,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nft_395": {
									"entryPoint": 913,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerDay_410": {
									"entryPoint": 1661,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeNFT_486": {
									"entryPoint": 950,
									"id": 486,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedBy_399": {
									"entryPoint": 1613,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTime_413": {
									"entryPoint": 886,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_392": {
									"entryPoint": 2038,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstakeNFT_567": {
									"entryPoint": 1667,
									"id": 567,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3220,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$342__to_t_address__fromStack_reversed": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$342_to_t_address": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5": {
									"entryPoint": 3012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04": {
									"entryPoint": 3116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10008:6",
										"nodeType": "YulBlock",
										"src": "0:10008:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "756:263:6",
													"nodeType": "YulBlock",
													"src": "756:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:6",
																"nodeType": "YulBlock",
																"src": "802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:6"
																			},
																			"nativeSrc": "804:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:6"
																		},
																		"nativeSrc": "804:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nativeSrc": "773:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:6"
																},
																"nativeSrc": "769:32:6",
																"nodeType": "YulFunctionCall",
																"src": "769:32:6"
															},
															"nativeSrc": "766:119:6",
															"nodeType": "YulIf",
															"src": "766:119:6"
														},
														{
															"nativeSrc": "895:117:6",
															"nodeType": "YulBlock",
															"src": "895:117:6",
															"statements": [
																{
																	"nativeSrc": "910:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:6",
																		"nodeType": "YulLiteral",
																		"src": "924:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:6",
																			"nodeType": "YulTypedName",
																			"src": "914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:6",
																	"nodeType": "YulAssignment",
																	"src": "939:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:6"
																				},
																				"nativeSrc": "970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:6"
																		},
																		"nativeSrc": "949:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:6",
														"nodeType": "YulTypedName",
														"src": "726:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:6",
														"nodeType": "YulTypedName",
														"src": "737:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:6",
														"nodeType": "YulTypedName",
														"src": "749:6:6",
														"type": ""
													}
												],
												"src": "690:329:6"
											},
											{
												"body": {
													"nativeSrc": "1090:53:6",
													"nodeType": "YulBlock",
													"src": "1090:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:6"
																		},
																		"nativeSrc": "1112:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:6"
																},
																"nativeSrc": "1100:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:6"
															},
															"nativeSrc": "1100:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:6",
														"nodeType": "YulTypedName",
														"src": "1078:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:6",
														"nodeType": "YulTypedName",
														"src": "1085:3:6",
														"type": ""
													}
												],
												"src": "1025:118:6"
											},
											{
												"body": {
													"nativeSrc": "1247:124:6",
													"nodeType": "YulBlock",
													"src": "1247:124:6",
													"statements": [
														{
															"nativeSrc": "1257:26:6",
															"nodeType": "YulAssignment",
															"src": "1257:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:6"
																},
																"nativeSrc": "1265:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:6"
																		},
																		"nativeSrc": "1346:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:6"
																},
																"nativeSrc": "1293:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:6"
															},
															"nativeSrc": "1293:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:6",
														"nodeType": "YulTypedName",
														"src": "1219:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:6",
														"nodeType": "YulTypedName",
														"src": "1231:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:6",
														"nodeType": "YulTypedName",
														"src": "1242:4:6",
														"type": ""
													}
												],
												"src": "1149:222:6"
											},
											{
												"body": {
													"nativeSrc": "1422:81:6",
													"nodeType": "YulBlock",
													"src": "1422:81:6",
													"statements": [
														{
															"nativeSrc": "1432:65:6",
															"nodeType": "YulAssignment",
															"src": "1432:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:6"
																},
																"nativeSrc": "1443:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:6",
														"nodeType": "YulTypedName",
														"src": "1404:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:6",
														"nodeType": "YulTypedName",
														"src": "1414:7:6",
														"type": ""
													}
												],
												"src": "1377:126:6"
											},
											{
												"body": {
													"nativeSrc": "1541:28:6",
													"nodeType": "YulBlock",
													"src": "1541:28:6",
													"statements": [
														{
															"nativeSrc": "1551:12:6",
															"nodeType": "YulAssignment",
															"src": "1551:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1558:5:6",
																"nodeType": "YulIdentifier",
																"src": "1558:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1551:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1509:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1527:5:6",
														"nodeType": "YulTypedName",
														"src": "1527:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1537:3:6",
														"nodeType": "YulTypedName",
														"src": "1537:3:6",
														"type": ""
													}
												],
												"src": "1509:60:6"
											},
											{
												"body": {
													"nativeSrc": "1635:82:6",
													"nodeType": "YulBlock",
													"src": "1635:82:6",
													"statements": [
														{
															"nativeSrc": "1645:66:6",
															"nodeType": "YulAssignment",
															"src": "1645:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1703:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1685:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:6"
																				},
																				"nativeSrc": "1685:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1676:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:6"
																		},
																		"nativeSrc": "1676:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1658:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:6"
																},
																"nativeSrc": "1658:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1658:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1645:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1575:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1615:5:6",
														"nodeType": "YulTypedName",
														"src": "1615:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1625:9:6",
														"nodeType": "YulTypedName",
														"src": "1625:9:6",
														"type": ""
													}
												],
												"src": "1575:142:6"
											},
											{
												"body": {
													"nativeSrc": "1783:66:6",
													"nodeType": "YulBlock",
													"src": "1783:66:6",
													"statements": [
														{
															"nativeSrc": "1793:50:6",
															"nodeType": "YulAssignment",
															"src": "1793:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1837:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1806:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:6"
																},
																"nativeSrc": "1806:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1806:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1793:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1723:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1763:5:6",
														"nodeType": "YulTypedName",
														"src": "1763:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1773:9:6",
														"nodeType": "YulTypedName",
														"src": "1773:9:6",
														"type": ""
													}
												],
												"src": "1723:126:6"
											},
											{
												"body": {
													"nativeSrc": "1930:66:6",
													"nodeType": "YulBlock",
													"src": "1930:66:6",
													"statements": [
														{
															"nativeSrc": "1940:50:6",
															"nodeType": "YulAssignment",
															"src": "1940:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1984:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1984:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1953:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "1953:30:6"
																},
																"nativeSrc": "1953:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1953:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1940:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1940:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$342_to_t_address",
												"nativeSrc": "1855:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1910:5:6",
														"nodeType": "YulTypedName",
														"src": "1910:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1920:9:6",
														"nodeType": "YulTypedName",
														"src": "1920:9:6",
														"type": ""
													}
												],
												"src": "1855:141:6"
											},
											{
												"body": {
													"nativeSrc": "2082:81:6",
													"nodeType": "YulBlock",
													"src": "2082:81:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2099:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2150:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2150:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$342_to_t_address",
																			"nativeSrc": "2104:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "2104:45:6"
																		},
																		"nativeSrc": "2104:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2104:52:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2092:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:6"
																},
																"nativeSrc": "2092:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2092:65:6"
															},
															"nativeSrc": "2092:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2092:65:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack",
												"nativeSrc": "2002:161:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2070:5:6",
														"nodeType": "YulTypedName",
														"src": "2070:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2077:3:6",
														"nodeType": "YulTypedName",
														"src": "2077:3:6",
														"type": ""
													}
												],
												"src": "2002:161:6"
											},
											{
												"body": {
													"nativeSrc": "2282:139:6",
													"nodeType": "YulBlock",
													"src": "2282:139:6",
													"statements": [
														{
															"nativeSrc": "2292:26:6",
															"nodeType": "YulAssignment",
															"src": "2292:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2304:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2304:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2315:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2315:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2300:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:6"
																},
																"nativeSrc": "2300:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2300:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2292:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2292:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2387:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2387:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2400:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2400:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2411:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2411:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2396:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:6"
																		},
																		"nativeSrc": "2396:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack",
																	"nativeSrc": "2328:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2328:58:6"
																},
																"nativeSrc": "2328:86:6",
																"nodeType": "YulFunctionCall",
																"src": "2328:86:6"
															},
															"nativeSrc": "2328:86:6",
															"nodeType": "YulExpressionStatement",
															"src": "2328:86:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$342__to_t_address__fromStack_reversed",
												"nativeSrc": "2169:252:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2254:9:6",
														"nodeType": "YulTypedName",
														"src": "2254:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2266:6:6",
														"nodeType": "YulTypedName",
														"src": "2266:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2277:4:6",
														"nodeType": "YulTypedName",
														"src": "2277:4:6",
														"type": ""
													}
												],
												"src": "2169:252:6"
											},
											{
												"body": {
													"nativeSrc": "2472:51:6",
													"nodeType": "YulBlock",
													"src": "2472:51:6",
													"statements": [
														{
															"nativeSrc": "2482:35:6",
															"nodeType": "YulAssignment",
															"src": "2482:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2511:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2511:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2493:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2493:17:6"
																},
																"nativeSrc": "2493:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2493:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2482:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2482:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2427:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2454:5:6",
														"nodeType": "YulTypedName",
														"src": "2454:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2464:7:6",
														"nodeType": "YulTypedName",
														"src": "2464:7:6",
														"type": ""
													}
												],
												"src": "2427:96:6"
											},
											{
												"body": {
													"nativeSrc": "2594:53:6",
													"nodeType": "YulBlock",
													"src": "2594:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2611:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2611:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2634:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2616:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2616:17:6"
																		},
																		"nativeSrc": "2616:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2604:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2604:6:6"
																},
																"nativeSrc": "2604:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2604:37:6"
															},
															"nativeSrc": "2604:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2604:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2529:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2582:5:6",
														"nodeType": "YulTypedName",
														"src": "2582:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2589:3:6",
														"nodeType": "YulTypedName",
														"src": "2589:3:6",
														"type": ""
													}
												],
												"src": "2529:118:6"
											},
											{
												"body": {
													"nativeSrc": "2751:124:6",
													"nodeType": "YulBlock",
													"src": "2751:124:6",
													"statements": [
														{
															"nativeSrc": "2761:26:6",
															"nodeType": "YulAssignment",
															"src": "2761:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2773:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2773:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2784:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2784:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2769:3:6"
																},
																"nativeSrc": "2769:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2769:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2841:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2841:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2854:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2854:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2865:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2865:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2850:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2850:3:6"
																		},
																		"nativeSrc": "2850:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2850:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2797:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2797:43:6"
																},
																"nativeSrc": "2797:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2797:71:6"
															},
															"nativeSrc": "2797:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2797:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2653:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2723:9:6",
														"nodeType": "YulTypedName",
														"src": "2723:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2735:6:6",
														"nodeType": "YulTypedName",
														"src": "2735:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2746:4:6",
														"nodeType": "YulTypedName",
														"src": "2746:4:6",
														"type": ""
													}
												],
												"src": "2653:222:6"
											},
											{
												"body": {
													"nativeSrc": "2955:66:6",
													"nodeType": "YulBlock",
													"src": "2955:66:6",
													"statements": [
														{
															"nativeSrc": "2965:50:6",
															"nodeType": "YulAssignment",
															"src": "2965:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3009:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3009:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2978:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2978:30:6"
																},
																"nativeSrc": "2978:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2978:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2965:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2965:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "2881:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2935:5:6",
														"nodeType": "YulTypedName",
														"src": "2935:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2945:9:6",
														"nodeType": "YulTypedName",
														"src": "2945:9:6",
														"type": ""
													}
												],
												"src": "2881:140:6"
											},
											{
												"body": {
													"nativeSrc": "3106:80:6",
													"nodeType": "YulBlock",
													"src": "3106:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3123:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3123:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3173:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3173:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "3128:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "3128:44:6"
																		},
																		"nativeSrc": "3128:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3128:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3116:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:6"
																},
																"nativeSrc": "3116:64:6",
																"nodeType": "YulFunctionCall",
																"src": "3116:64:6"
															},
															"nativeSrc": "3116:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "3116:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "3027:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3094:5:6",
														"nodeType": "YulTypedName",
														"src": "3094:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3101:3:6",
														"nodeType": "YulTypedName",
														"src": "3101:3:6",
														"type": ""
													}
												],
												"src": "3027:159:6"
											},
											{
												"body": {
													"nativeSrc": "3304:138:6",
													"nodeType": "YulBlock",
													"src": "3304:138:6",
													"statements": [
														{
															"nativeSrc": "3314:26:6",
															"nodeType": "YulAssignment",
															"src": "3314:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3326:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3326:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3337:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3337:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3322:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:6"
																},
																"nativeSrc": "3322:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3322:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3314:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3314:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:6"
																		},
																		"nativeSrc": "3417:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "3350:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "3350:57:6"
																},
																"nativeSrc": "3350:85:6",
																"nodeType": "YulFunctionCall",
																"src": "3350:85:6"
															},
															"nativeSrc": "3350:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "3350:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "3192:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3276:9:6",
														"nodeType": "YulTypedName",
														"src": "3276:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3288:6:6",
														"nodeType": "YulTypedName",
														"src": "3288:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3299:4:6",
														"nodeType": "YulTypedName",
														"src": "3299:4:6",
														"type": ""
													}
												],
												"src": "3192:250:6"
											},
											{
												"body": {
													"nativeSrc": "3544:73:6",
													"nodeType": "YulBlock",
													"src": "3544:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3561:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3561:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3566:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3554:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:6"
																},
																"nativeSrc": "3554:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3554:19:6"
															},
															"nativeSrc": "3554:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3554:19:6"
														},
														{
															"nativeSrc": "3582:29:6",
															"nodeType": "YulAssignment",
															"src": "3582:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3601:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3601:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3606:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3606:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3597:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3597:3:6"
																},
																"nativeSrc": "3597:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3597:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3582:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "3582:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3448:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3516:3:6",
														"nodeType": "YulTypedName",
														"src": "3516:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3521:6:6",
														"nodeType": "YulTypedName",
														"src": "3521:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3532:11:6",
														"nodeType": "YulTypedName",
														"src": "3532:11:6",
														"type": ""
													}
												],
												"src": "3448:169:6"
											},
											{
												"body": {
													"nativeSrc": "3729:61:6",
													"nodeType": "YulBlock",
													"src": "3729:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3751:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3751:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3759:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3759:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3747:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:6"
																		},
																		"nativeSrc": "3747:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3747:14:6"
																	},
																	{
																		"hexValue": "4e6f74207374616b656420627920796f75",
																		"kind": "string",
																		"nativeSrc": "3763:19:6",
																		"nodeType": "YulLiteral",
																		"src": "3763:19:6",
																		"type": "",
																		"value": "Not staked by you"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3740:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3740:6:6"
																},
																"nativeSrc": "3740:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3740:43:6"
															},
															"nativeSrc": "3740:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "3740:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac",
												"nativeSrc": "3623:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3721:6:6",
														"nodeType": "YulTypedName",
														"src": "3721:6:6",
														"type": ""
													}
												],
												"src": "3623:167:6"
											},
											{
												"body": {
													"nativeSrc": "3942:220:6",
													"nodeType": "YulBlock",
													"src": "3942:220:6",
													"statements": [
														{
															"nativeSrc": "3952:74:6",
															"nodeType": "YulAssignment",
															"src": "3952:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4018:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4018:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4023:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4023:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3959:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "3959:58:6"
																},
																"nativeSrc": "3959:67:6",
																"nodeType": "YulFunctionCall",
																"src": "3959:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3952:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4124:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4124:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac",
																	"nativeSrc": "4035:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4035:88:6"
																},
																"nativeSrc": "4035:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4035:93:6"
															},
															"nativeSrc": "4035:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4035:93:6"
														},
														{
															"nativeSrc": "4137:19:6",
															"nodeType": "YulAssignment",
															"src": "4137:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4148:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4148:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4153:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4144:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:6"
																},
																"nativeSrc": "4144:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4144:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4137:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4137:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3796:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3930:3:6",
														"nodeType": "YulTypedName",
														"src": "3930:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3938:3:6",
														"nodeType": "YulTypedName",
														"src": "3938:3:6",
														"type": ""
													}
												],
												"src": "3796:366:6"
											},
											{
												"body": {
													"nativeSrc": "4339:248:6",
													"nodeType": "YulBlock",
													"src": "4339:248:6",
													"statements": [
														{
															"nativeSrc": "4349:26:6",
															"nodeType": "YulAssignment",
															"src": "4349:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4361:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4361:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4372:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4372:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4357:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4357:3:6"
																},
																"nativeSrc": "4357:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4357:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4349:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4349:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4396:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4396:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4407:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4407:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4392:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4392:3:6"
																		},
																		"nativeSrc": "4392:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4392:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4415:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4415:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:6"
																		},
																		"nativeSrc": "4411:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4411:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4385:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:6"
																},
																"nativeSrc": "4385:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4385:47:6"
															},
															"nativeSrc": "4385:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4385:47:6"
														},
														{
															"nativeSrc": "4441:139:6",
															"nodeType": "YulAssignment",
															"src": "4441:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4575:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4575:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4449:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4449:124:6"
																},
																"nativeSrc": "4449:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4449:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4441:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4441:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4168:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4319:9:6",
														"nodeType": "YulTypedName",
														"src": "4319:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4334:4:6",
														"nodeType": "YulTypedName",
														"src": "4334:4:6",
														"type": ""
													}
												],
												"src": "4168:419:6"
											},
											{
												"body": {
													"nativeSrc": "4621:152:6",
													"nodeType": "YulBlock",
													"src": "4621:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4638:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4638:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4641:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4641:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4631:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:6"
																},
																"nativeSrc": "4631:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4631:88:6"
															},
															"nativeSrc": "4631:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4631:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4735:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4735:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4738:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4738:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4728:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:6"
																},
																"nativeSrc": "4728:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4728:15:6"
															},
															"nativeSrc": "4728:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4728:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4759:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4759:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4762:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:6"
																},
																"nativeSrc": "4752:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4752:15:6"
															},
															"nativeSrc": "4752:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4752:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4593:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4593:180:6"
											},
											{
												"body": {
													"nativeSrc": "4823:147:6",
													"nodeType": "YulBlock",
													"src": "4823:147:6",
													"statements": [
														{
															"nativeSrc": "4833:25:6",
															"nodeType": "YulAssignment",
															"src": "4833:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4856:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4856:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4838:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4838:17:6"
																},
																"nativeSrc": "4838:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4838:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4833:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4833:1:6"
																}
															]
														},
														{
															"nativeSrc": "4867:25:6",
															"nodeType": "YulAssignment",
															"src": "4867:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4890:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4890:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4872:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4872:17:6"
																},
																"nativeSrc": "4872:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4872:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4867:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4867:1:6"
																}
															]
														},
														{
															"nativeSrc": "4901:16:6",
															"nodeType": "YulAssignment",
															"src": "4901:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4912:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4912:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4915:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4915:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4908:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4908:3:6"
																},
																"nativeSrc": "4908:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4908:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4901:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4901:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4941:22:6",
																"nodeType": "YulBlock",
																"src": "4941:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4943:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4943:16:6"
																			},
																			"nativeSrc": "4943:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4943:18:6"
																		},
																		"nativeSrc": "4943:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4943:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4933:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4933:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4936:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4936:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4930:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4930:2:6"
																},
																"nativeSrc": "4930:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4930:10:6"
															},
															"nativeSrc": "4927:36:6",
															"nodeType": "YulIf",
															"src": "4927:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4779:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4810:1:6",
														"nodeType": "YulTypedName",
														"src": "4810:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4813:1:6",
														"nodeType": "YulTypedName",
														"src": "4813:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4819:3:6",
														"nodeType": "YulTypedName",
														"src": "4819:3:6",
														"type": ""
													}
												],
												"src": "4779:191:6"
											},
											{
												"body": {
													"nativeSrc": "5082:61:6",
													"nodeType": "YulBlock",
													"src": "5082:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5104:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5104:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5112:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5112:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5100:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:6"
																		},
																		"nativeSrc": "5100:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5100:14:6"
																	},
																	{
																		"hexValue": "546f6f20736f6f6e20746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "5116:19:6",
																		"nodeType": "YulLiteral",
																		"src": "5116:19:6",
																		"type": "",
																		"value": "Too soon to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5093:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:6"
																},
																"nativeSrc": "5093:43:6",
																"nodeType": "YulFunctionCall",
																"src": "5093:43:6"
															},
															"nativeSrc": "5093:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "5093:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804",
												"nativeSrc": "4976:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5074:6:6",
														"nodeType": "YulTypedName",
														"src": "5074:6:6",
														"type": ""
													}
												],
												"src": "4976:167:6"
											},
											{
												"body": {
													"nativeSrc": "5295:220:6",
													"nodeType": "YulBlock",
													"src": "5295:220:6",
													"statements": [
														{
															"nativeSrc": "5305:74:6",
															"nodeType": "YulAssignment",
															"src": "5305:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5371:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5376:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5376:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5312:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5312:58:6"
																},
																"nativeSrc": "5312:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5312:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5305:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5305:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5477:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804",
																	"nativeSrc": "5388:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5388:88:6"
																},
																"nativeSrc": "5388:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5388:93:6"
															},
															"nativeSrc": "5388:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5388:93:6"
														},
														{
															"nativeSrc": "5490:19:6",
															"nodeType": "YulAssignment",
															"src": "5490:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5501:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5501:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5506:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5506:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5497:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5497:3:6"
																},
																"nativeSrc": "5497:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5497:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5490:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5490:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5149:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5283:3:6",
														"nodeType": "YulTypedName",
														"src": "5283:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5291:3:6",
														"nodeType": "YulTypedName",
														"src": "5291:3:6",
														"type": ""
													}
												],
												"src": "5149:366:6"
											},
											{
												"body": {
													"nativeSrc": "5692:248:6",
													"nodeType": "YulBlock",
													"src": "5692:248:6",
													"statements": [
														{
															"nativeSrc": "5702:26:6",
															"nodeType": "YulAssignment",
															"src": "5702:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5714:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5714:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5725:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5725:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5710:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:6"
																},
																"nativeSrc": "5710:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5710:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5702:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5702:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5749:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5749:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5760:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5760:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5745:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5745:3:6"
																		},
																		"nativeSrc": "5745:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5745:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5768:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5768:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5774:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5774:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5764:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5764:3:6"
																		},
																		"nativeSrc": "5764:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5764:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5738:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5738:6:6"
																},
																"nativeSrc": "5738:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5738:47:6"
															},
															"nativeSrc": "5738:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5738:47:6"
														},
														{
															"nativeSrc": "5794:139:6",
															"nodeType": "YulAssignment",
															"src": "5794:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5928:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5928:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5802:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5802:124:6"
																},
																"nativeSrc": "5802:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5802:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5794:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5794:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5521:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5672:9:6",
														"nodeType": "YulTypedName",
														"src": "5672:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5687:4:6",
														"nodeType": "YulTypedName",
														"src": "5687:4:6",
														"type": ""
													}
												],
												"src": "5521:419:6"
											},
											{
												"body": {
													"nativeSrc": "6072:206:6",
													"nodeType": "YulBlock",
													"src": "6072:206:6",
													"statements": [
														{
															"nativeSrc": "6082:26:6",
															"nodeType": "YulAssignment",
															"src": "6082:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:6"
																},
																"nativeSrc": "6090:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:6"
																		},
																		"nativeSrc": "6171:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6118:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:6"
																},
																"nativeSrc": "6118:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:6"
															},
															"nativeSrc": "6118:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6243:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6243:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6256:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6256:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6267:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6267:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6252:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:6"
																		},
																		"nativeSrc": "6252:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6199:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6199:43:6"
																},
																"nativeSrc": "6199:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6199:72:6"
															},
															"nativeSrc": "6199:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6199:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5946:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6036:9:6",
														"nodeType": "YulTypedName",
														"src": "6036:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6048:6:6",
														"nodeType": "YulTypedName",
														"src": "6048:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:6",
														"nodeType": "YulTypedName",
														"src": "6056:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:6",
														"nodeType": "YulTypedName",
														"src": "6067:4:6",
														"type": ""
													}
												],
												"src": "5946:332:6"
											},
											{
												"body": {
													"nativeSrc": "6326:48:6",
													"nodeType": "YulBlock",
													"src": "6326:48:6",
													"statements": [
														{
															"nativeSrc": "6336:32:6",
															"nodeType": "YulAssignment",
															"src": "6336:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6361:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6361:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6354:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6354:6:6"
																		},
																		"nativeSrc": "6354:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6354:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6347:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:6"
																},
																"nativeSrc": "6347:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6347:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6336:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6336:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6284:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6308:5:6",
														"nodeType": "YulTypedName",
														"src": "6308:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6318:7:6",
														"nodeType": "YulTypedName",
														"src": "6318:7:6",
														"type": ""
													}
												],
												"src": "6284:90:6"
											},
											{
												"body": {
													"nativeSrc": "6420:76:6",
													"nodeType": "YulBlock",
													"src": "6420:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6474:16:6",
																"nodeType": "YulBlock",
																"src": "6474:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6483:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6483:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6486:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6486:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6476:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6476:6:6"
																			},
																			"nativeSrc": "6476:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:12:6"
																		},
																		"nativeSrc": "6476:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6443:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6443:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6465:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6465:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6450:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "6450:14:6"
																				},
																				"nativeSrc": "6450:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6450:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6440:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6440:2:6"
																		},
																		"nativeSrc": "6440:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6440:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6433:6:6"
																},
																"nativeSrc": "6433:40:6",
																"nodeType": "YulFunctionCall",
																"src": "6433:40:6"
															},
															"nativeSrc": "6430:60:6",
															"nodeType": "YulIf",
															"src": "6430:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6380:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6413:5:6",
														"nodeType": "YulTypedName",
														"src": "6413:5:6",
														"type": ""
													}
												],
												"src": "6380:116:6"
											},
											{
												"body": {
													"nativeSrc": "6562:77:6",
													"nodeType": "YulBlock",
													"src": "6562:77:6",
													"statements": [
														{
															"nativeSrc": "6572:22:6",
															"nodeType": "YulAssignment",
															"src": "6572:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6587:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6587:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6581:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6581:5:6"
																},
																"nativeSrc": "6581:13:6",
																"nodeType": "YulFunctionCall",
																"src": "6581:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6572:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6572:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6627:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6627:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6603:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "6603:23:6"
																},
																"nativeSrc": "6603:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6603:30:6"
															},
															"nativeSrc": "6603:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6603:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6502:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6540:6:6",
														"nodeType": "YulTypedName",
														"src": "6540:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6548:3:6",
														"nodeType": "YulTypedName",
														"src": "6548:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6556:5:6",
														"nodeType": "YulTypedName",
														"src": "6556:5:6",
														"type": ""
													}
												],
												"src": "6502:137:6"
											},
											{
												"body": {
													"nativeSrc": "6719:271:6",
													"nodeType": "YulBlock",
													"src": "6719:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6765:83:6",
																"nodeType": "YulBlock",
																"src": "6765:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6767:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6767:77:6"
																			},
																			"nativeSrc": "6767:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6767:79:6"
																		},
																		"nativeSrc": "6767:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6767:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6740:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6740:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6749:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6749:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6736:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6736:3:6"
																		},
																		"nativeSrc": "6736:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6761:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6761:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6732:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6732:3:6"
																},
																"nativeSrc": "6732:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6732:32:6"
															},
															"nativeSrc": "6729:119:6",
															"nodeType": "YulIf",
															"src": "6729:119:6"
														},
														{
															"nativeSrc": "6858:125:6",
															"nodeType": "YulBlock",
															"src": "6858:125:6",
															"statements": [
																{
																	"nativeSrc": "6873:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6873:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6887:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6887:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6877:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6877:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6902:71:6",
																	"nodeType": "YulAssignment",
																	"src": "6902:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6945:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6945:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6956:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6956:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6941:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6941:3:6"
																				},
																				"nativeSrc": "6941:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6941:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6965:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6965:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6912:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "6912:28:6"
																		},
																		"nativeSrc": "6912:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6912:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6902:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6645:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6689:9:6",
														"nodeType": "YulTypedName",
														"src": "6689:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6700:7:6",
														"nodeType": "YulTypedName",
														"src": "6700:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6712:6:6",
														"nodeType": "YulTypedName",
														"src": "6712:6:6",
														"type": ""
													}
												],
												"src": "6645:345:6"
											},
											{
												"body": {
													"nativeSrc": "7039:79:6",
													"nodeType": "YulBlock",
													"src": "7039:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7096:16:6",
																"nodeType": "YulBlock",
																"src": "7096:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7105:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7105:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7108:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7108:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7098:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7098:6:6"
																			},
																			"nativeSrc": "7098:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7098:12:6"
																		},
																		"nativeSrc": "7098:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7098:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7062:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7062:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7087:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7087:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "7069:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "7069:17:6"
																				},
																				"nativeSrc": "7069:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7069:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7059:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7059:2:6"
																		},
																		"nativeSrc": "7059:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7059:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7052:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:6"
																},
																"nativeSrc": "7052:43:6",
																"nodeType": "YulFunctionCall",
																"src": "7052:43:6"
															},
															"nativeSrc": "7049:63:6",
															"nodeType": "YulIf",
															"src": "7049:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6996:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7032:5:6",
														"nodeType": "YulTypedName",
														"src": "7032:5:6",
														"type": ""
													}
												],
												"src": "6996:122:6"
											},
											{
												"body": {
													"nativeSrc": "7187:80:6",
													"nodeType": "YulBlock",
													"src": "7187:80:6",
													"statements": [
														{
															"nativeSrc": "7197:22:6",
															"nodeType": "YulAssignment",
															"src": "7197:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7212:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7212:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7206:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7206:5:6"
																},
																"nativeSrc": "7206:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7206:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7197:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7255:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7255:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7228:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "7228:26:6"
																},
																"nativeSrc": "7228:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7228:33:6"
															},
															"nativeSrc": "7228:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7228:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "7124:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7165:6:6",
														"nodeType": "YulTypedName",
														"src": "7165:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7173:3:6",
														"nodeType": "YulTypedName",
														"src": "7173:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7181:5:6",
														"nodeType": "YulTypedName",
														"src": "7181:5:6",
														"type": ""
													}
												],
												"src": "7124:143:6"
											},
											{
												"body": {
													"nativeSrc": "7350:274:6",
													"nodeType": "YulBlock",
													"src": "7350:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7396:83:6",
																"nodeType": "YulBlock",
																"src": "7396:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7398:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7398:77:6"
																			},
																			"nativeSrc": "7398:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7398:79:6"
																		},
																		"nativeSrc": "7398:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7398:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7371:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7371:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7380:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7380:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7367:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7367:3:6"
																		},
																		"nativeSrc": "7367:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7367:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7392:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7392:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7363:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7363:3:6"
																},
																"nativeSrc": "7363:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7363:32:6"
															},
															"nativeSrc": "7360:119:6",
															"nodeType": "YulIf",
															"src": "7360:119:6"
														},
														{
															"nativeSrc": "7489:128:6",
															"nodeType": "YulBlock",
															"src": "7489:128:6",
															"statements": [
																{
																	"nativeSrc": "7504:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7504:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7518:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7518:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7508:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7508:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7533:74:6",
																	"nodeType": "YulAssignment",
																	"src": "7533:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7579:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7579:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7590:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7590:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7575:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7575:3:6"
																				},
																				"nativeSrc": "7575:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7575:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7599:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7599:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "7543:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "7543:31:6"
																		},
																		"nativeSrc": "7543:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7543:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7533:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7533:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7273:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7320:9:6",
														"nodeType": "YulTypedName",
														"src": "7320:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7331:7:6",
														"nodeType": "YulTypedName",
														"src": "7331:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7343:6:6",
														"nodeType": "YulTypedName",
														"src": "7343:6:6",
														"type": ""
													}
												],
												"src": "7273:351:6"
											},
											{
												"body": {
													"nativeSrc": "7736:57:6",
													"nodeType": "YulBlock",
													"src": "7736:57:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7758:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7758:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7766:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7766:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7754:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7754:3:6"
																		},
																		"nativeSrc": "7754:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7754:14:6"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7770:15:6",
																		"nodeType": "YulLiteral",
																		"src": "7770:15:6",
																		"type": "",
																		"value": "Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7747:6:6"
																},
																"nativeSrc": "7747:39:6",
																"nodeType": "YulFunctionCall",
																"src": "7747:39:6"
															},
															"nativeSrc": "7747:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "7747:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
												"nativeSrc": "7630:163:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7728:6:6",
														"nodeType": "YulTypedName",
														"src": "7728:6:6",
														"type": ""
													}
												],
												"src": "7630:163:6"
											},
											{
												"body": {
													"nativeSrc": "7945:220:6",
													"nodeType": "YulBlock",
													"src": "7945:220:6",
													"statements": [
														{
															"nativeSrc": "7955:74:6",
															"nodeType": "YulAssignment",
															"src": "7955:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8021:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8021:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8026:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8026:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7962:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7962:58:6"
																},
																"nativeSrc": "7962:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7962:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7955:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7955:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8127:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8127:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																	"nativeSrc": "8038:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8038:88:6"
																},
																"nativeSrc": "8038:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8038:93:6"
															},
															"nativeSrc": "8038:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8038:93:6"
														},
														{
															"nativeSrc": "8140:19:6",
															"nodeType": "YulAssignment",
															"src": "8140:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8151:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8151:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8156:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8156:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8147:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:6"
																},
																"nativeSrc": "8147:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8147:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8140:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7799:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7933:3:6",
														"nodeType": "YulTypedName",
														"src": "7933:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7941:3:6",
														"nodeType": "YulTypedName",
														"src": "7941:3:6",
														"type": ""
													}
												],
												"src": "7799:366:6"
											},
											{
												"body": {
													"nativeSrc": "8342:248:6",
													"nodeType": "YulBlock",
													"src": "8342:248:6",
													"statements": [
														{
															"nativeSrc": "8352:26:6",
															"nodeType": "YulAssignment",
															"src": "8352:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8364:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8364:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8375:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8375:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8360:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8360:3:6"
																},
																"nativeSrc": "8360:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8360:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8352:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8352:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8399:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8399:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8410:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8410:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8395:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8395:3:6"
																		},
																		"nativeSrc": "8395:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8395:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8418:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8418:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8424:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8424:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8414:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8414:3:6"
																		},
																		"nativeSrc": "8414:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8414:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8388:6:6"
																},
																"nativeSrc": "8388:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8388:47:6"
															},
															"nativeSrc": "8388:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8388:47:6"
														},
														{
															"nativeSrc": "8444:139:6",
															"nodeType": "YulAssignment",
															"src": "8444:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8578:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8578:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8452:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8452:124:6"
																},
																"nativeSrc": "8452:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8452:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8444:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8171:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8322:9:6",
														"nodeType": "YulTypedName",
														"src": "8322:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8337:4:6",
														"nodeType": "YulTypedName",
														"src": "8337:4:6",
														"type": ""
													}
												],
												"src": "8171:419:6"
											},
											{
												"body": {
													"nativeSrc": "8702:58:6",
													"nodeType": "YulBlock",
													"src": "8702:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8724:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8724:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8732:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8732:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8720:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8720:3:6"
																		},
																		"nativeSrc": "8720:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8720:14:6"
																	},
																	{
																		"hexValue": "416c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "8736:16:6",
																		"nodeType": "YulLiteral",
																		"src": "8736:16:6",
																		"type": "",
																		"value": "Already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8713:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8713:6:6"
																},
																"nativeSrc": "8713:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8713:40:6"
															},
															"nativeSrc": "8713:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "8713:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
												"nativeSrc": "8596:164:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8694:6:6",
														"nodeType": "YulTypedName",
														"src": "8694:6:6",
														"type": ""
													}
												],
												"src": "8596:164:6"
											},
											{
												"body": {
													"nativeSrc": "8912:220:6",
													"nodeType": "YulBlock",
													"src": "8912:220:6",
													"statements": [
														{
															"nativeSrc": "8922:74:6",
															"nodeType": "YulAssignment",
															"src": "8922:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8988:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8988:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8993:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8993:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8929:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8929:58:6"
																},
																"nativeSrc": "8929:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8929:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8922:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9094:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9094:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																	"nativeSrc": "9005:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9005:88:6"
																},
																"nativeSrc": "9005:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9005:93:6"
															},
															"nativeSrc": "9005:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9005:93:6"
														},
														{
															"nativeSrc": "9107:19:6",
															"nodeType": "YulAssignment",
															"src": "9107:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9118:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9118:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9123:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9123:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9114:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9114:3:6"
																},
																"nativeSrc": "9114:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9114:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9107:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9107:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8766:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8900:3:6",
														"nodeType": "YulTypedName",
														"src": "8900:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8908:3:6",
														"nodeType": "YulTypedName",
														"src": "8908:3:6",
														"type": ""
													}
												],
												"src": "8766:366:6"
											},
											{
												"body": {
													"nativeSrc": "9309:248:6",
													"nodeType": "YulBlock",
													"src": "9309:248:6",
													"statements": [
														{
															"nativeSrc": "9319:26:6",
															"nodeType": "YulAssignment",
															"src": "9319:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9331:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9331:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9342:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9342:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9327:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:6"
																},
																"nativeSrc": "9327:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9327:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9319:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9319:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9366:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9366:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9377:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9377:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9362:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9362:3:6"
																		},
																		"nativeSrc": "9362:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9385:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9385:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9391:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9391:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9381:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:6"
																		},
																		"nativeSrc": "9381:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9355:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9355:6:6"
																},
																"nativeSrc": "9355:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9355:47:6"
															},
															"nativeSrc": "9355:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9355:47:6"
														},
														{
															"nativeSrc": "9411:139:6",
															"nodeType": "YulAssignment",
															"src": "9411:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9545:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9545:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9419:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9419:124:6"
																},
																"nativeSrc": "9419:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9419:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9411:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9411:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9138:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9289:9:6",
														"nodeType": "YulTypedName",
														"src": "9289:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9304:4:6",
														"nodeType": "YulTypedName",
														"src": "9304:4:6",
														"type": ""
													}
												],
												"src": "9138:419:6"
											},
											{
												"body": {
													"nativeSrc": "9717:288:6",
													"nodeType": "YulBlock",
													"src": "9717:288:6",
													"statements": [
														{
															"nativeSrc": "9727:26:6",
															"nodeType": "YulAssignment",
															"src": "9727:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9739:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9739:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9750:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9750:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9735:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9735:3:6"
																},
																"nativeSrc": "9735:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9735:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9727:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9727:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9807:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9807:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9820:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9820:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9831:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9831:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9816:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9816:3:6"
																		},
																		"nativeSrc": "9816:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9816:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9763:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9763:43:6"
																},
																"nativeSrc": "9763:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9763:71:6"
															},
															"nativeSrc": "9763:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9763:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9888:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9888:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9901:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9901:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9912:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9912:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9897:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9897:3:6"
																		},
																		"nativeSrc": "9897:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9897:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9844:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9844:43:6"
																},
																"nativeSrc": "9844:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9844:72:6"
															},
															"nativeSrc": "9844:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9844:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9970:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9970:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9983:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9983:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9994:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9994:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9979:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9979:3:6"
																		},
																		"nativeSrc": "9979:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9979:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9926:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9926:43:6"
																},
																"nativeSrc": "9926:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9926:72:6"
															},
															"nativeSrc": "9926:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9926:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9563:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9673:9:6",
														"nodeType": "YulTypedName",
														"src": "9673:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9685:6:6",
														"nodeType": "YulTypedName",
														"src": "9685:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9693:6:6",
														"nodeType": "YulTypedName",
														"src": "9693:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9701:6:6",
														"nodeType": "YulTypedName",
														"src": "9701:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9712:4:6",
														"nodeType": "YulTypedName",
														"src": "9712:4:6",
														"type": ""
													}
												],
												"src": "9563:442:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$342_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$342_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$342__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not staked by you\")\n\n    }\n\n    function abi_encode_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804(memPtr) {\n\n        mstore(add(memPtr, 0), \"Too soon to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c80636eb604e0116100645780636eb604e01461011d5780639ee4af1014610139578063af8f42b814610169578063c1dfa0bb14610187578063fc0c546a146101a357610091565b80630962ef7914610095578063146d4574146100b15780633d3728b5146100cf57806347ccca02146100ff575b5f80fd5b6100af60048036038101906100aa9190610850565b6101c1565b005b6100b9610376565b6040516100c6919061088a565b60405180910390f35b6100e960048036038101906100e49190610850565b61037c565b6040516100f6919061088a565b60405180910390f35b610107610391565b604051610114919061091d565b60405180910390f35b61013760048036038101906101329190610850565b6103b6565b005b610153600480360381019061014e9190610850565b61064d565b6040516101609190610956565b60405180910390f35b61017161067d565b60405161017e919061088a565b60405180910390f35b6101a1600480360381019061019c9190610850565b610683565b005b6101ab6107f6565b6040516101b8919061098f565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a02565b60405180910390fd5b60055460035f8381526020019081526020015f205461027e9190610a4d565b4210156102c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b790610aca565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336004546040518363ffffffff1660e01b815260040161031c929190610ae8565b6020604051808303815f875af1158015610338573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061035c9190610b44565b504260035f8381526020019081526020015f208190555050565b60055481565b6003602052805f5260405f205f915090505481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610427919061088a565b602060405180830381865afa158015610442573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104669190610b99565b73ffffffffffffffffffffffffffffffffffffffff16146104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b390610c0e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190610c76565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105b893929190610c94565b5f604051808303815f87803b1580156105cf575f80fd5b505af11580156105e1573d5f803e3d5ffd5b505050503360025f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260035f8381526020019081526020015f208190555050565b6002602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b3373ffffffffffffffffffffffffffffffffffffffff1660025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890610a02565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161077f93929190610c94565b5f604051808303815f87803b158015610796575f80fd5b505af11580156107a8573d5f803e3d5ffd5b5050505060025f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560035f8281526020019081526020015f205f905550565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f819050919050565b61082f8161081d565b8114610839575f80fd5b50565b5f8135905061084a81610826565b92915050565b5f6020828403121561086557610864610819565b5b5f6108728482850161083c565b91505092915050565b6108848161081d565b82525050565b5f60208201905061089d5f83018461087b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f6108e56108e06108db846108a3565b6108c2565b6108a3565b9050919050565b5f6108f6826108cb565b9050919050565b5f610907826108ec565b9050919050565b610917816108fd565b82525050565b5f6020820190506109305f83018461090e565b92915050565b5f610940826108a3565b9050919050565b61095081610936565b82525050565b5f6020820190506109695f830184610947565b92915050565b5f610979826108ec565b9050919050565b6109898161096f565b82525050565b5f6020820190506109a25f830184610980565b92915050565b5f82825260208201905092915050565b7f4e6f74207374616b656420627920796f750000000000000000000000000000005f82015250565b5f6109ec6011836109a8565b91506109f7826109b8565b602082019050919050565b5f6020820190508181035f830152610a19816109e0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a578261081d565b9150610a628361081d565b9250828201905080821115610a7a57610a79610a20565b5b92915050565b7f546f6f20736f6f6e20746f20636c61696d0000000000000000000000000000005f82015250565b5f610ab46011836109a8565b9150610abf82610a80565b602082019050919050565b5f6020820190508181035f830152610ae181610aa8565b9050919050565b5f604082019050610afb5f830185610947565b610b08602083018461087b565b9392505050565b5f8115159050919050565b610b2381610b0f565b8114610b2d575f80fd5b50565b5f81519050610b3e81610b1a565b92915050565b5f60208284031215610b5957610b58610819565b5b5f610b6684828501610b30565b91505092915050565b610b7881610936565b8114610b82575f80fd5b50565b5f81519050610b9381610b6f565b92915050565b5f60208284031215610bae57610bad610819565b5b5f610bbb84828501610b85565b91505092915050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f610bf8600d836109a8565b9150610c0382610bc4565b602082019050919050565b5f6020820190508181035f830152610c2581610bec565b9050919050565b7f416c7265616479207374616b65640000000000000000000000000000000000005f82015250565b5f610c60600e836109a8565b9150610c6b82610c2c565b602082019050919050565b5f6020820190508181035f830152610c8d81610c54565b9050919050565b5f606082019050610ca75f830186610947565b610cb46020830185610947565b610cc1604083018461087b565b94935050505056fea2646970667358221220610fad379d7fcf8c5bb8e0d3418be11a44448bdb8d060419c2c102f0408fa44964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6EB604E0 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6EB604E0 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x9EE4AF10 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0xAF8F42B8 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xC1DFA0BB EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1A3 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x962EF79 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x146D4574 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x3D3728B5 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x256 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xA4D JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP3 SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x338 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0xB44 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x466 SWAP2 SWAP1 PUSH2 0xB99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x551 SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC94 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82F DUP2 PUSH2 0x81D JUMP JUMPDEST DUP2 EQ PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x84A DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x865 JUMPI PUSH2 0x864 PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x872 DUP5 DUP3 DUP6 ADD PUSH2 0x83C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x884 DUP2 PUSH2 0x81D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89D PUSH0 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8E5 PUSH2 0x8E0 PUSH2 0x8DB DUP5 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x8A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8F6 DUP3 PUSH2 0x8CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x907 DUP3 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x917 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH0 DUP4 ADD DUP5 PUSH2 0x90E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x940 DUP3 PUSH2 0x8A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x950 DUP2 PUSH2 0x936 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x969 PUSH0 DUP4 ADD DUP5 PUSH2 0x947 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x979 DUP3 PUSH2 0x8EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x989 DUP2 PUSH2 0x96F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x980 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74207374616B656420627920796F75000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9EC PUSH1 0x11 DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F7 DUP3 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA19 DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA57 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP2 POP PUSH2 0xA62 DUP4 PUSH2 0x81D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA7A JUMPI PUSH2 0xA79 PUSH2 0xA20 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6F20736F6F6E20746F20636C61696D000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAB4 PUSH1 0x11 DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0xABF DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAE1 DUP2 PUSH2 0xAA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAFB PUSH0 DUP4 ADD DUP6 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xB08 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB23 DUP2 PUSH2 0xB0F JUMP JUMPDEST DUP2 EQ PUSH2 0xB2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB3E DUP2 PUSH2 0xB1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB59 JUMPI PUSH2 0xB58 PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB66 DUP5 DUP3 DUP6 ADD PUSH2 0xB30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB78 DUP2 PUSH2 0x936 JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB93 DUP2 PUSH2 0xB6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBAE JUMPI PUSH2 0xBAD PUSH2 0x819 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBBB DUP5 DUP3 DUP6 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420746865206F776E657200000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBF8 PUSH1 0xD DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC03 DUP3 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC25 DUP2 PUSH2 0xBEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC60 PUSH1 0xE DUP4 PUSH2 0x9A8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6B DUP3 PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC8D DUP2 PUSH2 0xC54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCA7 PUSH0 DUP4 ADD DUP7 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xCB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x947 JUMP JUMPDEST PUSH2 0xCC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x87B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFAD CALLDATACOPY SWAP14 PUSH32 0xCF8C5BB8E0D3418BE11A44448BDB8D060419C2C102F0408FA44964736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "235:1335:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;464:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;363:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:341;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;313:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;414;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1309:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;262:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;985:316;1071:10;1050:31;;:8;:17;1059:7;1050:17;;;;;;;;;;;;;;;;;;;;;:31;;;1042:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1162:11;;1141:9;:18;1151:7;1141:18;;;;;;;;;;;;:32;;;;:::i;:::-;1122:15;:51;;1114:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1206:5;;;;;;;;;;:14;;;1221:10;1233:12;;1206:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1278:15;1257:9;:18;1267:7;1257:18;;;;;;;;;;;:36;;;;985:316;:::o;464:35::-;;;;:::o;363:44::-;;;;;;;;;;;;;;;;;:::o;288:18::-;;;;;;;;;;;;;:::o;636:341::-;721:10;697:34;;:3;;;;;;;;;;;:11;;;709:7;697:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;689:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;797:1;768:31;;:8;:17;777:7;768:17;;;;;;;;;;;;;;;;;;;;;:31;;;760:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;829:3;;;;;;;;;;;:16;;;846:10;866:4;873:7;829:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;912:10;892:8;:17;901:7;892:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;954:15;933:9;:18;943:7;933:18;;;;;;;;;;;:36;;;;636:341;:::o;313:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;414:::-;;;;:::o;1309:258::-;1393:10;1372:31;;:8;:17;1381:7;1372:17;;;;;;;;;;;;;;;;;;;;;:31;;;1364:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1436:3;;;;;;;;;;;:16;;;1461:4;1468:10;1480:7;1436:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:8;:17;1515:7;1506:17;;;;;;;;;;;;1499:24;;;;;;;;;;;1541:9;:18;1551:7;1541:18;;;;;;;;;;;1534:25;;;1309:258;:::o;262:19::-;;;;;;;;;;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:141::-;1920:9;1953:37;1984:5;1953:37;:::i;:::-;1940:50;;1855:141;;;:::o;2002:161::-;2104:52;2150:5;2104:52;:::i;:::-;2099:3;2092:65;2002:161;;:::o;2169:252::-;2277:4;2315:2;2304:9;2300:18;2292:26;;2328:86;2411:1;2400:9;2396:17;2387:6;2328:86;:::i;:::-;2169:252;;;;:::o;2427:96::-;2464:7;2493:24;2511:5;2493:24;:::i;:::-;2482:35;;2427:96;;;:::o;2529:118::-;2616:24;2634:5;2616:24;:::i;:::-;2611:3;2604:37;2529:118;;:::o;2653:222::-;2746:4;2784:2;2773:9;2769:18;2761:26;;2797:71;2865:1;2854:9;2850:17;2841:6;2797:71;:::i;:::-;2653:222;;;;:::o;2881:140::-;2945:9;2978:37;3009:5;2978:37;:::i;:::-;2965:50;;2881:140;;;:::o;3027:159::-;3128:51;3173:5;3128:51;:::i;:::-;3123:3;3116:64;3027:159;;:::o;3192:250::-;3299:4;3337:2;3326:9;3322:18;3314:26;;3350:85;3432:1;3421:9;3417:17;3408:6;3350:85;:::i;:::-;3192:250;;;;:::o;3448:169::-;3532:11;3566:6;3561:3;3554:19;3606:4;3601:3;3597:14;3582:29;;3448:169;;;;:::o;3623:167::-;3763:19;3759:1;3751:6;3747:14;3740:43;3623:167;:::o;3796:366::-;3938:3;3959:67;4023:2;4018:3;3959:67;:::i;:::-;3952:74;;4035:93;4124:3;4035:93;:::i;:::-;4153:2;4148:3;4144:12;4137:19;;3796:366;;;:::o;4168:419::-;4334:4;4372:2;4361:9;4357:18;4349:26;;4421:9;4415:4;4411:20;4407:1;4396:9;4392:17;4385:47;4449:131;4575:4;4449:131;:::i;:::-;4441:139;;4168:419;;;:::o;4593:180::-;4641:77;4638:1;4631:88;4738:4;4735:1;4728:15;4762:4;4759:1;4752:15;4779:191;4819:3;4838:20;4856:1;4838:20;:::i;:::-;4833:25;;4872:20;4890:1;4872:20;:::i;:::-;4867:25;;4915:1;4912;4908:9;4901:16;;4936:3;4933:1;4930:10;4927:36;;;4943:18;;:::i;:::-;4927:36;4779:191;;;;:::o;4976:167::-;5116:19;5112:1;5104:6;5100:14;5093:43;4976:167;:::o;5149:366::-;5291:3;5312:67;5376:2;5371:3;5312:67;:::i;:::-;5305:74;;5388:93;5477:3;5388:93;:::i;:::-;5506:2;5501:3;5497:12;5490:19;;5149:366;;;:::o;5521:419::-;5687:4;5725:2;5714:9;5710:18;5702:26;;5774:9;5768:4;5764:20;5760:1;5749:9;5745:17;5738:47;5802:131;5928:4;5802:131;:::i;:::-;5794:139;;5521:419;;;:::o;5946:332::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;6199:72;6267:2;6256:9;6252:18;6243:6;6199:72;:::i;:::-;5946:332;;;;;:::o;6284:90::-;6318:7;6361:5;6354:13;6347:21;6336:32;;6284:90;;;:::o;6380:116::-;6450:21;6465:5;6450:21;:::i;:::-;6443:5;6440:32;6430:60;;6486:1;6483;6476:12;6430:60;6380:116;:::o;6502:137::-;6556:5;6587:6;6581:13;6572:22;;6603:30;6627:5;6603:30;:::i;:::-;6502:137;;;;:::o;6645:345::-;6712:6;6761:2;6749:9;6740:7;6736:23;6732:32;6729:119;;;6767:79;;:::i;:::-;6729:119;6887:1;6912:61;6965:7;6956:6;6945:9;6941:22;6912:61;:::i;:::-;6902:71;;6858:125;6645:345;;;;:::o;6996:122::-;7069:24;7087:5;7069:24;:::i;:::-;7062:5;7059:35;7049:63;;7108:1;7105;7098:12;7049:63;6996:122;:::o;7124:143::-;7181:5;7212:6;7206:13;7197:22;;7228:33;7255:5;7228:33;:::i;:::-;7124:143;;;;:::o;7273:351::-;7343:6;7392:2;7380:9;7371:7;7367:23;7363:32;7360:119;;;7398:79;;:::i;:::-;7360:119;7518:1;7543:64;7599:7;7590:6;7579:9;7575:22;7543:64;:::i;:::-;7533:74;;7489:128;7273:351;;;;:::o;7630:163::-;7770:15;7766:1;7758:6;7754:14;7747:39;7630:163;:::o;7799:366::-;7941:3;7962:67;8026:2;8021:3;7962:67;:::i;:::-;7955:74;;8038:93;8127:3;8038:93;:::i;:::-;8156:2;8151:3;8147:12;8140:19;;7799:366;;;:::o;8171:419::-;8337:4;8375:2;8364:9;8360:18;8352:26;;8424:9;8418:4;8414:20;8410:1;8399:9;8395:17;8388:47;8452:131;8578:4;8452:131;:::i;:::-;8444:139;;8171:419;;;:::o;8596:164::-;8736:16;8732:1;8724:6;8720:14;8713:40;8596:164;:::o;8766:366::-;8908:3;8929:67;8993:2;8988:3;8929:67;:::i;:::-;8922:74;;9005:93;9094:3;9005:93;:::i;:::-;9123:2;9118:3;9114:12;9107:19;;8766:366;;;:::o;9138:419::-;9304:4;9342:2;9331:9;9327:18;9319:26;;9391:9;9385:4;9381:20;9377:1;9366:9;9362:17;9355:47;9419:131;9545:4;9419:131;:::i;:::-;9411:139;;9138:419;;;:::o;9563:442::-;9712:4;9750:2;9739:9;9735:18;9727:26;;9763:71;9831:1;9820:9;9816:17;9807:6;9763:71;:::i;:::-;9844:72;9912:2;9901:9;9897:18;9888:6;9844:72;:::i;:::-;9926;9994:2;9983:9;9979:18;9970:6;9926:72;:::i;:::-;9563:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "665400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimRewards(uint256)": "infinite",
								"lastClaim(uint256)": "infinite",
								"nft()": "infinite",
								"rewardPerDay()": "2469",
								"stakeNFT(uint256)": "infinite",
								"stakedBy(uint256)": "2849",
								"stakingTime()": "2448",
								"token()": "infinite",
								"unstakeNFT(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 1570,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 444,
									"end": 457,
									"name": "PUSH",
									"source": 5,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 414,
									"end": 457,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 414,
									"end": 457,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 493,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "15180"
								},
								{
									"begin": 464,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 464,
									"end": 499,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 628,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 628,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 628,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 533,
									"end": 628,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 533,
									"end": 628,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 533,
									"end": 628,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 533,
									"end": 628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 533,
									"end": 628,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 585,
									"end": 590,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 590,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 585,
									"end": 599,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 599,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 599,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 585,
									"end": 599,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 616,
									"end": 620,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 610,
									"end": 613,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 610,
									"end": 613,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 610,
									"end": 620,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 610,
									"end": 620,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 610,
									"end": 620,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 610,
									"end": 620,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 610,
									"end": 620,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 533,
									"end": 628,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1069,
									"end": 1076,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1116,
									"end": 1121,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1098,
									"end": 1122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1122,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1286,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1134,
									"end": 1286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1255,
									"end": 1260,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1222,
									"end": 1261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1220,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1262,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1278,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1401,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1402,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1380,
									"end": 1402,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1380,
									"end": 1402,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1453,
									"end": 1458,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1411,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1585,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1593,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1638,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1633,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1615,
									"end": 1622,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1634,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1639,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1642,
									"end": 1721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1857,
									"end": 1864,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1854,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1837,
									"end": 1846,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1833,
									"end": 1855,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1787,
									"end": 1865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1865,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2011,
									"end": 2018,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1991,
									"end": 2000,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1987,
									"end": 2009,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1940,
									"end": 2019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2019,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 1570,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220610fad379d7fcf8c5bb8e0d3418be11a44448bdb8d060419c2c102f0408fa44964736f6c634300081a0033",
									".code": [
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "6EB604E0"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "6EB604E0"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "9EE4AF10"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "AF8F42B8"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "C1DFA0BB"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "962EF79"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "146D4574"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "3D3728B5"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "47CCCA02"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 1570,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 985,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 985,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 363,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 363,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 288,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 288,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 636,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 636,
											"end": 977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 636,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 636,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 636,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 636,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 313,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 313,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 313,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 414,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1309,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1309,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 262,
											"end": 281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 262,
											"end": 281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1042,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1173,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1162,
											"end": 1173,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1158,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1141,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1141,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1173,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1122,
											"end": 1173,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1114,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1114,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1221,
											"end": 1231,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1245,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1206,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1206,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1293,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1266,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1275,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1293,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 464,
											"end": 499,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 288,
											"end": 306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 288,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 636,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 697,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 731,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 697,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 700,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 697,
											"end": 700,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 700,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 697,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 700,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 708,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 709,
											"end": 716,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 697,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 717,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 697,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 731,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 731,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 689,
											"end": 749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 689,
											"end": 749,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 689,
											"end": 749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 797,
											"end": 798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 768,
											"end": 776,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 768,
											"end": 785,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 768,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 768,
											"end": 799,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 760,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 760,
											"end": 818,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 760,
											"end": 818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 832,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 845,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 846,
											"end": 856,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 866,
											"end": 870,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 873,
											"end": 880,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 829,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 829,
											"end": 881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 922,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 892,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 892,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 909,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 892,
											"end": 909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 922,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 892,
											"end": 922,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 922,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 922,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 892,
											"end": 922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 969,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 942,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 933,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 951,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 933,
											"end": 969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 969,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 636,
											"end": 977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 457,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1393,
											"end": 1403,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1388,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1403,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1403,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1403,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1364,
											"end": 1425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1364,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1452,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1452,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1452,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1461,
											"end": 1465,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1436,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1514,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1523,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1558,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1559,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 262,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1996,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1855,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1920,
											"end": 1929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1953,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1990,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1953,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2163,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2002,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2104,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2156,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2104,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2169,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2317,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2313,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2318,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2318,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2409,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2393,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2328,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2414,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2328,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2421,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2427,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2511,
											"end": 2516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2493,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2493,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2647,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2529,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2634,
											"end": 2639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2616,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2875,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2653,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2786,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2797,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2797,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2875,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2978,
											"end": 3015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3173,
											"end": 3178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3128,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3339,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3350,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3617,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3448,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3573,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3601,
											"end": 3604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3617,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3790,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3623,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F74207374616B656420627920796F75000000000000000000000000000000"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3783,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 4162,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3796,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4023,
											"end": 4025,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4018,
											"end": 4021,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3959,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 4026,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3959,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 4026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4124,
											"end": 4127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4035,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4035,
											"end": 4128,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4035,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 4162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 4162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 4162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 4162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4587,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4168,
											"end": 4587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4374,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4411,
											"end": 4431,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4396,
											"end": 4405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4392,
											"end": 4409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4432,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4575,
											"end": 4579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4449,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4449,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4441,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4773,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4593,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4718,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4638,
											"end": 4639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4728,
											"end": 4743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4766,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4759,
											"end": 4760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4970,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4779,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4838,
											"end": 4858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4858,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4838,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 4872,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4892,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4872,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4867,
											"end": 4892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4867,
											"end": 4892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4930,
											"end": 4940,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4963,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4927,
											"end": 4963,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4943,
											"end": 4961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4927,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4970,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5143,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4976,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5135,
											"name": "PUSH",
											"source": 6,
											"value": "546F6F20736F6F6E20746F20636C61696D000000000000000000000000000000"
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5100,
											"end": 5114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5093,
											"end": 5136,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5515,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5149,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5371,
											"end": 5374,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5312,
											"end": 5379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5379,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5312,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5379,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5305,
											"end": 5379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5477,
											"end": 5480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5388,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5481,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5388,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5504,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5940,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5521,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5702,
											"end": 5728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5702,
											"end": 5728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5760,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5738,
											"end": 5785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5928,
											"end": 5932,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5802,
											"end": 5933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5933,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5802,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5794,
											"end": 5933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5794,
											"end": 5933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6278,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5946,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6267,
											"end": 6269,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6256,
											"end": 6265,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6252,
											"end": 6270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6249,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6199,
											"end": 6271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6199,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6278,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6278,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6374,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6284,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6366,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6367,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6368,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6496,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6380,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6465,
											"end": 6470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6450,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6443,
											"end": 6448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6472,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6430,
											"end": 6490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6488,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6490,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6430,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6639,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6502,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6561,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6594,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6603,
											"end": 6633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6639,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6639,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6990,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6645,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6747,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6759,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6764,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6848,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6729,
											"end": 6848,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6767,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6767,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6767,
											"end": 6846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6767,
											"end": 6846,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6767,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6848,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6729,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6965,
											"end": 6972,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6941,
											"end": 6963,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6912,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6973,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 6912,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6973,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6990,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7118,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 6996,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7087,
											"end": 7092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 7069,
											"end": 7093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7093,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7069,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7062,
											"end": 7067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7094,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7106,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7049,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7267,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7124,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7197,
											"end": 7219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 7255,
											"end": 7260,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7228,
											"end": 7261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7261,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 7228,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7267,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7267,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7624,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7273,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7378,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7363,
											"end": 7395,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7360,
											"end": 7479,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7360,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 7360,
											"end": 7479,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7398,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7398,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 7398,
											"end": 7477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7398,
											"end": 7477,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 7398,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7360,
											"end": 7479,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 7360,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7519,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 7599,
											"end": 7606,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7579,
											"end": 7588,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7543,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7543,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7543,
											"end": 7607,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 7543,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7624,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7793,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 7630,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7770,
											"end": 7785,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420746865206F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 7766,
											"end": 7767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7747,
											"end": 7786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 8165,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7799,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7941,
											"end": 7944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 8021,
											"end": 8024,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 7962,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7962,
											"end": 8029,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 7962,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 8029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7955,
											"end": 8029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8038,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8127,
											"end": 8130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8038,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 8038,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8038,
											"end": 8131,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 8038,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8158,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8140,
											"end": 8159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8140,
											"end": 8159,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 8165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 8165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 8165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 8165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8590,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 8171,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8364,
											"end": 8373,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8360,
											"end": 8378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8352,
											"end": 8378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8352,
											"end": 8378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8414,
											"end": 8434,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8408,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8395,
											"end": 8412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8452,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8578,
											"end": 8582,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8452,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 8452,
											"end": 8583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8452,
											"end": 8583,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8452,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8760,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 8596,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8736,
											"end": 8752,
											"name": "PUSH",
											"source": 6,
											"value": "416C7265616479207374616B6564000000000000000000000000000000000000"
										},
										{
											"begin": 8732,
											"end": 8733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8713,
											"end": 8753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 9132,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 8766,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8908,
											"end": 8911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8929,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 8988,
											"end": 8991,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8929,
											"end": 8996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8996,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8929,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8922,
											"end": 8996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8922,
											"end": 8996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9005,
											"end": 9098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 9094,
											"end": 9097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9005,
											"end": 9098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 9005,
											"end": 9098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9005,
											"end": 9098,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 9005,
											"end": 9098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9118,
											"end": 9121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9114,
											"end": 9126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9107,
											"end": 9126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9107,
											"end": 9126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 9132,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 9132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 9132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8766,
											"end": 9132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9138,
											"end": 9557,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 9138,
											"end": 9557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9327,
											"end": 9345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9319,
											"end": 9345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9319,
											"end": 9345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9377,
											"end": 9378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9355,
											"end": 9402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 9545,
											"end": 9549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 9419,
											"end": 9550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9550,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 9419,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9138,
											"end": 9557,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9138,
											"end": 9557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9138,
											"end": 9557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9138,
											"end": 9557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9752,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9739,
											"end": 9748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9727,
											"end": 9753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9727,
											"end": 9753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9831,
											"end": 9832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9829,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9816,
											"end": 9833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9763,
											"end": 9834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9763,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9912,
											"end": 9914,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9901,
											"end": 9910,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9897,
											"end": 9915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9844,
											"end": 9916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9844,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9994,
											"end": 9996,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9976,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9926,
											"end": 9998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 9926,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9563,
											"end": 10005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimRewards(uint256)": "0962ef79",
							"lastClaim(uint256)": "3d3728b5",
							"nft()": "47ccca02",
							"rewardPerDay()": "af8f42b8",
							"stakeNFT(uint256)": "6eb604e0",
							"stakedBy(uint256)": "9ee4af10",
							"stakingTime()": "146d4574",
							"token()": "fc0c546a",
							"unstakeNFT(uint256)": "c1dfa0bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lastClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTStaking.sol\":\"NFTStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"NFTStaking.sol\":{\"keccak256\":\"0xc73cd6e5b17370988b0aaf3858aca254123a754f47d8c3247b0fc32e112f3f39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://874fc7695ae1fd419631b94db54d55d911d5c0097c5098fd9ae1a362b733fe0c\",\"dweb:/ipfs/QmY44SWCfsVjdw44xqZ69LaRb9z7tRH6bBBDHrepqMabno\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 392,
								"contract": "NFTStaking.sol:NFTStaking",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 395,
								"contract": "NFTStaking.sol:NFTStaking",
								"label": "nft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)342"
							},
							{
								"astId": 399,
								"contract": "NFTStaking.sol:NFTStaking",
								"label": "stakedBy",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 403,
								"contract": "NFTStaking.sol:NFTStaking",
								"label": "lastClaim",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 410,
								"contract": "NFTStaking.sol:NFTStaking",
								"label": "rewardPerDay",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 413,
								"contract": "NFTStaking.sol:NFTStaking",
								"label": "stakingTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)342": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							372
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 373,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 372,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 372,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								372
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							384
						],
						"IERC721": [
							342
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 385,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 384,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC165",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 384,
										"src": "288:7:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:2",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								384
							],
							"name": "IERC721",
							"nameLocation": "277:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 241,
									"name": "Transfer",
									"nameLocation": "401:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "410:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "432:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "452:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:2"
									},
									"src": "395:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 250,
									"name": "Approval",
									"nameLocation": "588:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "597:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "620:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "646:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:2"
									},
									"src": "582:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 259,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "820:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "843:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "869:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:2"
									},
									"src": "799:85:2"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "990:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1028:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:2"
									},
									"scope": 342,
									"src": "971:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:2"
									},
									"scope": 342,
									"src": "1187:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1861:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1875:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1887:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1904:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:2"
									},
									"scope": 342,
									"src": "1835:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2691:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:2"
									},
									"scope": 342,
									"src": "2651:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3495:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3509:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3521:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:2"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:2"
									},
									"scope": 342,
									"src": "3473:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4027:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4039:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:2"
									},
									"scope": 342,
									"src": "4010:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4418:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4436:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:2"
									},
									"scope": 342,
									"src": "4391:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4671:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:2"
									},
									"scope": 342,
									"src": "4610:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4864:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4879:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4920:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:2"
									},
									"scope": 342,
									"src": "4838:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 343,
							"src": "267:4661:2",
							"usedErrors": [],
							"usedEvents": [
								241,
								250,
								259
							]
						}
					],
					"src": "108:4821:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							372
						]
					},
					"id": 373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 372,
							"linearizedBaseContracts": [
								372
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 350,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 349,
												"id": 352,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 372,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 359,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 358,
												"id": 361,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 372,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 367,
												"id": 369,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 372,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 373,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							384
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 375,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 384,
							"linearizedBaseContracts": [
								384
							],
							"name": "IERC165",
							"nameLocation": "432:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 377,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "861:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:4"
									},
									"scope": 384,
									"src": "791:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "422:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:4"
				},
				"id": 4
			},
			"NFTStaking.sol": {
				"ast": {
					"absolutePath": "NFTStaking.sol",
					"exportedSymbols": {
						"Context": [
							372
						],
						"IERC165": [
							384
						],
						"IERC20": [
							225
						],
						"IERC721": [
							342
						],
						"NFTStaking": [
							568
						],
						"Ownable": [
							147
						]
					},
					"id": 569,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 226,
							"src": "61:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 343,
							"src": "119:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 148,
							"src": "179:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NFTStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568
							],
							"name": "NFTStaking",
							"nameLocation": "244:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 392,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "276:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "262:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 391,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 390,
											"name": "IERC20",
											"nameLocations": [
												"262:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "262:6:5"
										},
										"referencedDeclaration": 225,
										"src": "262:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 395,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "303:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "288:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$342",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 394,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 393,
											"name": "IERC721",
											"nameLocations": [
												"288:7:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 342,
											"src": "288:7:5"
										},
										"referencedDeclaration": 342,
										"src": "288:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$342",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ee4af10",
									"id": 399,
									"mutability": "mutable",
									"name": "stakedBy",
									"nameLocation": "348:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "313:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 398,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 396,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "321:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "313:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 397,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3d3728b5",
									"id": 403,
									"mutability": "mutable",
									"name": "lastClaim",
									"nameLocation": "398:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "363:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 402,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 400,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "371:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "363:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 401,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "382:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af8f42b8",
									"id": 410,
									"mutability": "mutable",
									"name": "rewardPerDay",
									"nameLocation": "429:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "414:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 404,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "414:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 409,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 405,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "444:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 408,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 406,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "449:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 407,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "455:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "449:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "444:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "146d4574",
									"id": 413,
									"mutability": "mutable",
									"name": "stakingTime",
									"nameLocation": "479:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "464:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 411,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 412,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "493:6:5",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "574:54:5",
										"statements": [
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 422,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "585:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 423,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "593:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "585:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "585:14:5"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "610:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$342",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "_nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "616:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$342",
															"typeString": "contract IERC721"
														}
													},
													"src": "610:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$342",
														"typeString": "contract IERC721"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "610:10:5"
											}
										]
									},
									"id": 431,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "552:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "545:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"545:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "545:6:5"
													},
													"referencedDeclaration": 225,
													"src": "545:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "568:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "560:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$342",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC721",
														"nameLocations": [
															"560:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 342,
														"src": "560:7:5"
													},
													"referencedDeclaration": 342,
													"src": "560:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$342",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:29:5"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:0:5"
									},
									"scope": 568,
									"src": "533:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "678:299:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "709:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 437,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "697:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$342",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "701:7:5",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 275,
																	"src": "697:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "697:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 441,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "721:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "725:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "721:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "697:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572",
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "733:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															},
															"value": "Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72ec00def0a4f647f10f2a5c1742fab7d53364130edc365182f3ccef5864f2a5",
																"typeString": "literal_string \"Not the owner\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "689:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "689:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "689:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 448,
																	"name": "stakedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "768:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 450,
																"indexExpression": {
																	"id": 449,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "777:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "768:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "797:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "789:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 451,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "789:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "789:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "768:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207374616b6564",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "801:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																"typeString": "literal_string \"Already staked\""
															},
															"value": "Already staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																"typeString": "literal_string \"Already staked\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "760:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "760:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "760:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 462,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "846:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "850:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "846:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 466,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "866:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStaking_$568",
																		"typeString": "contract NFTStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStaking_$568",
																		"typeString": "contract NFTStaking"
																	}
																],
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "858:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "858:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "858:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "873:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 459,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "829:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$342",
																"typeString": "contract IERC721"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "833:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 307,
														"src": "829:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "829:52:5"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 471,
															"name": "stakedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "892:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 473,
														"indexExpression": {
															"id": 472,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "901:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "892:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 474,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "912:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "916:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "912:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "892:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "892:30:5"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 478,
															"name": "lastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "933:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 480,
														"indexExpression": {
															"id": 479,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "943:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "933:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 481,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "954:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "960:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "954:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "933:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "933:36:5"
											}
										]
									},
									"functionSelector": "6eb604e0",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeNFT",
									"nameLocation": "645:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "654:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:17:5"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:0:5"
									},
									"scope": 568,
									"src": "636:341:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "1031:270:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 492,
																	"name": "stakedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "1050:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 494,
																"indexExpression": {
																	"id": 493,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "1059:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1050:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 495,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1071:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1075:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1071:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1050:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207374616b656420627920796f75",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1083:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac",
																"typeString": "literal_string \"Not staked by you\""
															},
															"value": "Not staked by you"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac",
																"typeString": "literal_string \"Not staked by you\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1042:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1042:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "1042:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 502,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1122:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1128:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1122:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 504,
																		"name": "lastClaim",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "1141:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 506,
																	"indexExpression": {
																		"id": 505,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "1151:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1141:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 507,
																	"name": "stakingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "1162:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1141:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1122:51:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6f20736f6f6e20746f20636c61696d",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804",
																"typeString": "literal_string \"Too soon to claim\""
															},
															"value": "Too soon to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c23b068a45023fcef1def77cdee46aa0eb59c1379276c7dfb26f55df20f9804",
																"typeString": "literal_string \"Too soon to claim\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1114:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1114:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "1114:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1221:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1225:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1221:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "rewardPerDay",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "1233:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 513,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1206:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1212:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "1206:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1206:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1206:40:5"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 521,
															"name": "lastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1257:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 523,
														"indexExpression": {
															"id": 522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "1267:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1257:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 524,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1278:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1284:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1278:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1257:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "1257:36:5"
											}
										]
									},
									"functionSelector": "0962ef79",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "994:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1015:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1007:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:17:5"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:0:5"
									},
									"scope": 568,
									"src": "985:316:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1353:214:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 535,
																	"name": "stakedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "1372:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 537,
																"indexExpression": {
																	"id": 536,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "1381:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1372:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 538,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1393:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1397:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1393:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1372:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207374616b656420627920796f75",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1405:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac",
																"typeString": "literal_string \"Not staked by you\""
															},
															"value": "Not staked by you"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_331b928dad9bedc466b778dd8cebdf76f1184ea9d4c8f056c479185c5cc903ac",
																"typeString": "literal_string \"Not staked by you\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1364:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "1364:61:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 549,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1461:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStaking_$568",
																		"typeString": "contract NFTStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStaking_$568",
																		"typeString": "contract NFTStaking"
																	}
																],
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1453:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1453:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1453:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 551,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1468:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1472:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1468:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "1480:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 544,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "1436:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$342",
																"typeString": "contract IERC721"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1440:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 307,
														"src": "1436:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1436:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "1436:52:5"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1499:24:5",
													"subExpression": {
														"baseExpression": {
															"id": 556,
															"name": "stakedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "1506:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 558,
														"indexExpression": {
															"id": 557,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "1515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1506:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1499:24:5"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1534:25:5",
													"subExpression": {
														"baseExpression": {
															"id": 561,
															"name": "lastClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1541:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 563,
														"indexExpression": {
															"id": 562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "1551:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1541:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1534:25:5"
											}
										]
									},
									"functionSelector": "c1dfa0bb",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeNFT",
									"nameLocation": "1318:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1337:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1329:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:17:5"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1353:0:5"
									},
									"scope": 568,
									"src": "1309:258:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 569,
							"src": "235:1335:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1539:5"
				},
				"id": 5
			}
		}
	}
}