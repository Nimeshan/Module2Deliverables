{
	"id": "2ad42e2a93ae5542257d139a54166b40",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFTCollection.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract NFTMinter {\r\n    IERC20 public token;\r\n    IERC721 public nft;\r\n    address public owner;\r\n    uint256 public mintPrice = 10 * 10 ** 18;\r\n\r\n    constructor(IERC20 _token, IERC721 _nft) {\r\n        token = _token;\r\n        nft = _nft;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function mintNFT(uint256 tokenId) public {\r\n        require(token.transferFrom(msg.sender, address(this), mintPrice), \"Token transfer failed\");\r\n        nft.safeTransferFrom(owner, msg.sender, tokenId);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFTCollection.sol": {
				"NFTMinter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "contract IERC721",
									"name": "_nft",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "mintNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTCollection.sol\":235:732  contract NFTMinter {... */\n  mstore(0x40, 0x80)\n    /* \"NFTCollection.sol\":366:379  10 * 10 ** 18 */\n  0x8ac7230489e80000\n    /* \"NFTCollection.sol\":339:379  uint256 public mintPrice = 10 * 10 ** 18 */\n  0x03\n  sstore\n    /* \"NFTCollection.sol\":388:512  constructor(IERC20 _token, IERC721 _nft) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NFTCollection.sol\":448:454  _token */\n  dup2\n    /* \"NFTCollection.sol\":440:445  token */\n  0x00\n  dup1\n    /* \"NFTCollection.sol\":440:454  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTCollection.sol\":471:475  _nft */\n  dup1\n    /* \"NFTCollection.sol\":465:468  nft */\n  0x01\n  0x00\n    /* \"NFTCollection.sol\":465:475  nft = _nft */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTCollection.sol\":494:504  msg.sender */\n  caller\n    /* \"NFTCollection.sol\":486:491  owner */\n  0x02\n  0x00\n    /* \"NFTCollection.sol\":486:504  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTCollection.sol\":388:512  constructor(IERC20 _token, IERC721 _nft) {... */\n  pop\n  pop\n    /* \"NFTCollection.sol\":235:732  contract NFTMinter {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_24\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_12:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_26\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_13:\n    /* \"#utility.yul\":771:809   */\n  tag_28\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_12\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_29:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_14:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_31\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1128   */\ntag_15:\n    /* \"#utility.yul\":1069:1076   */\n  0x00\n    /* \"#utility.yul\":1098:1122   */\n  tag_33\n    /* \"#utility.yul\":1116:1121   */\n  dup3\n    /* \"#utility.yul\":1098:1122   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1087:1122   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1128   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1134:1286   */\ntag_16:\n    /* \"#utility.yul\":1222:1261   */\n  tag_35\n    /* \"#utility.yul\":1255:1260   */\n  dup2\n    /* \"#utility.yul\":1222:1261   */\n  tag_15\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1215:1220   */\n  dup2\n    /* \"#utility.yul\":1212:1262   */\n  eq\n    /* \"#utility.yul\":1202:1280   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1273:1274   */\n  dup1\n    /* \"#utility.yul\":1266:1278   */\n  revert\n    /* \"#utility.yul\":1202:1280   */\ntag_36:\n    /* \"#utility.yul\":1134:1286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1292:1465   */\ntag_17:\n    /* \"#utility.yul\":1364:1369   */\n  0x00\n    /* \"#utility.yul\":1395:1401   */\n  dup2\n    /* \"#utility.yul\":1389:1402   */\n  mload\n    /* \"#utility.yul\":1380:1402   */\n  swap1\n  pop\n    /* \"#utility.yul\":1411:1459   */\n  tag_38\n    /* \"#utility.yul\":1453:1458   */\n  dup2\n    /* \"#utility.yul\":1411:1459   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1292:1465   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:2036   */\ntag_3:\n    /* \"#utility.yul\":1579:1585   */\n  0x00\n    /* \"#utility.yul\":1587:1593   */\n  dup1\n    /* \"#utility.yul\":1636:1638   */\n  0x40\n    /* \"#utility.yul\":1624:1633   */\n  dup4\n    /* \"#utility.yul\":1615:1622   */\n  dup6\n    /* \"#utility.yul\":1611:1634   */\n  sub\n    /* \"#utility.yul\":1607:1639   */\n  slt\n    /* \"#utility.yul\":1604:1723   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1642:1721   */\n  tag_41\n  tag_8\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1604:1723   */\ntag_40:\n    /* \"#utility.yul\":1762:1763   */\n  0x00\n    /* \"#utility.yul\":1787:1865   */\n  tag_42\n    /* \"#utility.yul\":1857:1864   */\n  dup6\n    /* \"#utility.yul\":1848:1854   */\n  dup3\n    /* \"#utility.yul\":1837:1846   */\n  dup7\n    /* \"#utility.yul\":1833:1855   */\n  add\n    /* \"#utility.yul\":1787:1865   */\n  tag_14\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1777:1865   */\n  swap3\n  pop\n    /* \"#utility.yul\":1733:1875   */\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1940:2019   */\n  tag_43\n    /* \"#utility.yul\":2011:2018   */\n  dup6\n    /* \"#utility.yul\":2002:2008   */\n  dup3\n    /* \"#utility.yul\":1991:2000   */\n  dup7\n    /* \"#utility.yul\":1987:2009   */\n  add\n    /* \"#utility.yul\":1940:2019   */\n  tag_17\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1930:2019   */\n  swap2\n  pop\n    /* \"#utility.yul\":1885:2029   */\n  pop\n    /* \"#utility.yul\":1471:2036   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"NFTCollection.sol\":235:732  contract NFTMinter {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTCollection.sol\":235:732  contract NFTMinter {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47ccca02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6817c76c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x92642744\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NFTCollection.sol\":287:305  IERC721 public nft */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTCollection.sol\":339:379  uint256 public mintPrice = 10 * 10 ** 18 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTCollection.sol\":312:332  address public owner */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTCollection.sol\":520:729  function mintNFT(uint256 tokenId) public {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"NFTCollection.sol\":261:280  IERC20 public token */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTCollection.sol\":287:305  IERC721 public nft */\n    tag_9:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTCollection.sol\":339:379  uint256 public mintPrice = 10 * 10 ** 18 */\n    tag_13:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"NFTCollection.sol\":312:332  address public owner */\n    tag_17:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTCollection.sol\":520:729  function mintNFT(uint256 tokenId) public {... */\n    tag_23:\n        /* \"NFTCollection.sol\":580:585  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTCollection.sol\":580:598  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"NFTCollection.sol\":599:609  msg.sender */\n      caller\n        /* \"NFTCollection.sol\":619:623  this */\n      address\n        /* \"NFTCollection.sol\":626:635  mintPrice */\n      sload(0x03)\n        /* \"NFTCollection.sol\":580:636  token.transferFrom(msg.sender, address(this), mintPrice) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"NFTCollection.sol\":572:662  require(token.transferFrom(msg.sender, address(this), mintPrice), \"Token transfer failed\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"NFTCollection.sol\":673:676  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTCollection.sol\":673:693  nft.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"NFTCollection.sol\":694:699  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTCollection.sol\":701:711  msg.sender */\n      caller\n        /* \"NFTCollection.sol\":713:720  tokenId */\n      dup5\n        /* \"NFTCollection.sol\":673:721  nft.safeTransferFrom(owner, msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_38:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTCollection.sol\":520:729  function mintNFT(uint256 tokenId) public {... */\n      pop\n      jump\t// out\n        /* \"NFTCollection.sol\":261:280  IERC20 public token */\n    tag_25:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_42:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_43:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_44:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_69\n        /* \"#utility.yul\":306:340   */\n      tag_70\n        /* \"#utility.yul\":315:339   */\n      tag_71\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_42\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":306:340   */\n      tag_43\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":288:341   */\n      tag_42\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_45:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_73\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_44\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:626   */\n    tag_46:\n        /* \"#utility.yul\":550:559   */\n      0x00\n        /* \"#utility.yul\":583:620   */\n      tag_75\n        /* \"#utility.yul\":614:619   */\n      dup3\n        /* \"#utility.yul\":583:620   */\n      tag_45\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":570:620   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:793   */\n    tag_47:\n        /* \"#utility.yul\":734:786   */\n      tag_77\n        /* \"#utility.yul\":780:785   */\n      dup2\n        /* \"#utility.yul\":734:786   */\n      tag_46\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":729:732   */\n      dup3\n        /* \"#utility.yul\":722:787   */\n      mstore\n        /* \"#utility.yul\":632:793   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":799:1051   */\n    tag_11:\n        /* \"#utility.yul\":907:911   */\n      0x00\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup3\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":922:948   */\n      swap1\n      pop\n        /* \"#utility.yul\":958:1044   */\n      tag_79\n        /* \"#utility.yul\":1041:1042   */\n      0x00\n        /* \"#utility.yul\":1030:1039   */\n      dup4\n        /* \"#utility.yul\":1026:1043   */\n      add\n        /* \"#utility.yul\":1017:1023   */\n      dup5\n        /* \"#utility.yul\":958:1044   */\n      tag_47\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":799:1051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1057:1134   */\n    tag_48:\n        /* \"#utility.yul\":1094:1101   */\n      0x00\n        /* \"#utility.yul\":1123:1128   */\n      dup2\n        /* \"#utility.yul\":1112:1128   */\n      swap1\n      pop\n        /* \"#utility.yul\":1057:1134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1140:1258   */\n    tag_49:\n        /* \"#utility.yul\":1227:1251   */\n      tag_82\n        /* \"#utility.yul\":1245:1250   */\n      dup2\n        /* \"#utility.yul\":1227:1251   */\n      tag_48\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1222:1225   */\n      dup3\n        /* \"#utility.yul\":1215:1252   */\n      mstore\n        /* \"#utility.yul\":1140:1258   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1264:1486   */\n    tag_15:\n        /* \"#utility.yul\":1357:1361   */\n      0x00\n        /* \"#utility.yul\":1395:1397   */\n      0x20\n        /* \"#utility.yul\":1384:1393   */\n      dup3\n        /* \"#utility.yul\":1380:1398   */\n      add\n        /* \"#utility.yul\":1372:1398   */\n      swap1\n      pop\n        /* \"#utility.yul\":1408:1479   */\n      tag_84\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1465:1474   */\n      dup4\n        /* \"#utility.yul\":1461:1478   */\n      add\n        /* \"#utility.yul\":1452:1458   */\n      dup5\n        /* \"#utility.yul\":1408:1479   */\n      tag_49\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1264:1486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1588   */\n    tag_50:\n        /* \"#utility.yul\":1529:1536   */\n      0x00\n        /* \"#utility.yul\":1558:1582   */\n      tag_86\n        /* \"#utility.yul\":1576:1581   */\n      dup3\n        /* \"#utility.yul\":1558:1582   */\n      tag_42\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1547:1582   */\n      swap1\n      pop\n        /* \"#utility.yul\":1492:1588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1594:1712   */\n    tag_51:\n        /* \"#utility.yul\":1681:1705   */\n      tag_88\n        /* \"#utility.yul\":1699:1704   */\n      dup2\n        /* \"#utility.yul\":1681:1705   */\n      tag_50\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1676:1679   */\n      dup3\n        /* \"#utility.yul\":1669:1706   */\n      mstore\n        /* \"#utility.yul\":1594:1712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1718:1940   */\n    tag_19:\n        /* \"#utility.yul\":1811:1815   */\n      0x00\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1838:1847   */\n      dup3\n        /* \"#utility.yul\":1834:1852   */\n      add\n        /* \"#utility.yul\":1826:1852   */\n      swap1\n      pop\n        /* \"#utility.yul\":1862:1933   */\n      tag_90\n        /* \"#utility.yul\":1930:1931   */\n      0x00\n        /* \"#utility.yul\":1919:1928   */\n      dup4\n        /* \"#utility.yul\":1915:1932   */\n      add\n        /* \"#utility.yul\":1906:1912   */\n      dup5\n        /* \"#utility.yul\":1862:1933   */\n      tag_51\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1718:1940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2144   */\n    tag_53:\n        /* \"#utility.yul\":2136:2137   */\n      0x00\n        /* \"#utility.yul\":2133:2134   */\n      dup1\n        /* \"#utility.yul\":2126:2138   */\n      revert\n        /* \"#utility.yul\":2273:2395   */\n    tag_55:\n        /* \"#utility.yul\":2346:2370   */\n      tag_95\n        /* \"#utility.yul\":2364:2369   */\n      dup2\n        /* \"#utility.yul\":2346:2370   */\n      tag_48\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2339:2344   */\n      dup2\n        /* \"#utility.yul\":2336:2371   */\n      eq\n        /* \"#utility.yul\":2326:2389   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2382:2383   */\n      dup1\n        /* \"#utility.yul\":2375:2387   */\n      revert\n        /* \"#utility.yul\":2326:2389   */\n    tag_96:\n        /* \"#utility.yul\":2273:2395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2401:2540   */\n    tag_56:\n        /* \"#utility.yul\":2447:2452   */\n      0x00\n        /* \"#utility.yul\":2485:2491   */\n      dup2\n        /* \"#utility.yul\":2472:2492   */\n      calldataload\n        /* \"#utility.yul\":2463:2492   */\n      swap1\n      pop\n        /* \"#utility.yul\":2501:2534   */\n      tag_98\n        /* \"#utility.yul\":2528:2533   */\n      dup2\n        /* \"#utility.yul\":2501:2534   */\n      tag_55\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2401:2540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2546:2875   */\n    tag_22:\n        /* \"#utility.yul\":2605:2611   */\n      0x00\n        /* \"#utility.yul\":2654:2656   */\n      0x20\n        /* \"#utility.yul\":2642:2651   */\n      dup3\n        /* \"#utility.yul\":2633:2640   */\n      dup5\n        /* \"#utility.yul\":2629:2652   */\n      sub\n        /* \"#utility.yul\":2625:2657   */\n      slt\n        /* \"#utility.yul\":2622:2741   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2660:2739   */\n      tag_101\n      tag_53\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2622:2741   */\n    tag_100:\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2805:2858   */\n      tag_102\n        /* \"#utility.yul\":2850:2857   */\n      dup5\n        /* \"#utility.yul\":2841:2847   */\n      dup3\n        /* \"#utility.yul\":2830:2839   */\n      dup6\n        /* \"#utility.yul\":2826:2848   */\n      add\n        /* \"#utility.yul\":2805:2858   */\n      tag_56\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2795:2858   */\n      swap2\n      pop\n        /* \"#utility.yul\":2751:2868   */\n      pop\n        /* \"#utility.yul\":2546:2875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3021   */\n    tag_57:\n        /* \"#utility.yul\":2945:2954   */\n      0x00\n        /* \"#utility.yul\":2978:3015   */\n      tag_104\n        /* \"#utility.yul\":3009:3014   */\n      dup3\n        /* \"#utility.yul\":2978:3015   */\n      tag_45\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2965:3015   */\n      swap1\n      pop\n        /* \"#utility.yul\":2881:3021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3027:3186   */\n    tag_58:\n        /* \"#utility.yul\":3128:3179   */\n      tag_106\n        /* \"#utility.yul\":3173:3178   */\n      dup2\n        /* \"#utility.yul\":3128:3179   */\n      tag_57\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3123:3126   */\n      dup3\n        /* \"#utility.yul\":3116:3180   */\n      mstore\n        /* \"#utility.yul\":3027:3186   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3192:3442   */\n    tag_27:\n        /* \"#utility.yul\":3299:3303   */\n      0x00\n        /* \"#utility.yul\":3337:3339   */\n      0x20\n        /* \"#utility.yul\":3326:3335   */\n      dup3\n        /* \"#utility.yul\":3322:3340   */\n      add\n        /* \"#utility.yul\":3314:3340   */\n      swap1\n      pop\n        /* \"#utility.yul\":3350:3435   */\n      tag_108\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3350:3435   */\n      tag_58\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3192:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3890   */\n    tag_30:\n        /* \"#utility.yul\":3597:3601   */\n      0x00\n        /* \"#utility.yul\":3635:3637   */\n      0x60\n        /* \"#utility.yul\":3624:3633   */\n      dup3\n        /* \"#utility.yul\":3620:3638   */\n      add\n        /* \"#utility.yul\":3612:3638   */\n      swap1\n      pop\n        /* \"#utility.yul\":3648:3719   */\n      tag_110\n        /* \"#utility.yul\":3716:3717   */\n      0x00\n        /* \"#utility.yul\":3705:3714   */\n      dup4\n        /* \"#utility.yul\":3701:3718   */\n      add\n        /* \"#utility.yul\":3692:3698   */\n      dup7\n        /* \"#utility.yul\":3648:3719   */\n      tag_51\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3729:3801   */\n      tag_111\n        /* \"#utility.yul\":3797:3799   */\n      0x20\n        /* \"#utility.yul\":3786:3795   */\n      dup4\n        /* \"#utility.yul\":3782:3800   */\n      add\n        /* \"#utility.yul\":3773:3779   */\n      dup6\n        /* \"#utility.yul\":3729:3801   */\n      tag_51\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3811:3883   */\n      tag_112\n        /* \"#utility.yul\":3879:3881   */\n      0x40\n        /* \"#utility.yul\":3868:3877   */\n      dup4\n        /* \"#utility.yul\":3864:3882   */\n      add\n        /* \"#utility.yul\":3855:3861   */\n      dup5\n        /* \"#utility.yul\":3811:3883   */\n      tag_49\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3448:3890   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3896:3986   */\n    tag_59:\n        /* \"#utility.yul\":3930:3937   */\n      0x00\n        /* \"#utility.yul\":3973:3978   */\n      dup2\n        /* \"#utility.yul\":3966:3979   */\n      iszero\n        /* \"#utility.yul\":3959:3980   */\n      iszero\n        /* \"#utility.yul\":3948:3980   */\n      swap1\n      pop\n        /* \"#utility.yul\":3896:3986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3992:4108   */\n    tag_60:\n        /* \"#utility.yul\":4062:4083   */\n      tag_115\n        /* \"#utility.yul\":4077:4082   */\n      dup2\n        /* \"#utility.yul\":4062:4083   */\n      tag_59\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4055:4060   */\n      dup2\n        /* \"#utility.yul\":4052:4084   */\n      eq\n        /* \"#utility.yul\":4042:4102   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":4098:4099   */\n      0x00\n        /* \"#utility.yul\":4095:4096   */\n      dup1\n        /* \"#utility.yul\":4088:4100   */\n      revert\n        /* \"#utility.yul\":4042:4102   */\n    tag_116:\n        /* \"#utility.yul\":3992:4108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4114:4251   */\n    tag_61:\n        /* \"#utility.yul\":4168:4173   */\n      0x00\n        /* \"#utility.yul\":4199:4205   */\n      dup2\n        /* \"#utility.yul\":4193:4206   */\n      mload\n        /* \"#utility.yul\":4184:4206   */\n      swap1\n      pop\n        /* \"#utility.yul\":4215:4245   */\n      tag_118\n        /* \"#utility.yul\":4239:4244   */\n      dup2\n        /* \"#utility.yul\":4215:4245   */\n      tag_60\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4114:4251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4257:4602   */\n    tag_34:\n        /* \"#utility.yul\":4324:4330   */\n      0x00\n        /* \"#utility.yul\":4373:4375   */\n      0x20\n        /* \"#utility.yul\":4361:4370   */\n      dup3\n        /* \"#utility.yul\":4352:4359   */\n      dup5\n        /* \"#utility.yul\":4348:4371   */\n      sub\n        /* \"#utility.yul\":4344:4376   */\n      slt\n        /* \"#utility.yul\":4341:4460   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":4379:4458   */\n      tag_121\n      tag_53\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4341:4460   */\n    tag_120:\n        /* \"#utility.yul\":4499:4500   */\n      0x00\n        /* \"#utility.yul\":4524:4585   */\n      tag_122\n        /* \"#utility.yul\":4577:4584   */\n      dup5\n        /* \"#utility.yul\":4568:4574   */\n      dup3\n        /* \"#utility.yul\":4557:4566   */\n      dup6\n        /* \"#utility.yul\":4553:4575   */\n      add\n        /* \"#utility.yul\":4524:4585   */\n      tag_61\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4514:4585   */\n      swap2\n      pop\n        /* \"#utility.yul\":4470:4595   */\n      pop\n        /* \"#utility.yul\":4257:4602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4608:4777   */\n    tag_62:\n        /* \"#utility.yul\":4692:4703   */\n      0x00\n        /* \"#utility.yul\":4726:4732   */\n      dup3\n        /* \"#utility.yul\":4721:4724   */\n      dup3\n        /* \"#utility.yul\":4714:4733   */\n      mstore\n        /* \"#utility.yul\":4766:4770   */\n      0x20\n        /* \"#utility.yul\":4761:4764   */\n      dup3\n        /* \"#utility.yul\":4757:4771   */\n      add\n        /* \"#utility.yul\":4742:4771   */\n      swap1\n      pop\n        /* \"#utility.yul\":4608:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4954   */\n    tag_63:\n        /* \"#utility.yul\":4923:4946   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":4919:4920   */\n      0x00\n        /* \"#utility.yul\":4911:4917   */\n      dup3\n        /* \"#utility.yul\":4907:4921   */\n      add\n        /* \"#utility.yul\":4900:4947   */\n      mstore\n        /* \"#utility.yul\":4783:4954   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4960:5326   */\n    tag_64:\n        /* \"#utility.yul\":5102:5105   */\n      0x00\n        /* \"#utility.yul\":5123:5190   */\n      tag_126\n        /* \"#utility.yul\":5187:5189   */\n      0x15\n        /* \"#utility.yul\":5182:5185   */\n      dup4\n        /* \"#utility.yul\":5123:5190   */\n      tag_62\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5116:5190   */\n      swap2\n      pop\n        /* \"#utility.yul\":5199:5292   */\n      tag_127\n        /* \"#utility.yul\":5288:5291   */\n      dup3\n        /* \"#utility.yul\":5199:5292   */\n      tag_63\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5317:5319   */\n      0x20\n        /* \"#utility.yul\":5312:5315   */\n      dup3\n        /* \"#utility.yul\":5308:5320   */\n      add\n        /* \"#utility.yul\":5301:5320   */\n      swap1\n      pop\n        /* \"#utility.yul\":4960:5326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5332:5751   */\n    tag_37:\n        /* \"#utility.yul\":5498:5502   */\n      0x00\n        /* \"#utility.yul\":5536:5538   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5521:5539   */\n      add\n        /* \"#utility.yul\":5513:5539   */\n      swap1\n      pop\n        /* \"#utility.yul\":5585:5594   */\n      dup2\n        /* \"#utility.yul\":5579:5583   */\n      dup2\n        /* \"#utility.yul\":5575:5595   */\n      sub\n        /* \"#utility.yul\":5571:5572   */\n      0x00\n        /* \"#utility.yul\":5560:5569   */\n      dup4\n        /* \"#utility.yul\":5556:5573   */\n      add\n        /* \"#utility.yul\":5549:5596   */\n      mstore\n        /* \"#utility.yul\":5613:5744   */\n      tag_129\n        /* \"#utility.yul\":5739:5743   */\n      dup2\n        /* \"#utility.yul\":5613:5744   */\n      tag_64\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5605:5744   */\n      swap1\n      pop\n        /* \"#utility.yul\":5332:5751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200cd9bbfd55d19838ff4ac0404874687ec7b7ea5311b4d91af76a2cf63e0e1e6e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_427": {
									"entryPoint": null,
									"id": 427,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$225_fromMemory": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$342_fromMemory": {
									"entryPoint": 409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC721_$342_fromMemory": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$225": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$342": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$225": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$342": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2039:6",
										"nodeType": "YulBlock",
										"src": "0:2039:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$225",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$225",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$225",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$225",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1077:51:6",
													"nodeType": "YulBlock",
													"src": "1077:51:6",
													"statements": [
														{
															"nativeSrc": "1087:35:6",
															"nodeType": "YulAssignment",
															"src": "1087:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1116:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1116:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1098:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1098:17:6"
																},
																"nativeSrc": "1098:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1098:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1087:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$342",
												"nativeSrc": "1017:111:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1059:5:6",
														"nodeType": "YulTypedName",
														"src": "1059:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1069:7:6",
														"nodeType": "YulTypedName",
														"src": "1069:7:6",
														"type": ""
													}
												],
												"src": "1017:111:6"
											},
											{
												"body": {
													"nativeSrc": "1192:94:6",
													"nodeType": "YulBlock",
													"src": "1192:94:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1264:16:6",
																"nodeType": "YulBlock",
																"src": "1264:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1273:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1276:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1276:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:6"
																			},
																			"nativeSrc": "1266:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1266:12:6"
																		},
																		"nativeSrc": "1266:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1215:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1215:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1255:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1255:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$342",
																					"nativeSrc": "1222:32:6",
																					"nodeType": "YulIdentifier",
																					"src": "1222:32:6"
																				},
																				"nativeSrc": "1222:39:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1222:39:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1212:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1212:2:6"
																		},
																		"nativeSrc": "1212:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1212:50:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1205:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:6"
																},
																"nativeSrc": "1205:58:6",
																"nodeType": "YulFunctionCall",
																"src": "1205:58:6"
															},
															"nativeSrc": "1202:78:6",
															"nodeType": "YulIf",
															"src": "1202:78:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$342",
												"nativeSrc": "1134:152:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1185:5:6",
														"nodeType": "YulTypedName",
														"src": "1185:5:6",
														"type": ""
													}
												],
												"src": "1134:152:6"
											},
											{
												"body": {
													"nativeSrc": "1370:95:6",
													"nodeType": "YulBlock",
													"src": "1370:95:6",
													"statements": [
														{
															"nativeSrc": "1380:22:6",
															"nodeType": "YulAssignment",
															"src": "1380:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1395:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1395:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1389:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1389:5:6"
																},
																"nativeSrc": "1389:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1389:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1380:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1380:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1453:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1453:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$342",
																	"nativeSrc": "1411:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "1411:41:6"
																},
																"nativeSrc": "1411:48:6",
																"nodeType": "YulFunctionCall",
																"src": "1411:48:6"
															},
															"nativeSrc": "1411:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "1411:48:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$342_fromMemory",
												"nativeSrc": "1292:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1348:6:6",
														"nodeType": "YulTypedName",
														"src": "1348:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1356:3:6",
														"nodeType": "YulTypedName",
														"src": "1356:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1364:5:6",
														"nodeType": "YulTypedName",
														"src": "1364:5:6",
														"type": ""
													}
												],
												"src": "1292:173:6"
											},
											{
												"body": {
													"nativeSrc": "1594:442:6",
													"nodeType": "YulBlock",
													"src": "1594:442:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1640:83:6",
																"nodeType": "YulBlock",
																"src": "1640:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1642:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1642:77:6"
																			},
																			"nativeSrc": "1642:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1642:79:6"
																		},
																		"nativeSrc": "1642:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1615:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1615:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1624:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1624:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:6"
																		},
																		"nativeSrc": "1611:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1611:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1636:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1636:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:6"
																},
																"nativeSrc": "1607:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1607:32:6"
															},
															"nativeSrc": "1604:119:6",
															"nodeType": "YulIf",
															"src": "1604:119:6"
														},
														{
															"nativeSrc": "1733:142:6",
															"nodeType": "YulBlock",
															"src": "1733:142:6",
															"statements": [
																{
																	"nativeSrc": "1748:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1748:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1762:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1762:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1752:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1752:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1777:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1837:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1837:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1848:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1848:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1833:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1833:3:6"
																				},
																				"nativeSrc": "1833:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1833:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1857:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1857:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$225_fromMemory",
																			"nativeSrc": "1787:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1787:45:6"
																		},
																		"nativeSrc": "1787:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1777:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1885:144:6",
															"nodeType": "YulBlock",
															"src": "1885:144:6",
															"statements": [
																{
																	"nativeSrc": "1900:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1900:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1914:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1904:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1904:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1930:89:6",
																	"nodeType": "YulAssignment",
																	"src": "1930:89:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1991:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1991:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2002:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2002:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1987:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1987:3:6"
																				},
																				"nativeSrc": "1987:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1987:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2011:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2011:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$342_fromMemory",
																			"nativeSrc": "1940:46:6",
																			"nodeType": "YulIdentifier",
																			"src": "1940:46:6"
																		},
																		"nativeSrc": "1940:79:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1940:79:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1930:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1930:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC721_$342_fromMemory",
												"nativeSrc": "1471:565:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:6",
														"nodeType": "YulTypedName",
														"src": "1556:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:6",
														"nodeType": "YulTypedName",
														"src": "1567:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:6",
														"nodeType": "YulTypedName",
														"src": "1579:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:6",
														"nodeType": "YulTypedName",
														"src": "1587:6:6",
														"type": ""
													}
												],
												"src": "1471:565:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$225(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$225(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$225(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$225_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$225(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$342(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$342(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$342(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$342_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$342(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$225t_contract$_IERC721_$342_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$225_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC721_$342_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052678ac7230489e8000060035534801561001b575f80fd5b506040516107b63803806107b6833981810160405281019061003d91906101ad565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101eb565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61013082610107565b9050919050565b5f61014182610126565b9050919050565b61015181610137565b811461015b575f80fd5b50565b5f8151905061016c81610148565b92915050565b5f61017c82610126565b9050919050565b61018c81610172565b8114610196575f80fd5b50565b5f815190506101a781610183565b92915050565b5f80604083850312156101c3576101c2610103565b5b5f6101d08582860161015e565b92505060206101e185828601610199565b9150509250929050565b6105be806101f85f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806347ccca02146100595780636817c76c146100775780638da5cb5b1461009557806392642744146100b3578063fc0c546a146100cf575b5f80fd5b6100616100ed565b60405161006e9190610366565b60405180910390f35b61007f610112565b60405161008c9190610397565b60405180910390f35b61009d610118565b6040516100aa91906103d0565b60405180910390f35b6100cd60048036038101906100c89190610417565b61013d565b005b6100d76102c9565b6040516100e49190610462565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306003546040518463ffffffff1660e01b815260040161019b9392919061047b565b6020604051808303815f875af11580156101b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101db91906104e5565b61021a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102119061056a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff1660e01b81526004016102999392919061047b565b5f604051808303815f87803b1580156102b0575f80fd5b505af11580156102c2573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61032e610329610324846102ec565b61030b565b6102ec565b9050919050565b5f61033f82610314565b9050919050565b5f61035082610335565b9050919050565b61036081610346565b82525050565b5f6020820190506103795f830184610357565b92915050565b5f819050919050565b6103918161037f565b82525050565b5f6020820190506103aa5f830184610388565b92915050565b5f6103ba826102ec565b9050919050565b6103ca816103b0565b82525050565b5f6020820190506103e35f8301846103c1565b92915050565b5f80fd5b6103f68161037f565b8114610400575f80fd5b50565b5f81359050610411816103ed565b92915050565b5f6020828403121561042c5761042b6103e9565b5b5f61043984828501610403565b91505092915050565b5f61044c82610335565b9050919050565b61045c81610442565b82525050565b5f6020820190506104755f830184610453565b92915050565b5f60608201905061048e5f8301866103c1565b61049b60208301856103c1565b6104a86040830184610388565b949350505050565b5f8115159050919050565b6104c4816104b0565b81146104ce575f80fd5b50565b5f815190506104df816104bb565b92915050565b5f602082840312156104fa576104f96103e9565b5b5f610507848285016104d1565b91505092915050565b5f82825260208201905092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f610554601583610510565b915061055f82610520565b602082019050919050565b5f6020820190508181035f83015261058181610548565b905091905056fea26469706673582212200cd9bbfd55d19838ff4ac0404874687ec7b7ea5311b4d91af76a2cf63e0e1e6e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x7B6 CODESIZE SUB DUP1 PUSH2 0x7B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3D SWAP2 SWAP1 PUSH2 0x1AD JUMP JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1EB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x130 DUP3 PUSH2 0x107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151 DUP2 PUSH2 0x137 JUMP JUMPDEST DUP2 EQ PUSH2 0x15B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x16C DUP2 PUSH2 0x148 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17C DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C DUP2 PUSH2 0x172 JUMP JUMPDEST DUP2 EQ PUSH2 0x196 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A7 DUP2 PUSH2 0x183 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3 JUMPI PUSH2 0x1C2 PUSH2 0x103 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0 DUP6 DUP3 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E1 DUP6 DUP3 DUP7 ADD PUSH2 0x199 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5BE DUP1 PUSH2 0x1F8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x92642744 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32E PUSH2 0x329 PUSH2 0x324 DUP5 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x33F DUP3 PUSH2 0x314 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x350 DUP3 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x360 DUP2 PUSH2 0x346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x379 PUSH0 DUP4 ADD DUP5 PUSH2 0x357 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x391 DUP2 PUSH2 0x37F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AA PUSH0 DUP4 ADD DUP5 PUSH2 0x388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3BA DUP3 PUSH2 0x2EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3F6 DUP2 PUSH2 0x37F JUMP JUMPDEST DUP2 EQ PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x411 DUP2 PUSH2 0x3ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x3E9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x439 DUP5 DUP3 DUP6 ADD PUSH2 0x403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x44C DUP3 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475 PUSH0 DUP4 ADD DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x48E PUSH0 DUP4 ADD DUP7 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x49B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x4A8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x388 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C4 DUP2 PUSH2 0x4B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4DF DUP2 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4F9 PUSH2 0x3E9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x507 DUP5 DUP3 DUP6 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x554 PUSH1 0x15 DUP4 PUSH2 0x510 JUMP JUMPDEST SWAP2 POP PUSH2 0x55F DUP3 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x581 DUP2 PUSH2 0x548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xD9 0xBB REVERT SSTORE 0xD1 SWAP9 CODESIZE SELFDESTRUCT BLOBBASEFEE 0xC0 BLOCKHASH BASEFEE PUSH21 0x687EC7B7EA5311B4D91AF76A2CF63E0E1E6E64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "235:497:5:-:0;;;366:13;339:40;;388:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;448:6;440:5;;:14;;;;;;;;;;;;;;;;;;471:4;465:3;;:10;;;;;;;;;;;;;;;;;;494;486:5;;:18;;;;;;;;;;;;;;;;;;388:124;;235:497;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:111::-;1069:7;1098:24;1116:5;1098:24;:::i;:::-;1087:35;;1017:111;;;:::o;1134:152::-;1222:39;1255:5;1222:39;:::i;:::-;1215:5;1212:50;1202:78;;1276:1;1273;1266:12;1202:78;1134:152;:::o;1292:173::-;1364:5;1395:6;1389:13;1380:22;;1411:48;1453:5;1411:48;:::i;:::-;1292:173;;;;:::o;1471:565::-;1579:6;1587;1636:2;1624:9;1615:7;1611:23;1607:32;1604:119;;;1642:79;;:::i;:::-;1604:119;1762:1;1787:78;1857:7;1848:6;1837:9;1833:22;1787:78;:::i;:::-;1777:88;;1733:142;1914:2;1940:79;2011:7;2002:6;1991:9;1987:22;1940:79;:::i;:::-;1930:89;;1885:144;1471:565;;;;;:::o;235:497:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@mintNFT_456": {
									"entryPoint": 317,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mintPrice_404": {
									"entryPoint": 274,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nft_395": {
									"entryPoint": 237,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_397": {
									"entryPoint": 280,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_392": {
									"entryPoint": 713,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$342__to_t_address__fromStack_reversed": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$342_to_t_address": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5754:6",
										"nodeType": "YulBlock",
										"src": "0:5754:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "171:28:6",
													"nodeType": "YulBlock",
													"src": "171:28:6",
													"statements": [
														{
															"nativeSrc": "181:12:6",
															"nodeType": "YulAssignment",
															"src": "181:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:6",
																"nodeType": "YulIdentifier",
																"src": "188:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:6",
														"nodeType": "YulTypedName",
														"src": "157:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:6",
														"nodeType": "YulTypedName",
														"src": "167:3:6",
														"type": ""
													}
												],
												"src": "139:60:6"
											},
											{
												"body": {
													"nativeSrc": "265:82:6",
													"nodeType": "YulBlock",
													"src": "265:82:6",
													"statements": [
														{
															"nativeSrc": "275:66:6",
															"nodeType": "YulAssignment",
															"src": "275:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:6"
																				},
																				"nativeSrc": "315:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:6"
																		},
																		"nativeSrc": "306:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:6"
																},
																"nativeSrc": "288:53:6",
																"nodeType": "YulFunctionCall",
																"src": "288:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:6",
														"nodeType": "YulTypedName",
														"src": "245:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:6",
														"nodeType": "YulTypedName",
														"src": "255:9:6",
														"type": ""
													}
												],
												"src": "205:142:6"
											},
											{
												"body": {
													"nativeSrc": "413:66:6",
													"nodeType": "YulBlock",
													"src": "413:66:6",
													"statements": [
														{
															"nativeSrc": "423:50:6",
															"nodeType": "YulAssignment",
															"src": "423:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:6"
																},
																"nativeSrc": "436:37:6",
																"nodeType": "YulFunctionCall",
																"src": "436:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:6",
														"nodeType": "YulTypedName",
														"src": "393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:6",
														"nodeType": "YulTypedName",
														"src": "403:9:6",
														"type": ""
													}
												],
												"src": "353:126:6"
											},
											{
												"body": {
													"nativeSrc": "560:66:6",
													"nodeType": "YulBlock",
													"src": "560:66:6",
													"statements": [
														{
															"nativeSrc": "570:50:6",
															"nodeType": "YulAssignment",
															"src": "570:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "614:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "614:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "583:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "583:30:6"
																},
																"nativeSrc": "583:37:6",
																"nodeType": "YulFunctionCall",
																"src": "583:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "570:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "570:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$342_to_t_address",
												"nativeSrc": "485:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "540:5:6",
														"nodeType": "YulTypedName",
														"src": "540:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "550:9:6",
														"nodeType": "YulTypedName",
														"src": "550:9:6",
														"type": ""
													}
												],
												"src": "485:141:6"
											},
											{
												"body": {
													"nativeSrc": "712:81:6",
													"nodeType": "YulBlock",
													"src": "712:81:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "729:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "729:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "780:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$342_to_t_address",
																			"nativeSrc": "734:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "734:45:6"
																		},
																		"nativeSrc": "734:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "734:52:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "722:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:6"
																},
																"nativeSrc": "722:65:6",
																"nodeType": "YulFunctionCall",
																"src": "722:65:6"
															},
															"nativeSrc": "722:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "722:65:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack",
												"nativeSrc": "632:161:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "700:5:6",
														"nodeType": "YulTypedName",
														"src": "700:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "707:3:6",
														"nodeType": "YulTypedName",
														"src": "707:3:6",
														"type": ""
													}
												],
												"src": "632:161:6"
											},
											{
												"body": {
													"nativeSrc": "912:139:6",
													"nodeType": "YulBlock",
													"src": "912:139:6",
													"statements": [
														{
															"nativeSrc": "922:26:6",
															"nodeType": "YulAssignment",
															"src": "922:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "934:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "934:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "945:2:6",
																		"nodeType": "YulLiteral",
																		"src": "945:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "930:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:6"
																},
																"nativeSrc": "930:18:6",
																"nodeType": "YulFunctionCall",
																"src": "930:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "922:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "922:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1017:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1017:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1030:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1030:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1041:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1026:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:6"
																		},
																		"nativeSrc": "1026:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack",
																	"nativeSrc": "958:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:58:6"
																},
																"nativeSrc": "958:86:6",
																"nodeType": "YulFunctionCall",
																"src": "958:86:6"
															},
															"nativeSrc": "958:86:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:86:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$342__to_t_address__fromStack_reversed",
												"nativeSrc": "799:252:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "884:9:6",
														"nodeType": "YulTypedName",
														"src": "884:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "896:6:6",
														"nodeType": "YulTypedName",
														"src": "896:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "907:4:6",
														"nodeType": "YulTypedName",
														"src": "907:4:6",
														"type": ""
													}
												],
												"src": "799:252:6"
											},
											{
												"body": {
													"nativeSrc": "1102:32:6",
													"nodeType": "YulBlock",
													"src": "1102:32:6",
													"statements": [
														{
															"nativeSrc": "1112:16:6",
															"nodeType": "YulAssignment",
															"src": "1112:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1123:5:6",
																"nodeType": "YulIdentifier",
																"src": "1123:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1112:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1112:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1057:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1084:5:6",
														"nodeType": "YulTypedName",
														"src": "1084:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1094:7:6",
														"nodeType": "YulTypedName",
														"src": "1094:7:6",
														"type": ""
													}
												],
												"src": "1057:77:6"
											},
											{
												"body": {
													"nativeSrc": "1205:53:6",
													"nodeType": "YulBlock",
													"src": "1205:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1222:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1222:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1245:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1245:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1227:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1227:17:6"
																		},
																		"nativeSrc": "1227:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1215:6:6"
																},
																"nativeSrc": "1215:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1215:37:6"
															},
															"nativeSrc": "1215:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1215:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1140:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1193:5:6",
														"nodeType": "YulTypedName",
														"src": "1193:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1200:3:6",
														"nodeType": "YulTypedName",
														"src": "1200:3:6",
														"type": ""
													}
												],
												"src": "1140:118:6"
											},
											{
												"body": {
													"nativeSrc": "1362:124:6",
													"nodeType": "YulBlock",
													"src": "1362:124:6",
													"statements": [
														{
															"nativeSrc": "1372:26:6",
															"nodeType": "YulAssignment",
															"src": "1372:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1384:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1384:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1395:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1395:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:6"
																},
																"nativeSrc": "1380:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1380:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1372:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1372:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1452:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1452:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1465:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1465:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1476:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1476:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1461:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:6"
																		},
																		"nativeSrc": "1461:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1461:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1408:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1408:43:6"
																},
																"nativeSrc": "1408:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1408:71:6"
															},
															"nativeSrc": "1408:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1408:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1264:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1334:9:6",
														"nodeType": "YulTypedName",
														"src": "1334:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1346:6:6",
														"nodeType": "YulTypedName",
														"src": "1346:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1357:4:6",
														"nodeType": "YulTypedName",
														"src": "1357:4:6",
														"type": ""
													}
												],
												"src": "1264:222:6"
											},
											{
												"body": {
													"nativeSrc": "1537:51:6",
													"nodeType": "YulBlock",
													"src": "1537:51:6",
													"statements": [
														{
															"nativeSrc": "1547:35:6",
															"nodeType": "YulAssignment",
															"src": "1547:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1576:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1576:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1558:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1558:17:6"
																},
																"nativeSrc": "1558:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1558:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1547:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1547:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1492:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1519:5:6",
														"nodeType": "YulTypedName",
														"src": "1519:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1529:7:6",
														"nodeType": "YulTypedName",
														"src": "1529:7:6",
														"type": ""
													}
												],
												"src": "1492:96:6"
											},
											{
												"body": {
													"nativeSrc": "1659:53:6",
													"nodeType": "YulBlock",
													"src": "1659:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1676:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1676:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1699:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1699:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1681:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1681:17:6"
																		},
																		"nativeSrc": "1681:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1669:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:6"
																},
																"nativeSrc": "1669:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1669:37:6"
															},
															"nativeSrc": "1669:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1669:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1594:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:6",
														"nodeType": "YulTypedName",
														"src": "1647:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													}
												],
												"src": "1594:118:6"
											},
											{
												"body": {
													"nativeSrc": "1816:124:6",
													"nodeType": "YulBlock",
													"src": "1816:124:6",
													"statements": [
														{
															"nativeSrc": "1826:26:6",
															"nodeType": "YulAssignment",
															"src": "1826:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1838:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1838:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1849:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1849:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1834:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:6"
																},
																"nativeSrc": "1834:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1834:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1826:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1906:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1906:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1919:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1919:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1930:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1930:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1915:3:6"
																		},
																		"nativeSrc": "1915:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1915:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1862:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1862:43:6"
																},
																"nativeSrc": "1862:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1862:71:6"
															},
															"nativeSrc": "1862:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1862:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1718:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1788:9:6",
														"nodeType": "YulTypedName",
														"src": "1788:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1800:6:6",
														"nodeType": "YulTypedName",
														"src": "1800:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1811:4:6",
														"nodeType": "YulTypedName",
														"src": "1811:4:6",
														"type": ""
													}
												],
												"src": "1718:222:6"
											},
											{
												"body": {
													"nativeSrc": "1986:35:6",
													"nodeType": "YulBlock",
													"src": "1986:35:6",
													"statements": [
														{
															"nativeSrc": "1996:19:6",
															"nodeType": "YulAssignment",
															"src": "1996:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2006:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2006:5:6"
																},
																"nativeSrc": "2006:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2006:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1996:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1946:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1979:6:6",
														"nodeType": "YulTypedName",
														"src": "1979:6:6",
														"type": ""
													}
												],
												"src": "1946:75:6"
											},
											{
												"body": {
													"nativeSrc": "2116:28:6",
													"nodeType": "YulBlock",
													"src": "2116:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2133:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2133:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2136:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2136:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2126:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2126:6:6"
																},
																"nativeSrc": "2126:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2126:12:6"
															},
															"nativeSrc": "2126:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2126:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2027:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2027:117:6"
											},
											{
												"body": {
													"nativeSrc": "2239:28:6",
													"nodeType": "YulBlock",
													"src": "2239:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2256:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2256:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2259:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:6"
																},
																"nativeSrc": "2249:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2249:12:6"
															},
															"nativeSrc": "2249:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2249:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2150:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2150:117:6"
											},
											{
												"body": {
													"nativeSrc": "2316:79:6",
													"nodeType": "YulBlock",
													"src": "2316:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2373:16:6",
																"nodeType": "YulBlock",
																"src": "2373:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2382:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2382:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2385:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2385:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2375:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2375:6:6"
																			},
																			"nativeSrc": "2375:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2375:12:6"
																		},
																		"nativeSrc": "2375:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2339:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2339:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2364:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2364:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2346:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2346:17:6"
																				},
																				"nativeSrc": "2346:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2346:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2336:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2336:2:6"
																		},
																		"nativeSrc": "2336:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2336:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2329:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:6"
																},
																"nativeSrc": "2329:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2329:43:6"
															},
															"nativeSrc": "2326:63:6",
															"nodeType": "YulIf",
															"src": "2326:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2273:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2309:5:6",
														"nodeType": "YulTypedName",
														"src": "2309:5:6",
														"type": ""
													}
												],
												"src": "2273:122:6"
											},
											{
												"body": {
													"nativeSrc": "2453:87:6",
													"nodeType": "YulBlock",
													"src": "2453:87:6",
													"statements": [
														{
															"nativeSrc": "2463:29:6",
															"nodeType": "YulAssignment",
															"src": "2463:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2485:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2485:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2472:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2472:12:6"
																},
																"nativeSrc": "2472:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2472:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2463:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2463:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2528:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2528:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2501:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2501:26:6"
																},
																"nativeSrc": "2501:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2501:33:6"
															},
															"nativeSrc": "2501:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2501:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2401:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2431:6:6",
														"nodeType": "YulTypedName",
														"src": "2431:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2439:3:6",
														"nodeType": "YulTypedName",
														"src": "2439:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2447:5:6",
														"nodeType": "YulTypedName",
														"src": "2447:5:6",
														"type": ""
													}
												],
												"src": "2401:139:6"
											},
											{
												"body": {
													"nativeSrc": "2612:263:6",
													"nodeType": "YulBlock",
													"src": "2612:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2658:83:6",
																"nodeType": "YulBlock",
																"src": "2658:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2660:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2660:77:6"
																			},
																			"nativeSrc": "2660:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2660:79:6"
																		},
																		"nativeSrc": "2660:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2660:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2633:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2633:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2642:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2629:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2629:3:6"
																		},
																		"nativeSrc": "2629:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2629:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2654:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2654:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2625:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:6"
																},
																"nativeSrc": "2625:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2625:32:6"
															},
															"nativeSrc": "2622:119:6",
															"nodeType": "YulIf",
															"src": "2622:119:6"
														},
														{
															"nativeSrc": "2751:117:6",
															"nodeType": "YulBlock",
															"src": "2751:117:6",
															"statements": [
																{
																	"nativeSrc": "2766:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2766:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2780:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2770:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2770:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2795:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2795:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2830:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2830:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2841:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2841:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2826:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2826:3:6"
																				},
																				"nativeSrc": "2826:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2826:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2850:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2850:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2805:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2805:20:6"
																		},
																		"nativeSrc": "2805:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2805:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2795:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2795:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2546:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2582:9:6",
														"nodeType": "YulTypedName",
														"src": "2582:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2593:7:6",
														"nodeType": "YulTypedName",
														"src": "2593:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2605:6:6",
														"nodeType": "YulTypedName",
														"src": "2605:6:6",
														"type": ""
													}
												],
												"src": "2546:329:6"
											},
											{
												"body": {
													"nativeSrc": "2955:66:6",
													"nodeType": "YulBlock",
													"src": "2955:66:6",
													"statements": [
														{
															"nativeSrc": "2965:50:6",
															"nodeType": "YulAssignment",
															"src": "2965:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3009:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3009:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2978:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2978:30:6"
																},
																"nativeSrc": "2978:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2978:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2965:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2965:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "2881:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2935:5:6",
														"nodeType": "YulTypedName",
														"src": "2935:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2945:9:6",
														"nodeType": "YulTypedName",
														"src": "2945:9:6",
														"type": ""
													}
												],
												"src": "2881:140:6"
											},
											{
												"body": {
													"nativeSrc": "3106:80:6",
													"nodeType": "YulBlock",
													"src": "3106:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3123:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3123:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3173:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3173:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "3128:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "3128:44:6"
																		},
																		"nativeSrc": "3128:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3128:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3116:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:6"
																},
																"nativeSrc": "3116:64:6",
																"nodeType": "YulFunctionCall",
																"src": "3116:64:6"
															},
															"nativeSrc": "3116:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "3116:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "3027:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3094:5:6",
														"nodeType": "YulTypedName",
														"src": "3094:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3101:3:6",
														"nodeType": "YulTypedName",
														"src": "3101:3:6",
														"type": ""
													}
												],
												"src": "3027:159:6"
											},
											{
												"body": {
													"nativeSrc": "3304:138:6",
													"nodeType": "YulBlock",
													"src": "3304:138:6",
													"statements": [
														{
															"nativeSrc": "3314:26:6",
															"nodeType": "YulAssignment",
															"src": "3314:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3326:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3326:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3337:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3337:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3322:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:6"
																},
																"nativeSrc": "3322:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3322:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3314:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3314:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:6"
																		},
																		"nativeSrc": "3417:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "3350:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "3350:57:6"
																},
																"nativeSrc": "3350:85:6",
																"nodeType": "YulFunctionCall",
																"src": "3350:85:6"
															},
															"nativeSrc": "3350:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "3350:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "3192:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3276:9:6",
														"nodeType": "YulTypedName",
														"src": "3276:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3288:6:6",
														"nodeType": "YulTypedName",
														"src": "3288:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3299:4:6",
														"nodeType": "YulTypedName",
														"src": "3299:4:6",
														"type": ""
													}
												],
												"src": "3192:250:6"
											},
											{
												"body": {
													"nativeSrc": "3602:288:6",
													"nodeType": "YulBlock",
													"src": "3602:288:6",
													"statements": [
														{
															"nativeSrc": "3612:26:6",
															"nodeType": "YulAssignment",
															"src": "3612:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3624:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3624:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3635:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3635:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3620:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3620:3:6"
																},
																"nativeSrc": "3620:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3620:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3612:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3612:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3692:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3692:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3705:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3705:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3716:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3716:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3701:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3701:3:6"
																		},
																		"nativeSrc": "3701:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3701:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3648:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3648:43:6"
																},
																"nativeSrc": "3648:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3648:71:6"
															},
															"nativeSrc": "3648:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3648:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3773:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3773:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3786:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3786:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3797:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3797:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3782:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3782:3:6"
																		},
																		"nativeSrc": "3782:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3782:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3729:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3729:43:6"
																},
																"nativeSrc": "3729:72:6",
																"nodeType": "YulFunctionCall",
																"src": "3729:72:6"
															},
															"nativeSrc": "3729:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "3729:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3855:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3855:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3868:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3868:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3879:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3879:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3864:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3864:3:6"
																		},
																		"nativeSrc": "3864:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3864:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3811:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3811:43:6"
																},
																"nativeSrc": "3811:72:6",
																"nodeType": "YulFunctionCall",
																"src": "3811:72:6"
															},
															"nativeSrc": "3811:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "3811:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3448:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3558:9:6",
														"nodeType": "YulTypedName",
														"src": "3558:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3570:6:6",
														"nodeType": "YulTypedName",
														"src": "3570:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3578:6:6",
														"nodeType": "YulTypedName",
														"src": "3578:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3586:6:6",
														"nodeType": "YulTypedName",
														"src": "3586:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3597:4:6",
														"nodeType": "YulTypedName",
														"src": "3597:4:6",
														"type": ""
													}
												],
												"src": "3448:442:6"
											},
											{
												"body": {
													"nativeSrc": "3938:48:6",
													"nodeType": "YulBlock",
													"src": "3938:48:6",
													"statements": [
														{
															"nativeSrc": "3948:32:6",
															"nodeType": "YulAssignment",
															"src": "3948:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3973:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3973:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3966:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3966:6:6"
																		},
																		"nativeSrc": "3966:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3966:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3959:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3959:6:6"
																},
																"nativeSrc": "3959:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3959:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3948:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3948:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3896:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3920:5:6",
														"nodeType": "YulTypedName",
														"src": "3920:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3930:7:6",
														"nodeType": "YulTypedName",
														"src": "3930:7:6",
														"type": ""
													}
												],
												"src": "3896:90:6"
											},
											{
												"body": {
													"nativeSrc": "4032:76:6",
													"nodeType": "YulBlock",
													"src": "4032:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4086:16:6",
																"nodeType": "YulBlock",
																"src": "4086:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4095:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4095:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4098:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4098:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4088:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4088:6:6"
																			},
																			"nativeSrc": "4088:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4088:12:6"
																		},
																		"nativeSrc": "4088:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4088:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4055:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4055:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4077:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4077:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4062:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "4062:14:6"
																				},
																				"nativeSrc": "4062:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4062:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4052:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4052:2:6"
																		},
																		"nativeSrc": "4052:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4052:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4045:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:6"
																},
																"nativeSrc": "4045:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4045:40:6"
															},
															"nativeSrc": "4042:60:6",
															"nodeType": "YulIf",
															"src": "4042:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3992:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4025:5:6",
														"nodeType": "YulTypedName",
														"src": "4025:5:6",
														"type": ""
													}
												],
												"src": "3992:116:6"
											},
											{
												"body": {
													"nativeSrc": "4174:77:6",
													"nodeType": "YulBlock",
													"src": "4174:77:6",
													"statements": [
														{
															"nativeSrc": "4184:22:6",
															"nodeType": "YulAssignment",
															"src": "4184:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4199:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4199:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4193:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4193:5:6"
																},
																"nativeSrc": "4193:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4193:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4184:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4184:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4239:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4239:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4215:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "4215:23:6"
																},
																"nativeSrc": "4215:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4215:30:6"
															},
															"nativeSrc": "4215:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4215:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4114:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4152:6:6",
														"nodeType": "YulTypedName",
														"src": "4152:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4160:3:6",
														"nodeType": "YulTypedName",
														"src": "4160:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4168:5:6",
														"nodeType": "YulTypedName",
														"src": "4168:5:6",
														"type": ""
													}
												],
												"src": "4114:137:6"
											},
											{
												"body": {
													"nativeSrc": "4331:271:6",
													"nodeType": "YulBlock",
													"src": "4331:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4377:83:6",
																"nodeType": "YulBlock",
																"src": "4377:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4379:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4379:77:6"
																			},
																			"nativeSrc": "4379:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4379:79:6"
																		},
																		"nativeSrc": "4379:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4379:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4352:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4352:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4361:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4348:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4348:3:6"
																		},
																		"nativeSrc": "4348:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4348:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4373:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4373:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4344:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4344:3:6"
																},
																"nativeSrc": "4344:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4344:32:6"
															},
															"nativeSrc": "4341:119:6",
															"nodeType": "YulIf",
															"src": "4341:119:6"
														},
														{
															"nativeSrc": "4470:125:6",
															"nodeType": "YulBlock",
															"src": "4470:125:6",
															"statements": [
																{
																	"nativeSrc": "4485:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4485:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4499:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4499:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4489:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4489:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4514:71:6",
																	"nodeType": "YulAssignment",
																	"src": "4514:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4557:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4557:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4568:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4568:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4553:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4553:3:6"
																				},
																				"nativeSrc": "4553:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4553:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4577:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4577:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4524:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "4524:28:6"
																		},
																		"nativeSrc": "4524:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4514:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4514:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4257:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4301:9:6",
														"nodeType": "YulTypedName",
														"src": "4301:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4312:7:6",
														"nodeType": "YulTypedName",
														"src": "4312:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4324:6:6",
														"nodeType": "YulTypedName",
														"src": "4324:6:6",
														"type": ""
													}
												],
												"src": "4257:345:6"
											},
											{
												"body": {
													"nativeSrc": "4704:73:6",
													"nodeType": "YulBlock",
													"src": "4704:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4721:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4721:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4726:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4726:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4714:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4714:6:6"
																},
																"nativeSrc": "4714:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4714:19:6"
															},
															"nativeSrc": "4714:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "4714:19:6"
														},
														{
															"nativeSrc": "4742:29:6",
															"nodeType": "YulAssignment",
															"src": "4742:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4761:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4761:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4766:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4757:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:6"
																},
																"nativeSrc": "4757:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4757:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4742:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "4742:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4608:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4676:3:6",
														"nodeType": "YulTypedName",
														"src": "4676:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4681:6:6",
														"nodeType": "YulTypedName",
														"src": "4681:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4692:11:6",
														"nodeType": "YulTypedName",
														"src": "4692:11:6",
														"type": ""
													}
												],
												"src": "4608:169:6"
											},
											{
												"body": {
													"nativeSrc": "4889:65:6",
													"nodeType": "YulBlock",
													"src": "4889:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4911:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4911:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4919:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4919:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4907:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4907:3:6"
																		},
																		"nativeSrc": "4907:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4907:14:6"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "4923:23:6",
																		"nodeType": "YulLiteral",
																		"src": "4923:23:6",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4900:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4900:6:6"
																},
																"nativeSrc": "4900:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4900:47:6"
															},
															"nativeSrc": "4900:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4900:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "4783:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4881:6:6",
														"nodeType": "YulTypedName",
														"src": "4881:6:6",
														"type": ""
													}
												],
												"src": "4783:171:6"
											},
											{
												"body": {
													"nativeSrc": "5106:220:6",
													"nodeType": "YulBlock",
													"src": "5106:220:6",
													"statements": [
														{
															"nativeSrc": "5116:74:6",
															"nodeType": "YulAssignment",
															"src": "5116:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5182:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5182:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5123:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5123:58:6"
																},
																"nativeSrc": "5123:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5123:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5116:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5116:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5288:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5288:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "5199:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5199:88:6"
																},
																"nativeSrc": "5199:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5199:93:6"
															},
															"nativeSrc": "5199:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5199:93:6"
														},
														{
															"nativeSrc": "5301:19:6",
															"nodeType": "YulAssignment",
															"src": "5301:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5312:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5312:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5317:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5317:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5308:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:6"
																},
																"nativeSrc": "5308:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5308:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5301:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4960:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5094:3:6",
														"nodeType": "YulTypedName",
														"src": "5094:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5102:3:6",
														"nodeType": "YulTypedName",
														"src": "5102:3:6",
														"type": ""
													}
												],
												"src": "4960:366:6"
											},
											{
												"body": {
													"nativeSrc": "5503:248:6",
													"nodeType": "YulBlock",
													"src": "5503:248:6",
													"statements": [
														{
															"nativeSrc": "5513:26:6",
															"nodeType": "YulAssignment",
															"src": "5513:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5525:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5525:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5536:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5536:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5521:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:6"
																},
																"nativeSrc": "5521:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5521:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5513:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5513:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5560:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5571:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5571:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5556:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:6"
																		},
																		"nativeSrc": "5556:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5579:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5579:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5585:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5585:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5575:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5575:3:6"
																		},
																		"nativeSrc": "5575:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5575:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5549:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:6"
																},
																"nativeSrc": "5549:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5549:47:6"
															},
															"nativeSrc": "5549:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5549:47:6"
														},
														{
															"nativeSrc": "5605:139:6",
															"nodeType": "YulAssignment",
															"src": "5605:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5739:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5739:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5613:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5613:124:6"
																},
																"nativeSrc": "5613:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5613:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5605:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5605:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5332:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5483:9:6",
														"nodeType": "YulTypedName",
														"src": "5483:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5498:4:6",
														"nodeType": "YulTypedName",
														"src": "5498:4:6",
														"type": ""
													}
												],
												"src": "5332:419:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$342_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$342_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$342__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$342_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c806347ccca02146100595780636817c76c146100775780638da5cb5b1461009557806392642744146100b3578063fc0c546a146100cf575b5f80fd5b6100616100ed565b60405161006e9190610366565b60405180910390f35b61007f610112565b60405161008c9190610397565b60405180910390f35b61009d610118565b6040516100aa91906103d0565b60405180910390f35b6100cd60048036038101906100c89190610417565b61013d565b005b6100d76102c9565b6040516100e49190610462565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306003546040518463ffffffff1660e01b815260040161019b9392919061047b565b6020604051808303815f875af11580156101b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101db91906104e5565b61021a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102119061056a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff1660e01b81526004016102999392919061047b565b5f604051808303815f87803b1580156102b0575f80fd5b505af11580156102c2573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61032e610329610324846102ec565b61030b565b6102ec565b9050919050565b5f61033f82610314565b9050919050565b5f61035082610335565b9050919050565b61036081610346565b82525050565b5f6020820190506103795f830184610357565b92915050565b5f819050919050565b6103918161037f565b82525050565b5f6020820190506103aa5f830184610388565b92915050565b5f6103ba826102ec565b9050919050565b6103ca816103b0565b82525050565b5f6020820190506103e35f8301846103c1565b92915050565b5f80fd5b6103f68161037f565b8114610400575f80fd5b50565b5f81359050610411816103ed565b92915050565b5f6020828403121561042c5761042b6103e9565b5b5f61043984828501610403565b91505092915050565b5f61044c82610335565b9050919050565b61045c81610442565b82525050565b5f6020820190506104755f830184610453565b92915050565b5f60608201905061048e5f8301866103c1565b61049b60208301856103c1565b6104a86040830184610388565b949350505050565b5f8115159050919050565b6104c4816104b0565b81146104ce575f80fd5b50565b5f815190506104df816104bb565b92915050565b5f602082840312156104fa576104f96103e9565b5b5f610507848285016104d1565b91505092915050565b5f82825260208201905092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f610554601583610510565b915061055f82610520565b602082019050919050565b5f6020820190508181035f83015261058181610548565b905091905056fea26469706673582212200cd9bbfd55d19838ff4ac0404874687ec7b7ea5311b4d91af76a2cf63e0e1e6e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6817C76C EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x92642744 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xCF JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32E PUSH2 0x329 PUSH2 0x324 DUP5 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x30B JUMP JUMPDEST PUSH2 0x2EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x33F DUP3 PUSH2 0x314 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x350 DUP3 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x360 DUP2 PUSH2 0x346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x379 PUSH0 DUP4 ADD DUP5 PUSH2 0x357 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x391 DUP2 PUSH2 0x37F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AA PUSH0 DUP4 ADD DUP5 PUSH2 0x388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3BA DUP3 PUSH2 0x2EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CA DUP2 PUSH2 0x3B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E3 PUSH0 DUP4 ADD DUP5 PUSH2 0x3C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x3F6 DUP2 PUSH2 0x37F JUMP JUMPDEST DUP2 EQ PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x411 DUP2 PUSH2 0x3ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x3E9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x439 DUP5 DUP3 DUP6 ADD PUSH2 0x403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x44C DUP3 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x442 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x475 PUSH0 DUP4 ADD DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x48E PUSH0 DUP4 ADD DUP7 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x49B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x4A8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x388 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C4 DUP2 PUSH2 0x4B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4DF DUP2 PUSH2 0x4BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4F9 PUSH2 0x3E9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x507 DUP5 DUP3 DUP6 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x554 PUSH1 0x15 DUP4 PUSH2 0x510 JUMP JUMPDEST SWAP2 POP PUSH2 0x55F DUP3 PUSH2 0x520 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x581 DUP2 PUSH2 0x548 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xD9 0xBB REVERT SSTORE 0xD1 SWAP9 CODESIZE SELFDESTRUCT BLOBBASEFEE 0xC0 BLOCKHASH BASEFEE PUSH21 0x687EC7B7EA5311B4D91AF76A2CF63E0E1E6E64736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "235:497:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;287:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;339:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;520:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;261:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:18;;;;;;;;;;;;;:::o;339:40::-;;;;:::o;312:20::-;;;;;;;;;;;;;:::o;520:209::-;580:5;;;;;;;;;;:18;;;599:10;619:4;626:9;;580:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;572:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;673:3;;;;;;;;;;;:20;;;694:5;;;;;;;;;;;701:10;713:7;673:48;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;520:209;:::o;261:19::-;;;;;;;;;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:141::-;550:9;583:37;614:5;583:37;:::i;:::-;570:50;;485:141;;;:::o;632:161::-;734:52;780:5;734:52;:::i;:::-;729:3;722:65;632:161;;:::o;799:252::-;907:4;945:2;934:9;930:18;922:26;;958:86;1041:1;1030:9;1026:17;1017:6;958:86;:::i;:::-;799:252;;;;:::o;1057:77::-;1094:7;1123:5;1112:16;;1057:77;;;:::o;1140:118::-;1227:24;1245:5;1227:24;:::i;:::-;1222:3;1215:37;1140:118;;:::o;1264:222::-;1357:4;1395:2;1384:9;1380:18;1372:26;;1408:71;1476:1;1465:9;1461:17;1452:6;1408:71;:::i;:::-;1264:222;;;;:::o;1492:96::-;1529:7;1558:24;1576:5;1558:24;:::i;:::-;1547:35;;1492:96;;;:::o;1594:118::-;1681:24;1699:5;1681:24;:::i;:::-;1676:3;1669:37;1594:118;;:::o;1718:222::-;1811:4;1849:2;1838:9;1834:18;1826:26;;1862:71;1930:1;1919:9;1915:17;1906:6;1862:71;:::i;:::-;1718:222;;;;:::o;2027:117::-;2136:1;2133;2126:12;2273:122;2346:24;2364:5;2346:24;:::i;:::-;2339:5;2336:35;2326:63;;2385:1;2382;2375:12;2326:63;2273:122;:::o;2401:139::-;2447:5;2485:6;2472:20;2463:29;;2501:33;2528:5;2501:33;:::i;:::-;2401:139;;;;:::o;2546:329::-;2605:6;2654:2;2642:9;2633:7;2629:23;2625:32;2622:119;;;2660:79;;:::i;:::-;2622:119;2780:1;2805:53;2850:7;2841:6;2830:9;2826:22;2805:53;:::i;:::-;2795:63;;2751:117;2546:329;;;;:::o;2881:140::-;2945:9;2978:37;3009:5;2978:37;:::i;:::-;2965:50;;2881:140;;;:::o;3027:159::-;3128:51;3173:5;3128:51;:::i;:::-;3123:3;3116:64;3027:159;;:::o;3192:250::-;3299:4;3337:2;3326:9;3322:18;3314:26;;3350:85;3432:1;3421:9;3417:17;3408:6;3350:85;:::i;:::-;3192:250;;;;:::o;3448:442::-;3597:4;3635:2;3624:9;3620:18;3612:26;;3648:71;3716:1;3705:9;3701:17;3692:6;3648:71;:::i;:::-;3729:72;3797:2;3786:9;3782:18;3773:6;3729:72;:::i;:::-;3811;3879:2;3868:9;3864:18;3855:6;3811:72;:::i;:::-;3448:442;;;;;;:::o;3896:90::-;3930:7;3973:5;3966:13;3959:21;3948:32;;3896:90;;;:::o;3992:116::-;4062:21;4077:5;4062:21;:::i;:::-;4055:5;4052:32;4042:60;;4098:1;4095;4088:12;4042:60;3992:116;:::o;4114:137::-;4168:5;4199:6;4193:13;4184:22;;4215:30;4239:5;4215:30;:::i;:::-;4114:137;;;;:::o;4257:345::-;4324:6;4373:2;4361:9;4352:7;4348:23;4344:32;4341:119;;;4379:79;;:::i;:::-;4341:119;4499:1;4524:61;4577:7;4568:6;4557:9;4553:22;4524:61;:::i;:::-;4514:71;;4470:125;4257:345;;;;:::o;4608:169::-;4692:11;4726:6;4721:3;4714:19;4766:4;4761:3;4757:14;4742:29;;4608:169;;;;:::o;4783:171::-;4923:23;4919:1;4911:6;4907:14;4900:47;4783:171;:::o;4960:366::-;5102:3;5123:67;5187:2;5182:3;5123:67;:::i;:::-;5116:74;;5199:93;5288:3;5199:93;:::i;:::-;5317:2;5312:3;5308:12;5301:19;;4960:366;;;:::o;5332:419::-;5498:4;5536:2;5525:9;5521:18;5513:26;;5585:9;5579:4;5575:20;5571:1;5560:9;5556:17;5549:47;5613:131;5739:4;5613:131;:::i;:::-;5605:139;;5332:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "294000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"mintNFT(uint256)": "infinite",
								"mintPrice()": "2425",
								"nft()": "infinite",
								"owner()": "2530",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 366,
									"end": 379,
									"name": "PUSH",
									"source": 5,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 339,
									"end": 379,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 339,
									"end": 379,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 512,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 388,
									"end": 512,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 512,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 512,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 388,
									"end": 512,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 388,
									"end": 512,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 388,
									"end": 512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 388,
									"end": 512,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 448,
									"end": 454,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 440,
									"end": 445,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 445,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 440,
									"end": 454,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 440,
									"end": 454,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 440,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 440,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 471,
									"end": 475,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 465,
									"end": 468,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 465,
									"end": 468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 475,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 465,
									"end": 475,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 465,
									"end": 475,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 465,
									"end": 475,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 465,
									"end": 475,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 494,
									"end": 504,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 486,
									"end": 491,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 486,
									"end": 491,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 486,
									"end": 504,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 486,
									"end": 504,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 486,
									"end": 504,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 486,
									"end": 504,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 486,
									"end": 504,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 388,
									"end": 512,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 235,
									"end": 732,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1069,
									"end": 1076,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1116,
									"end": 1121,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1098,
									"end": 1122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1098,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1122,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1286,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1134,
									"end": 1286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1255,
									"end": 1260,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1222,
									"end": 1261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1220,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1262,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1278,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1202,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1401,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1389,
									"end": 1402,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1380,
									"end": 1402,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1380,
									"end": 1402,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1453,
									"end": 1458,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1411,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1411,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1579,
									"end": 1585,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1593,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1636,
									"end": 1638,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1633,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1615,
									"end": 1622,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1634,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1639,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1642,
									"end": 1721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1857,
									"end": 1864,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1854,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1837,
									"end": 1846,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1833,
									"end": 1855,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1787,
									"end": 1865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1787,
									"end": 1865,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1865,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1777,
									"end": 1865,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1733,
									"end": 1875,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2011,
									"end": 2018,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1991,
									"end": 2000,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1987,
									"end": 2009,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1940,
									"end": 2019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1940,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2019,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1930,
									"end": 2019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 2029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 2036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 235,
									"end": 732,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 732,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 235,
									"end": 732,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 235,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 732,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cd9bbfd55d19838ff4ac0404874687ec7b7ea5311b4d91af76a2cf63e0e1e6e64736f6c634300081a0033",
									".code": [
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "47CCCA02"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "6817C76C"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "92642744"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 732,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 235,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 287,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 287,
											"end": 305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 339,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 339,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 312,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 312,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 520,
											"end": 729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 729,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 520,
											"end": 729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 520,
											"end": 729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 520,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 520,
											"end": 729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 520,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 261,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 261,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 287,
											"end": 305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 379,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 339,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 312,
											"end": 332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 312,
											"end": 332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 520,
											"end": 729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 580,
											"end": 585,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 598,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 580,
											"end": 598,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 619,
											"end": 623,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 626,
											"end": 635,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 626,
											"end": 635,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 580,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 580,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 636,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 580,
											"end": 636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 572,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 572,
											"end": 662,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 572,
											"end": 662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 673,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 673,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 676,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 673,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 673,
											"end": 676,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 676,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 673,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 676,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 673,
											"end": 693,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 693,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 673,
											"end": 693,
											"name": "PUSH",
											"source": 5,
											"value": "42842E0E"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 694,
											"end": 699,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 694,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 694,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 694,
											"end": 699,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 694,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 701,
											"end": 711,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 713,
											"end": 720,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 673,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 673,
											"end": 721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 520,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 261,
											"end": 280,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 261,
											"end": 280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 626,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 485,
											"end": 626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 550,
											"end": 559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 583,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 583,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 583,
											"end": 620,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 583,
											"end": 620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 570,
											"end": 620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 570,
											"end": 620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 485,
											"end": 626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 485,
											"end": 626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 793,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 632,
											"end": 793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 734,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 780,
											"end": 785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 734,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 734,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 734,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 734,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 729,
											"end": 732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 722,
											"end": 787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 632,
											"end": 793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 922,
											"end": 948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 922,
											"end": 948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1039,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 958,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 958,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 799,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 799,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1101,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1140,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1227,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1251,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1227,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1140,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1486,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1264,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1384,
											"end": 1393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1408,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1479,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1408,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1486,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1486,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1576,
											"end": 1581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1558,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1558,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1681,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1669,
											"end": 1706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1862,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2138,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2395,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2273,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2364,
											"end": 2369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2346,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2492,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2501,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2652,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2660,
											"end": 2739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2850,
											"end": 2857,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2839,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2805,
											"end": 2858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2978,
											"end": 3015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2978,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 3021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3173,
											"end": 3178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3128,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3339,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3326,
											"end": 3335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3350,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3350,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3624,
											"end": 3633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3620,
											"end": 3638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3714,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3648,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3719,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3648,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3786,
											"end": 3795,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3779,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3729,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3729,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3868,
											"end": 3877,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3811,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3883,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3811,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3986,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3896,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3980,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3896,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 4108,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3992,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4077,
											"end": 4082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4062,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4083,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4062,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4084,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 4108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3992,
											"end": 4108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4251,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4114,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4206,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4215,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4251,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4114,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4602,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4257,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4375,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4359,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4348,
											"end": 4371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4376,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4379,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4577,
											"end": 4584,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4557,
											"end": 4566,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4553,
											"end": 4575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4524,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4585,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4524,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 4585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 4585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4602,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4257,
											"end": 4602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4777,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4608,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4770,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4761,
											"end": 4764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4742,
											"end": 4771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4608,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4954,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 4783,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4947,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 5326,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4960,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 5182,
											"end": 5185,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5123,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5123,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5123,
											"end": 5190,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5123,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5190,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5288,
											"end": 5291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5199,
											"end": 5292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5292,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5199,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 5319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5312,
											"end": 5315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5301,
											"end": 5320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 5326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 5326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 5326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 5326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 5594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5575,
											"end": 5595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5613,
											"end": 5744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5605,
											"end": 5744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5605,
											"end": 5744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"NFTCollection.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"mintNFT(uint256)": "92642744",
							"mintPrice()": "6817c76c",
							"nft()": "47ccca02",
							"owner()": "8da5cb5b",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"_nft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTCollection.sol\":\"NFTMinter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"NFTCollection.sol\":{\"keccak256\":\"0x603cc47e3d9b9c4f30da207b8d05e1237f86ca5c71e7330451f9e0109d8dbd30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964adf0933e6af04b0357288a50f5d1dbf0cfa385bfefc083612948d1ac02802\",\"dweb:/ipfs/QmbGqiQWpGot2ScQ42zapBQ7JicmhyFRh6QEdCQimpBsSw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 392,
								"contract": "NFTCollection.sol:NFTMinter",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 395,
								"contract": "NFTCollection.sol:NFTMinter",
								"label": "nft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721)342"
							},
							{
								"astId": 397,
								"contract": "NFTCollection.sol:NFTMinter",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 404,
								"contract": "NFTCollection.sol:NFTMinter",
								"label": "mintPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)342": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							372
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 373,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 372,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 372,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								372
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							384
						],
						"IERC721": [
							342
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 385,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 384,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC165",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 384,
										"src": "288:7:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:2",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								384
							],
							"name": "IERC721",
							"nameLocation": "277:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 241,
									"name": "Transfer",
									"nameLocation": "401:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "410:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "432:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "452:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:2"
									},
									"src": "395:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 250,
									"name": "Approval",
									"nameLocation": "588:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "597:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "620:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "646:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:2"
									},
									"src": "582:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 259,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "820:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "843:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "869:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:2"
									},
									"src": "799:85:2"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "990:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1028:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:2"
									},
									"scope": 342,
									"src": "971:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:2"
									},
									"scope": 342,
									"src": "1187:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1861:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1875:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1887:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1904:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:2"
									},
									"scope": 342,
									"src": "1835:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2691:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:2"
									},
									"scope": 342,
									"src": "2651:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3495:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3509:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "3521:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:2"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:2"
									},
									"scope": 342,
									"src": "3473:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4027:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4039:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:2"
									},
									"scope": 342,
									"src": "4010:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4418:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4436:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:2"
									},
									"scope": 342,
									"src": "4391:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4631:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4671:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:2"
									},
									"scope": 342,
									"src": "4610:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4864:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4879:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4920:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:2"
									},
									"scope": 342,
									"src": "4838:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 343,
							"src": "267:4661:2",
							"usedErrors": [],
							"usedEvents": [
								241,
								250,
								259
							]
						}
					],
					"src": "108:4821:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							372
						]
					},
					"id": 373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 372,
							"linearizedBaseContracts": [
								372
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 350,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 349,
												"id": 352,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 372,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 359,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 358,
												"id": 361,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 372,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 367,
												"id": 369,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 372,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 373,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							384
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 375,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 384,
							"linearizedBaseContracts": [
								384
							],
							"name": "IERC165",
							"nameLocation": "432:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 377,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "861:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:4"
									},
									"scope": 384,
									"src": "791:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "422:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:4"
				},
				"id": 4
			},
			"NFTCollection.sol": {
				"ast": {
					"absolutePath": "NFTCollection.sol",
					"exportedSymbols": {
						"Context": [
							372
						],
						"IERC165": [
							384
						],
						"IERC20": [
							225
						],
						"IERC721": [
							342
						],
						"NFTMinter": [
							457
						],
						"Ownable": [
							147
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 226,
							"src": "61:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 343,
							"src": "119:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 148,
							"src": "179:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NFTMinter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "NFTMinter",
							"nameLocation": "244:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 392,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "275:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "261:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 391,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 390,
											"name": "IERC20",
											"nameLocations": [
												"261:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "261:6:5"
										},
										"referencedDeclaration": 225,
										"src": "261:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 395,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "302:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "287:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$342",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 394,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 393,
											"name": "IERC721",
											"nameLocations": [
												"287:7:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 342,
											"src": "287:7:5"
										},
										"referencedDeclaration": 342,
										"src": "287:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$342",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 397,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "327:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "312:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 396,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6817c76c",
									"id": 404,
									"mutability": "mutable",
									"name": "mintPrice",
									"nameLocation": "354:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "339:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 399,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "366:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "371:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 401,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "377:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "371:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "366:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "429:83:5",
										"statements": [
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "440:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 414,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "448:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "440:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "440:14:5"
											},
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "465:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$342",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 418,
														"name": "_nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "471:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$342",
															"typeString": "contract IERC721"
														}
													},
													"src": "465:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$342",
														"typeString": "contract IERC721"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "465:10:5"
											},
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "486:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 422,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "494:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "498:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "494:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "486:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "486:18:5"
											}
										]
									},
									"id": 427,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "407:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "400:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC20",
														"nameLocations": [
															"400:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "400:6:5"
													},
													"referencedDeclaration": 225,
													"src": "400:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_nft",
												"nameLocation": "423:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "415:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$342",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 409,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 408,
														"name": "IERC721",
														"nameLocations": [
															"415:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 342,
														"src": "415:7:5"
													},
													"referencedDeclaration": 342,
													"src": "415:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$342",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:29:5"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:5"
									},
									"scope": 457,
									"src": "388:124:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "561:168:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 435,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "599:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "603:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "599:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 439,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "619:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_NFTMinter_$457",
																				"typeString": "contract NFTMinter"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_NFTMinter_$457",
																				"typeString": "contract NFTMinter"
																			}
																		],
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "611:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 437,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "611:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "611:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 441,
																	"name": "mintPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "626:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 433,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "580:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "586:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "580:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "580:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "638:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "572:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "572:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "572:90:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "694:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 450,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "701:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "705:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "701:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 446,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "673:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$342",
																"typeString": "contract IERC721"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "677:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 297,
														"src": "673:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "673:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "673:48:5"
											}
										]
									},
									"functionSelector": "92642744",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "529:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "545:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "537:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:17:5"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:5"
									},
									"scope": 457,
									"src": "520:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 458,
							"src": "235:497:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:701:5"
				},
				"id": 5
			}
		}
	}
}